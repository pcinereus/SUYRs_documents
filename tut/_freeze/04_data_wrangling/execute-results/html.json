{
  "hash": "4c099bef63465a7d5182803dce204c4f",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Data wrangling (tidyverse and friends)\nauthor: \"Murray Logan\"\ndate: \"19 July, 2024\"\nformat: \n  html:\n    toc: true\n    toc-float: true\n    page-layout: full\n    number-sections: true\n    number-depth: 3\n    embed-resources: true\n    code-fold: false\n    code-tools: true\n    code-summary: \"Show the code\"\n    code-line-numbers: true\n    code-block-border-left: \"#ccc\"\n    code-copy: true\n    highlight-style: atom-one\n    theme: [default, ../resources/tut-style.scss]\n    css: ../resources/tut-style.css\ncrossref:\n  fig-title: '**Figure**'\n  fig-labels: arabic\n  tbl-title: '**Table**'\n  tbl-labels: arabic\nengine: knitr\nbibliography: ../resources/references.bib\noutput_dir: \"docs\"\n---\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\n\nI apologize in advance, this tutorial requires quite a bit of\nexplaining and context before it can get into the code.... Good data\nmanipulation is an art form that requires the use of many specific\ntools (functions) and expert data manipulation comes from the\nintegration of these tools together. Therefore it is necessary to have\nan overview of the tool set before investigating any single tool.\n     \n\n# Manipulating data sets \n\nRarely are data transcribed and organised into such simple and\nready-to-go data sets.  More typically, data are spread throughout\nmultiple sources and in a variety of formats (particularly if compiled\nby multiple workers or instruments).  Consequently, prior to any\nformal statistical analyses , it is necessary to compile very focused,\n**tidy** data sets.\n\n@Wickham-2014-59 suggested that there are many ways to organise data,\nyet tidy data (data that are structured in such a consistent way as to\nfacilitate analyses) must adhere to a fairly strict set of structural\nrules. Specifically, in tidy data: \n\n- **variables** are in columns\n- **observations** are in rows - that is, for univariate data, there\n  should be a separate row for each response observation.\n\n\n\n::: {.cell fig_width='6' fig_height='3' class='tikz'}\n::: {.cell-output-display}\n![](04_data_wrangling_files/figure-html/tidy1Tikz-1.png){width=672}\n:::\n:::\n\n\n\nTo achieve tidy data, common data preparations include:\n\n- Reshaping and rearranging data\n- Merging multiple data sources\n- Aggregating data to appropriate spatial/temporal scales\n- Transforming data and deriving new variables\n- Sorting and reordering data\n- Relabelling data\n\nThis workshop will concentrate on these essential data preparation\nphases.\n\n\nPractical data manipulation will be demonstrated via a series of very\nsmall artificial datasets.  These datasets are presented in tables\nwith black font and lines and the R code required to generate those\ndata will be presented in static code boxes either underneath or\nadjacent the table.  A very basic description of the table and the\nname of the data frame are displayed above the table.  The entire\ncollection of datasets used in this workshop can be obtained by\nissuing the following command:\n\n- (if online)\n\n\n\n  ::: {.cell}\n  \n  ```{.r .cell-code}\n  source(\"https://github.com/ReefCloud/workshops/tree/main/data/manipulationDatasets.R\")\n  ##OR\n  load(url(\"https://github.com/ReefCloud/workshops/tree/main/data/manipulationDatasets.R\"))\n  ```\n  :::\n\n\n\n\n- (if offline and are running this from a local version having first\n  cloned the [ReefCloud Workshop github repository](https://github.com/ReefCloud/workshops)\n\n\n\n  ::: {.cell}\n  \n  ```{.r .cell-code}\n  source(file=\"data/manipulationDatasets.R\")\n  ##OR\n  load(file = \"data/manipulationDatasets.RData\")\n  ```\n  :::\n\n\n\nAn overview of the example data sets follows.\n\nAn overview of the example data sets follows.\n\n::: panel-tabset\n\n## dat.1\n\nThese data comprise two Responses (`Resp1` and `Resp2`) that are each\nobserved on four occasions (`Time`) from each of three dosage\ntreatments (`Dose`) nested within four plots (`Plot`). Two of the four\nplots completely excluded something and the other two were controls\n(did not exclude the thing).\n\n\n\n::: {.cell class='tikz'}\n::: {.cell-output-display}\n![](04_data_wrangling_files/figure-html/tikz_dat1-1.png){width=672}\n:::\n:::\n\n\n\n<details><summary>View data</summary>\n\n\n`````{=html}\n<table class=\"paperTable\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> Treatment </th>\n   <th style=\"text-align:left;\"> Plot </th>\n   <th style=\"text-align:left;\"> Dose </th>\n   <th style=\"text-align:right;\"> Time </th>\n   <th style=\"text-align:right;\"> Resp1 </th>\n   <th style=\"text-align:right;\"> Resp2 </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> Control </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> H </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 8.12 </td>\n   <td style=\"text-align:right;\"> 3.06 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Control </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> H </td>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:right;\"> 20.55 </td>\n   <td style=\"text-align:right;\"> 25.94 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Control </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> H </td>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:right;\"> 27.49 </td>\n   <td style=\"text-align:right;\"> 29.85 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Control </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> H </td>\n   <td style=\"text-align:right;\"> 4 </td>\n   <td style=\"text-align:right;\"> 44.79 </td>\n   <td style=\"text-align:right;\"> 25.39 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Control </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> M </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 20.99 </td>\n   <td style=\"text-align:right;\"> 20.31 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Control </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> M </td>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:right;\"> 37.54 </td>\n   <td style=\"text-align:right;\"> 17.62 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Control </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> M </td>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:right;\"> 61.46 </td>\n   <td style=\"text-align:right;\"> 98.44 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Control </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> M </td>\n   <td style=\"text-align:right;\"> 4 </td>\n   <td style=\"text-align:right;\"> 82.21 </td>\n   <td style=\"text-align:right;\"> 160.01 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Control </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> L </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 31.73 </td>\n   <td style=\"text-align:right;\"> 21.22 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Control </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> L </td>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:right;\"> 59.08 </td>\n   <td style=\"text-align:right;\"> 37.51 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Control </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> L </td>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:right;\"> 94.54 </td>\n   <td style=\"text-align:right;\"> 119.22 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Control </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> L </td>\n   <td style=\"text-align:right;\"> 4 </td>\n   <td style=\"text-align:right;\"> 121.17 </td>\n   <td style=\"text-align:right;\"> 116.45 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Control </td>\n   <td style=\"text-align:left;\"> P2 </td>\n   <td style=\"text-align:left;\"> H </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 8.14 </td>\n   <td style=\"text-align:right;\"> 23.93 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Control </td>\n   <td style=\"text-align:left;\"> P2 </td>\n   <td style=\"text-align:left;\"> H </td>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:right;\"> 13.36 </td>\n   <td style=\"text-align:right;\"> 28.02 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Control </td>\n   <td style=\"text-align:left;\"> P2 </td>\n   <td style=\"text-align:left;\"> H </td>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:right;\"> 33.37 </td>\n   <td style=\"text-align:right;\"> 37.17 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Control </td>\n   <td style=\"text-align:left;\"> P2 </td>\n   <td style=\"text-align:left;\"> H </td>\n   <td style=\"text-align:right;\"> 4 </td>\n   <td style=\"text-align:right;\"> 39.87 </td>\n   <td style=\"text-align:right;\"> 38.25 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Control </td>\n   <td style=\"text-align:left;\"> P2 </td>\n   <td style=\"text-align:left;\"> M </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 19.95 </td>\n   <td style=\"text-align:right;\"> 19.73 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Control </td>\n   <td style=\"text-align:left;\"> P2 </td>\n   <td style=\"text-align:left;\"> M </td>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:right;\"> 42.83 </td>\n   <td style=\"text-align:right;\"> 40.52 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Control </td>\n   <td style=\"text-align:left;\"> P2 </td>\n   <td style=\"text-align:left;\"> M </td>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:right;\"> 62.46 </td>\n   <td style=\"text-align:right;\"> 4.81 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Control </td>\n   <td style=\"text-align:left;\"> P2 </td>\n   <td style=\"text-align:left;\"> M </td>\n   <td style=\"text-align:right;\"> 4 </td>\n   <td style=\"text-align:right;\"> 81.78 </td>\n   <td style=\"text-align:right;\"> 136.66 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Control </td>\n   <td style=\"text-align:left;\"> P2 </td>\n   <td style=\"text-align:left;\"> L </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 32.76 </td>\n   <td style=\"text-align:right;\"> 30.70 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Control </td>\n   <td style=\"text-align:left;\"> P2 </td>\n   <td style=\"text-align:left;\"> L </td>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:right;\"> 62.35 </td>\n   <td style=\"text-align:right;\"> 123.78 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Control </td>\n   <td style=\"text-align:left;\"> P2 </td>\n   <td style=\"text-align:left;\"> L </td>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:right;\"> 90.22 </td>\n   <td style=\"text-align:right;\"> 113.87 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Control </td>\n   <td style=\"text-align:left;\"> P2 </td>\n   <td style=\"text-align:left;\"> L </td>\n   <td style=\"text-align:right;\"> 4 </td>\n   <td style=\"text-align:right;\"> 114.03 </td>\n   <td style=\"text-align:right;\"> 76.52 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Exclusion </td>\n   <td style=\"text-align:left;\"> P3 </td>\n   <td style=\"text-align:left;\"> H </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 21.86 </td>\n   <td style=\"text-align:right;\"> 23.58 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Exclusion </td>\n   <td style=\"text-align:left;\"> P3 </td>\n   <td style=\"text-align:left;\"> H </td>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:right;\"> 39.83 </td>\n   <td style=\"text-align:right;\"> 28.03 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Exclusion </td>\n   <td style=\"text-align:left;\"> P3 </td>\n   <td style=\"text-align:left;\"> H </td>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:right;\"> 59.53 </td>\n   <td style=\"text-align:right;\"> 21.32 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Exclusion </td>\n   <td style=\"text-align:left;\"> P3 </td>\n   <td style=\"text-align:left;\"> H </td>\n   <td style=\"text-align:right;\"> 4 </td>\n   <td style=\"text-align:right;\"> 75.59 </td>\n   <td style=\"text-align:right;\"> 90.76 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Exclusion </td>\n   <td style=\"text-align:left;\"> P3 </td>\n   <td style=\"text-align:left;\"> M </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 38.57 </td>\n   <td style=\"text-align:right;\"> 30.63 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Exclusion </td>\n   <td style=\"text-align:left;\"> P3 </td>\n   <td style=\"text-align:left;\"> M </td>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:right;\"> 81.25 </td>\n   <td style=\"text-align:right;\"> 83.61 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Exclusion </td>\n   <td style=\"text-align:left;\"> P3 </td>\n   <td style=\"text-align:left;\"> M </td>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:right;\"> 124.08 </td>\n   <td style=\"text-align:right;\"> 124.09 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Exclusion </td>\n   <td style=\"text-align:left;\"> P3 </td>\n   <td style=\"text-align:left;\"> M </td>\n   <td style=\"text-align:right;\"> 4 </td>\n   <td style=\"text-align:right;\"> 159.69 </td>\n   <td style=\"text-align:right;\"> 112.65 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Exclusion </td>\n   <td style=\"text-align:left;\"> P3 </td>\n   <td style=\"text-align:left;\"> L </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 61.16 </td>\n   <td style=\"text-align:right;\"> 39.53 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Exclusion </td>\n   <td style=\"text-align:left;\"> P3 </td>\n   <td style=\"text-align:left;\"> L </td>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:right;\"> 119.84 </td>\n   <td style=\"text-align:right;\"> 110.27 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Exclusion </td>\n   <td style=\"text-align:left;\"> P3 </td>\n   <td style=\"text-align:left;\"> L </td>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:right;\"> 175.87 </td>\n   <td style=\"text-align:right;\"> 286.33 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Exclusion </td>\n   <td style=\"text-align:left;\"> P3 </td>\n   <td style=\"text-align:left;\"> L </td>\n   <td style=\"text-align:right;\"> 4 </td>\n   <td style=\"text-align:right;\"> 238.76 </td>\n   <td style=\"text-align:right;\"> 54.23 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Exclusion </td>\n   <td style=\"text-align:left;\"> P4 </td>\n   <td style=\"text-align:left;\"> H </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 18.82 </td>\n   <td style=\"text-align:right;\"> 28.60 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Exclusion </td>\n   <td style=\"text-align:left;\"> P4 </td>\n   <td style=\"text-align:left;\"> H </td>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:right;\"> 39.82 </td>\n   <td style=\"text-align:right;\"> 39.07 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Exclusion </td>\n   <td style=\"text-align:left;\"> P4 </td>\n   <td style=\"text-align:left;\"> H </td>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:right;\"> 63.30 </td>\n   <td style=\"text-align:right;\"> 93.43 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Exclusion </td>\n   <td style=\"text-align:left;\"> P4 </td>\n   <td style=\"text-align:left;\"> H </td>\n   <td style=\"text-align:right;\"> 4 </td>\n   <td style=\"text-align:right;\"> 82.29 </td>\n   <td style=\"text-align:right;\"> 60.15 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Exclusion </td>\n   <td style=\"text-align:left;\"> P4 </td>\n   <td style=\"text-align:left;\"> M </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 39.51 </td>\n   <td style=\"text-align:right;\"> 45.90 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Exclusion </td>\n   <td style=\"text-align:left;\"> P4 </td>\n   <td style=\"text-align:left;\"> M </td>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:right;\"> 79.24 </td>\n   <td style=\"text-align:right;\"> 88.04 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Exclusion </td>\n   <td style=\"text-align:left;\"> P4 </td>\n   <td style=\"text-align:left;\"> M </td>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:right;\"> 122.09 </td>\n   <td style=\"text-align:right;\"> 84.19 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Exclusion </td>\n   <td style=\"text-align:left;\"> P4 </td>\n   <td style=\"text-align:left;\"> M </td>\n   <td style=\"text-align:right;\"> 4 </td>\n   <td style=\"text-align:right;\"> 161.67 </td>\n   <td style=\"text-align:right;\"> 256.34 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Exclusion </td>\n   <td style=\"text-align:left;\"> P4 </td>\n   <td style=\"text-align:left;\"> L </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 57.93 </td>\n   <td style=\"text-align:right;\"> 85.24 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Exclusion </td>\n   <td style=\"text-align:left;\"> P4 </td>\n   <td style=\"text-align:left;\"> L </td>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:right;\"> 117.88 </td>\n   <td style=\"text-align:right;\"> 167.90 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Exclusion </td>\n   <td style=\"text-align:left;\"> P4 </td>\n   <td style=\"text-align:left;\"> L </td>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:right;\"> 181.09 </td>\n   <td style=\"text-align:right;\"> 314.49 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Exclusion </td>\n   <td style=\"text-align:left;\"> P4 </td>\n   <td style=\"text-align:left;\"> L </td>\n   <td style=\"text-align:right;\"> 4 </td>\n   <td style=\"text-align:right;\"> 242.31 </td>\n   <td style=\"text-align:right;\"> 304.70 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n\n\n</details>\n\n**Note** as this data set is 48 rows long, the majority examples that\nfeature this dataset will only show the first 6 (or 10) rows to save\non space.  This truncation will occur via the `head()` _function_.\n\n## data.w\n\nThese data comprise a Response observed on three occasions (`Time.0`,\n`Time.1` and `Time.2`) from each of two (`A1` and `A2`) treatments\n(`Between`, gridded or not) nested within four plots (`Plot`).\n\n\n\n::: {.cell class='tikz'}\n::: {.cell-output-display}\n![](04_data_wrangling_files/figure-html/tikz_datw-1.png){width=672}\n:::\n:::\n\n\n\n<details><summary>View data</summary>\n\n\n`````{=html}\n<table class=\"paperTable\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;\">   </th>\n   <th style=\"text-align:left;\"> Plot </th>\n   <th style=\"text-align:left;\"> Between </th>\n   <th style=\"text-align:right;\"> Time.0 </th>\n   <th style=\"text-align:right;\"> Time.1 </th>\n   <th style=\"text-align:right;\"> Time.2 </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> R1 </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> A1 </td>\n   <td style=\"text-align:right;\"> 8 </td>\n   <td style=\"text-align:right;\"> 14 </td>\n   <td style=\"text-align:right;\"> 14 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> R2 </td>\n   <td style=\"text-align:left;\"> P2 </td>\n   <td style=\"text-align:left;\"> A1 </td>\n   <td style=\"text-align:right;\"> 10 </td>\n   <td style=\"text-align:right;\"> 12 </td>\n   <td style=\"text-align:right;\"> 11 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> R3 </td>\n   <td style=\"text-align:left;\"> P3 </td>\n   <td style=\"text-align:left;\"> A2 </td>\n   <td style=\"text-align:right;\"> 7 </td>\n   <td style=\"text-align:right;\"> 11 </td>\n   <td style=\"text-align:right;\"> 8 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> R4 </td>\n   <td style=\"text-align:left;\"> P4 </td>\n   <td style=\"text-align:left;\"> A2 </td>\n   <td style=\"text-align:right;\"> 11 </td>\n   <td style=\"text-align:right;\"> 9 </td>\n   <td style=\"text-align:right;\"> 2 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n\n\n</details>\n\n## data\n\nSimilar to `dat.1`, these data comprise two Responses (`Resp1` and\n`Resp2`).  However, these data have a different hierarchical structure.  Each response was measured from one of two `Subplot`s nested within one of six `Plot`s.  Within each `Subplot` each of two treatment levels (`B1` and `B2`) were applied and two of the `Plot`s where exposed to one of the three `Between` levels.\n\n\n\n::: {.cell class='tikz'}\n::: {.cell-output-display}\n![](04_data_wrangling_files/figure-html/tikz_data-1.png){width=672}\n:::\n:::\n\n\n\n<details><summary>View data</summary>\n\n\n`````{=html}\n<table class=\"paperTable\">\n <thead>\n  <tr>\n   <th style=\"text-align:right;\"> Resp1 </th>\n   <th style=\"text-align:right;\"> Resp2 </th>\n   <th style=\"text-align:left;\"> Between </th>\n   <th style=\"text-align:left;\"> Plot </th>\n   <th style=\"text-align:left;\"> Subplot </th>\n   <th style=\"text-align:left;\"> Within </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:right;\"> 8 </td>\n   <td style=\"text-align:right;\"> 17 </td>\n   <td style=\"text-align:left;\"> A1 </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> S1 </td>\n   <td style=\"text-align:left;\"> B1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 10 </td>\n   <td style=\"text-align:right;\"> 18 </td>\n   <td style=\"text-align:left;\"> A1 </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> S1 </td>\n   <td style=\"text-align:left;\"> B2 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 7 </td>\n   <td style=\"text-align:right;\"> 17 </td>\n   <td style=\"text-align:left;\"> A1 </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> S2 </td>\n   <td style=\"text-align:left;\"> B1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 11 </td>\n   <td style=\"text-align:right;\"> 21 </td>\n   <td style=\"text-align:left;\"> A1 </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> S2 </td>\n   <td style=\"text-align:left;\"> B2 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 14 </td>\n   <td style=\"text-align:right;\"> 19 </td>\n   <td style=\"text-align:left;\"> A2 </td>\n   <td style=\"text-align:left;\"> P2 </td>\n   <td style=\"text-align:left;\"> S3 </td>\n   <td style=\"text-align:left;\"> B1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 12 </td>\n   <td style=\"text-align:right;\"> 13 </td>\n   <td style=\"text-align:left;\"> A2 </td>\n   <td style=\"text-align:left;\"> P2 </td>\n   <td style=\"text-align:left;\"> S3 </td>\n   <td style=\"text-align:left;\"> B2 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 11 </td>\n   <td style=\"text-align:right;\"> 24 </td>\n   <td style=\"text-align:left;\"> A2 </td>\n   <td style=\"text-align:left;\"> P2 </td>\n   <td style=\"text-align:left;\"> S4 </td>\n   <td style=\"text-align:left;\"> B1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 9 </td>\n   <td style=\"text-align:right;\"> 18 </td>\n   <td style=\"text-align:left;\"> A2 </td>\n   <td style=\"text-align:left;\"> P2 </td>\n   <td style=\"text-align:left;\"> S4 </td>\n   <td style=\"text-align:left;\"> B2 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 14 </td>\n   <td style=\"text-align:right;\"> 25 </td>\n   <td style=\"text-align:left;\"> A3 </td>\n   <td style=\"text-align:left;\"> P3 </td>\n   <td style=\"text-align:left;\"> S5 </td>\n   <td style=\"text-align:left;\"> B1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 11 </td>\n   <td style=\"text-align:right;\"> 18 </td>\n   <td style=\"text-align:left;\"> A3 </td>\n   <td style=\"text-align:left;\"> P3 </td>\n   <td style=\"text-align:left;\"> S5 </td>\n   <td style=\"text-align:left;\"> B2 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 8 </td>\n   <td style=\"text-align:right;\"> 27 </td>\n   <td style=\"text-align:left;\"> A3 </td>\n   <td style=\"text-align:left;\"> P3 </td>\n   <td style=\"text-align:left;\"> S6 </td>\n   <td style=\"text-align:left;\"> B1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:right;\"> 22 </td>\n   <td style=\"text-align:left;\"> A3 </td>\n   <td style=\"text-align:left;\"> P3 </td>\n   <td style=\"text-align:left;\"> S6 </td>\n   <td style=\"text-align:left;\"> B2 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 8 </td>\n   <td style=\"text-align:right;\"> 17 </td>\n   <td style=\"text-align:left;\"> A1 </td>\n   <td style=\"text-align:left;\"> P4 </td>\n   <td style=\"text-align:left;\"> S7 </td>\n   <td style=\"text-align:left;\"> B1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 10 </td>\n   <td style=\"text-align:right;\"> 22 </td>\n   <td style=\"text-align:left;\"> A1 </td>\n   <td style=\"text-align:left;\"> P4 </td>\n   <td style=\"text-align:left;\"> S7 </td>\n   <td style=\"text-align:left;\"> B2 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 7 </td>\n   <td style=\"text-align:right;\"> 16 </td>\n   <td style=\"text-align:left;\"> A1 </td>\n   <td style=\"text-align:left;\"> P4 </td>\n   <td style=\"text-align:left;\"> S8 </td>\n   <td style=\"text-align:left;\"> B1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 12 </td>\n   <td style=\"text-align:right;\"> 13 </td>\n   <td style=\"text-align:left;\"> A1 </td>\n   <td style=\"text-align:left;\"> P4 </td>\n   <td style=\"text-align:left;\"> S8 </td>\n   <td style=\"text-align:left;\"> B2 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 11 </td>\n   <td style=\"text-align:right;\"> 23 </td>\n   <td style=\"text-align:left;\"> A2 </td>\n   <td style=\"text-align:left;\"> P5 </td>\n   <td style=\"text-align:left;\"> S9 </td>\n   <td style=\"text-align:left;\"> B1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 12 </td>\n   <td style=\"text-align:right;\"> 19 </td>\n   <td style=\"text-align:left;\"> A2 </td>\n   <td style=\"text-align:left;\"> P5 </td>\n   <td style=\"text-align:left;\"> S9 </td>\n   <td style=\"text-align:left;\"> B2 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 12 </td>\n   <td style=\"text-align:right;\"> 23 </td>\n   <td style=\"text-align:left;\"> A2 </td>\n   <td style=\"text-align:left;\"> P5 </td>\n   <td style=\"text-align:left;\"> S10 </td>\n   <td style=\"text-align:left;\"> B1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 10 </td>\n   <td style=\"text-align:right;\"> 21 </td>\n   <td style=\"text-align:left;\"> A2 </td>\n   <td style=\"text-align:left;\"> P5 </td>\n   <td style=\"text-align:left;\"> S10 </td>\n   <td style=\"text-align:left;\"> B2 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:right;\"> 17 </td>\n   <td style=\"text-align:left;\"> A3 </td>\n   <td style=\"text-align:left;\"> P6 </td>\n   <td style=\"text-align:left;\"> S11 </td>\n   <td style=\"text-align:left;\"> B1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 11 </td>\n   <td style=\"text-align:right;\"> 16 </td>\n   <td style=\"text-align:left;\"> A3 </td>\n   <td style=\"text-align:left;\"> P6 </td>\n   <td style=\"text-align:left;\"> S11 </td>\n   <td style=\"text-align:left;\"> B2 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 13 </td>\n   <td style=\"text-align:right;\"> 26 </td>\n   <td style=\"text-align:left;\"> A3 </td>\n   <td style=\"text-align:left;\"> P6 </td>\n   <td style=\"text-align:left;\"> S12 </td>\n   <td style=\"text-align:left;\"> B1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 7 </td>\n   <td style=\"text-align:right;\"> 28 </td>\n   <td style=\"text-align:left;\"> A3 </td>\n   <td style=\"text-align:left;\"> P6 </td>\n   <td style=\"text-align:left;\"> S12 </td>\n   <td style=\"text-align:left;\"> B2 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n\n\n</details>\n\n\n## data.d\n\nThe `data.d` data comprise of a single response (`Resp1`) collected on different days.\nThe three different components of the dates have been recorded in three different columns corresponding to the `year`, `month` and `day`.\n\n<details><summary>View data</summary>\n\n\n`````{=html}\n<table class=\"paperTable\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> year </th>\n   <th style=\"text-align:left;\"> month </th>\n   <th style=\"text-align:left;\"> day </th>\n   <th style=\"text-align:right;\"> Resp1 </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> 2009 </td>\n   <td style=\"text-align:left;\"> 11 </td>\n   <td style=\"text-align:left;\"> 09 </td>\n   <td style=\"text-align:right;\"> 25 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2008 </td>\n   <td style=\"text-align:left;\"> 05 </td>\n   <td style=\"text-align:left;\"> 08 </td>\n   <td style=\"text-align:right;\"> 52 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2009 </td>\n   <td style=\"text-align:left;\"> 05 </td>\n   <td style=\"text-align:left;\"> 23 </td>\n   <td style=\"text-align:right;\"> 18 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2009 </td>\n   <td style=\"text-align:left;\"> 04 </td>\n   <td style=\"text-align:left;\"> 15 </td>\n   <td style=\"text-align:right;\"> 21 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2008 </td>\n   <td style=\"text-align:left;\"> 10 </td>\n   <td style=\"text-align:left;\"> 25 </td>\n   <td style=\"text-align:right;\"> 45 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2008 </td>\n   <td style=\"text-align:left;\"> 09 </td>\n   <td style=\"text-align:left;\"> 26 </td>\n   <td style=\"text-align:right;\"> 40 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2008 </td>\n   <td style=\"text-align:left;\"> 07 </td>\n   <td style=\"text-align:left;\"> 05 </td>\n   <td style=\"text-align:right;\"> 38 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2008 </td>\n   <td style=\"text-align:left;\"> 11 </td>\n   <td style=\"text-align:left;\"> 02 </td>\n   <td style=\"text-align:right;\"> 9 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2009 </td>\n   <td style=\"text-align:left;\"> 08 </td>\n   <td style=\"text-align:left;\"> 19 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2008 </td>\n   <td style=\"text-align:left;\"> 10 </td>\n   <td style=\"text-align:left;\"> 03 </td>\n   <td style=\"text-align:right;\"> 20 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n\n\n</details>\n\n## data.bio\n\nThe `data.bio` dataset represents a design that is like a cut down\nversion of `data` in which there are no `Within` `Subplot` levels and\nthus there are also fewer rows.\n\n\n\n::: {.cell class='tikz'}\n::: {.cell-output-display}\n![](04_data_wrangling_files/figure-html/tikz_databio-1.png){width=672}\n:::\n:::\n\n\n\n<details><summary>View data</summary>\n\n\n`````{=html}\n<table class=\"paperTable\">\n <thead>\n  <tr>\n   <th style=\"text-align:right;\"> Resp1 </th>\n   <th style=\"text-align:right;\"> Resp2 </th>\n   <th style=\"text-align:left;\"> Between </th>\n   <th style=\"text-align:left;\"> Plot </th>\n   <th style=\"text-align:left;\"> Subplot </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:right;\"> 8 </td>\n   <td style=\"text-align:right;\"> 18 </td>\n   <td style=\"text-align:left;\"> A1 </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> S1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 10 </td>\n   <td style=\"text-align:right;\"> 21 </td>\n   <td style=\"text-align:left;\"> A1 </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> S2 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 11 </td>\n   <td style=\"text-align:right;\"> 23 </td>\n   <td style=\"text-align:left;\"> A1 </td>\n   <td style=\"text-align:left;\"> P2 </td>\n   <td style=\"text-align:left;\"> S4 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 14 </td>\n   <td style=\"text-align:right;\"> 22 </td>\n   <td style=\"text-align:left;\"> A2 </td>\n   <td style=\"text-align:left;\"> P3 </td>\n   <td style=\"text-align:left;\"> S5 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 12 </td>\n   <td style=\"text-align:right;\"> 24 </td>\n   <td style=\"text-align:left;\"> A2 </td>\n   <td style=\"text-align:left;\"> P3 </td>\n   <td style=\"text-align:left;\"> S6 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 11 </td>\n   <td style=\"text-align:right;\"> 23 </td>\n   <td style=\"text-align:left;\"> A2 </td>\n   <td style=\"text-align:left;\"> P4 </td>\n   <td style=\"text-align:left;\"> S7 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 9 </td>\n   <td style=\"text-align:right;\"> 20 </td>\n   <td style=\"text-align:left;\"> A2 </td>\n   <td style=\"text-align:left;\"> P4 </td>\n   <td style=\"text-align:left;\"> S8 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 14 </td>\n   <td style=\"text-align:right;\"> 11 </td>\n   <td style=\"text-align:left;\"> A3 </td>\n   <td style=\"text-align:left;\"> P5 </td>\n   <td style=\"text-align:left;\"> S9 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 11 </td>\n   <td style=\"text-align:right;\"> 22 </td>\n   <td style=\"text-align:left;\"> A3 </td>\n   <td style=\"text-align:left;\"> P5 </td>\n   <td style=\"text-align:left;\"> S10 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 8 </td>\n   <td style=\"text-align:right;\"> 24 </td>\n   <td style=\"text-align:left;\"> A3 </td>\n   <td style=\"text-align:left;\"> P6 </td>\n   <td style=\"text-align:left;\"> S11 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:right;\"> 16 </td>\n   <td style=\"text-align:left;\"> A3 </td>\n   <td style=\"text-align:left;\"> P6 </td>\n   <td style=\"text-align:left;\"> S12 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n\n\n</details>\n\n\n## data.chem\n\nThe `data.chem` dataset represents the same design as the `data.bio`\ndata except that rather than contain two biological response, it has\ntwo chemical measurements (`Chem1` and `Chem2`) collected from the\nsame sampling units as the biological responses.\n\n\n\n::: {.cell class='tikz'}\n::: {.cell-output-display}\n![](04_data_wrangling_files/figure-html/tikz_datachem-1.png){width=672}\n:::\n:::\n\n\n\n<details><summary>View data</summary>\n\n\n`````{=html}\n<table class=\"paperTable\">\n <thead>\n  <tr>\n   <th style=\"text-align:right;\"> Chem1 </th>\n   <th style=\"text-align:right;\"> Chem2 </th>\n   <th style=\"text-align:left;\"> Between </th>\n   <th style=\"text-align:left;\"> Plot </th>\n   <th style=\"text-align:left;\"> Subplot </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:right;\"> 1.452878 </td>\n   <td style=\"text-align:right;\"> 0.8858208 </td>\n   <td style=\"text-align:left;\"> A1 </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> S1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 3.266253 </td>\n   <td style=\"text-align:right;\"> 0.1800177 </td>\n   <td style=\"text-align:left;\"> A1 </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> S2 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 1.178652 </td>\n   <td style=\"text-align:right;\"> 5.0780682 </td>\n   <td style=\"text-align:left;\"> A1 </td>\n   <td style=\"text-align:left;\"> P2 </td>\n   <td style=\"text-align:left;\"> S3 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 13.400350 </td>\n   <td style=\"text-align:right;\"> 1.5762780 </td>\n   <td style=\"text-align:left;\"> A1 </td>\n   <td style=\"text-align:left;\"> P2 </td>\n   <td style=\"text-align:left;\"> S4 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 3.779183 </td>\n   <td style=\"text-align:right;\"> 1.6222430 </td>\n   <td style=\"text-align:left;\"> A2 </td>\n   <td style=\"text-align:left;\"> P3 </td>\n   <td style=\"text-align:left;\"> S5 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 1.196657 </td>\n   <td style=\"text-align:right;\"> 4.2369184 </td>\n   <td style=\"text-align:left;\"> A2 </td>\n   <td style=\"text-align:left;\"> P3 </td>\n   <td style=\"text-align:left;\"> S6 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 5.687807 </td>\n   <td style=\"text-align:right;\"> 2.9859003 </td>\n   <td style=\"text-align:left;\"> A2 </td>\n   <td style=\"text-align:left;\"> P4 </td>\n   <td style=\"text-align:left;\"> S8 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 4.834518 </td>\n   <td style=\"text-align:right;\"> 4.1328919 </td>\n   <td style=\"text-align:left;\"> A3 </td>\n   <td style=\"text-align:left;\"> P5 </td>\n   <td style=\"text-align:left;\"> S9 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 2.002931 </td>\n   <td style=\"text-align:right;\"> 3.6043314 </td>\n   <td style=\"text-align:left;\"> A3 </td>\n   <td style=\"text-align:left;\"> P5 </td>\n   <td style=\"text-align:left;\"> S10 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 12.326867 </td>\n   <td style=\"text-align:right;\"> 1.7763576 </td>\n   <td style=\"text-align:left;\"> A3 </td>\n   <td style=\"text-align:left;\"> P6 </td>\n   <td style=\"text-align:left;\"> S11 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 4.014221 </td>\n   <td style=\"text-align:right;\"> 0.2255188 </td>\n   <td style=\"text-align:left;\"> A3 </td>\n   <td style=\"text-align:left;\"> P6 </td>\n   <td style=\"text-align:left;\"> S12 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n\n\n</details>\n\n\n## data.geo\n\nThe `data.geo` dataset represent geographical information about the\n`Plot`s in the `data.bio` dataset.\n\n\n\n::: {.cell class='tikz'}\n::: {.cell-output-display}\n![](04_data_wrangling_files/figure-html/tikz_datageo-1.png){width=672}\n:::\n:::\n\n\n\n<details><summary>View data</summary>\n\n\n`````{=html}\n<table class=\"paperTable\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> Plot </th>\n   <th style=\"text-align:right;\"> LAT </th>\n   <th style=\"text-align:right;\"> LONG </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:right;\"> 17.9605 </td>\n   <td style=\"text-align:right;\"> 145.4326 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P2 </td>\n   <td style=\"text-align:right;\"> 17.5210 </td>\n   <td style=\"text-align:right;\"> 146.1983 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P3 </td>\n   <td style=\"text-align:right;\"> 17.0011 </td>\n   <td style=\"text-align:right;\"> 146.3839 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P4 </td>\n   <td style=\"text-align:right;\"> 18.2350 </td>\n   <td style=\"text-align:right;\"> 146.7934 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P5 </td>\n   <td style=\"text-align:right;\"> 18.9840 </td>\n   <td style=\"text-align:right;\"> 146.0345 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P6 </td>\n   <td style=\"text-align:right;\"> 20.1154 </td>\n   <td style=\"text-align:right;\"> 146.4672 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n\n\n</details>\n\n## tikus\n\nThe `tikus` dataset is a data.frame version of the data with the same\nname that is provided as a list within the `mvabund` _package_.  The\ndata contain a the abundance of 75 coral species from different\nlocations (`rep`) over six years (`time`) at Tikus island.  The\nabundance was measured as the length (in cm) of a 10m transect that\nintersected with the coral species.\n\n<details><summary>View data</summary>\n\nNote, these data actually have 60 rows and 77 columns.  In order avoid\ndisplaying a huge table in this quick view, I have trimmed the view to\njust the first 10 rows and six columns.\n\n\n\n`````{=html}\n<table class=\"paperTable\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;\">   </th>\n   <th style=\"text-align:left;\"> time </th>\n   <th style=\"text-align:left;\"> rep </th>\n   <th style=\"text-align:right;\"> Psammocora contigua </th>\n   <th style=\"text-align:right;\"> Psammocora digitata </th>\n   <th style=\"text-align:right;\"> Pocillopora damicornis </th>\n   <th style=\"text-align:right;\"> Pocillopora verrucosa </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> V1 </td>\n   <td style=\"text-align:left;\"> 81 </td>\n   <td style=\"text-align:left;\"> 1 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 79 </td>\n   <td style=\"text-align:right;\"> 32 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> V2 </td>\n   <td style=\"text-align:left;\"> 81 </td>\n   <td style=\"text-align:left;\"> 2 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 51 </td>\n   <td style=\"text-align:right;\"> 21 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> V3 </td>\n   <td style=\"text-align:left;\"> 81 </td>\n   <td style=\"text-align:left;\"> 3 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 42 </td>\n   <td style=\"text-align:right;\"> 35 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> V4 </td>\n   <td style=\"text-align:left;\"> 81 </td>\n   <td style=\"text-align:left;\"> 4 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 15 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> V5 </td>\n   <td style=\"text-align:left;\"> 81 </td>\n   <td style=\"text-align:left;\"> 5 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 9 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> V6 </td>\n   <td style=\"text-align:left;\"> 81 </td>\n   <td style=\"text-align:left;\"> 6 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 72 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> V7 </td>\n   <td style=\"text-align:left;\"> 81 </td>\n   <td style=\"text-align:left;\"> 7 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 41 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> V8 </td>\n   <td style=\"text-align:left;\"> 81 </td>\n   <td style=\"text-align:left;\"> 8 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 16 </td>\n   <td style=\"text-align:right;\"> 25 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> V9 </td>\n   <td style=\"text-align:left;\"> 81 </td>\n   <td style=\"text-align:left;\"> 9 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 38 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> V10 </td>\n   <td style=\"text-align:left;\"> 81 </td>\n   <td style=\"text-align:left;\"> 10 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 16 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n\n\n</details>\n\n\n:::\n\nThe great folks over at Rstudio have produced an excellent set of\n[cheatsheets](https://www.rstudio.com/resources/cheatsheets) on a\nrange of topics.  For this tutorial, the **Data Transformation Cheat\nSheet** and **Data Tidying Cheat Sheet** (mainly just the first page)\nare useful summaries.\n \n::: panel-tabset \n\n## Data importation\n\n\n\n::: {.cell}\n\n:::\n\n\nhttps://github.com/rstudio/cheatsheets/raw/main/data-import.pdf\n![](../resources/data-import-0.png \"data-import\")\n![](../resources/data-import-1.png \"data-import\")\n\n## Data transformations\n\n\n\n::: {.cell}\n\n:::\n\n\nhttps://github.com/rstudio/cheatsheets/raw/main/data-transformation.pdf\n![](../resources/data-transformation-0.png \"data-transformation\")\n![](../resources/data-transformation-1.png \"data-transformation\")\n\n## Tidy data\n\n\n\n::: {.cell}\n\n:::\n\n\nhttps://github.com/rstudio/cheatsheets/raw/main/tidyr.pdf\n![](../resources/tidyr-0.png \"tidyr\")\n![](../resources/tidyr-1.png \"tidyr\")\n\n## Working with factors\n\n\n\n::: {.cell}\n\n:::\n\n\nhttps://github.com/rstudio/cheatsheets/raw/main/factors.pdf\n![](../resources/factors.png \"factors\")\n\n## Working with time/dates\n\n\n\n::: {.cell}\n\n:::\n\n\nhttps://github.com/rstudio/cheatsheets/raw/main/lubridate.pdf\n![](../resources/lubridate-0.png \"lubridate\")\n![](../resources/lubridate-1.png \"lubridate\")\n\n## Functional programming (`purrr`)\n\n\n\n::: {.cell}\n\n:::\n\n\nhttps://github.com/rstudio/cheatsheets/raw/main/purrr.pdf\n![](../resources/purrr-0.png \"purrr\")\n![](../resources/purrr-1.png \"purrr\")\n\n## Regular expression \n\n\n\n::: {.cell}\n\n:::\n\n\nhttps://github.com/rstudio/cheatsheets/raw/main/regex.pdf\n![](../resources/regex.png \"regex\")\n\n## Strings\n\n\n\n::: {.cell}\n\n:::\n\n\nhttps://github.com/rstudio/cheatsheets/raw/main/strings.pdf\n![](../resources/strings-0.png \"strings\")\n![](../resources/strings-1.png \"strings\")\n\n## Tidy evaluation\n\n\n\n::: {.cell}\n\n:::\n\n\nhttps://github.com/rstudio/cheatsheets/raw/main/tidyeval.pdf\n![](../resources/tidyeval-0.png \"tidyeval\")\n![](../resources/tidyeval-1.png \"tidyeval\")\n\n:::\n\n# `tidyverse` - a data manipulation ecosystem within R\n\nThere are numerous packages and base R routines devoted to data\nmanipulation. Notable packages include `data.tables`, `plyr`, `dplyr`\nand `doBy`. Indeed, earlier versions of this tutorial featured\nexamples of each of these packages. However, an entire family of\npackages from Hadley Wickem's group now stands out as a comprehensive,\nintuitive suite of tools for data manipulation and visualisation.\n\nImportantly, all of these packages are designed to integrate together\nand complement one another with a consistent interface. To simplify\ninstalling an entire data ecosystem, the tidyverse package is\navailable. Installing this package (via\n`install.packages('tidyverse')`) will install the following packages\n(bold entries are automatically loaded into the global environment\nwhen loading the `tidyverse` _package_):\n\n:::: {.columns}\n\n::: {.column width='50%'}\n- **`dplyr` - for dataframe manipulation**\n- **`tidyr` - for data tidying**\n- **`readr` - for importing data**\n- **`ggplot2` - for visualising data**\n- **`purrr` - for functional programming**\n- **`tibble` - for tibbles**\n- **`stringr` - for string manipulation**\n- **`forecats` - for factor (categorical) manipulation**\n- `lubridate` - for dates/times manipulation\n:::\n\n::: {.column width='45%'}\n- `hmms` - for time manipulation\n- `broom` - for tidying model outputs\n- `DBI` - for database interactions\n- `haven` - for importing SAS, SPSS and Stata files\n- `httr` - for web API's\n- `jsonlite` - for working with JSON\n- `rvest` - for web scraping\n- `xml2` - for manipulating XML structures\n- `modelr` - for model manipulation\n:::\n::::\n\nAs this tutorial will focus largely on the `tidyverse` ecosystem, we\nwill now load (attach) this library (actually, eight libraries) to the\nglobal environment so that the functionality is available.\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr   1.1.4     ✔ readr   2.1.5\n✔ forcats 1.0.0     ✔ stringr 1.5.1\n✔ ggplot2 3.5.1     ✔ tibble  3.2.1\n✔ purrr   1.0.2     ✔ tidyr   1.3.1\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n:::\n\n\n\nNote that when loading the `tidyverse` _package_, we are given\nfeedback about which other packages have been attached.  Importantly,\nalso notice that the output highlights a number of **conflicts**.  In\nthe above example, this indicates that the definition of the `filter`\n_function_ is now taken from the the `dplyr` _package_ rather than the\n`stats` _package_.  Essentially, both packages define a function\ncalled `filter` and this is just indicating that in the current\nenvironment, the `filter` _function_ from the `dplyr` _package_ will\nbe the one used.\n\nOn a case by case basis, this can be overruled by prefixing the\nfunction name with the package _namespace_.  For example, to ensure\nthat the `stats` _package_ version of `filter` is used, we can engage\nit as `stats::filter()`.\n\n## The grammar of data manipulation\n\nHadley and his collaborators argue that there is a grammar of data\nmanipulation and that manipulations comprises a set of verbs.\nFurthermore, the philosophy adheres to the UNIX ideal that rather than\nattempt to build large complex tools that perform a large set of\noperations, it is better (with regards to usability and robustness) to\nbuild a tool set in which each tool performs a single, specific task\nand that the individual tools can be bolted together to achieve the\ncomplex operations.\n\nThe core of the `tidyverse` data manipulation ecosystem tools (verbs)\ncan be organised into five categories within two types on the basis\nof what aspects of the data they operate on:\n\n- operate on a single data set\n  - operate on the rows\n    - [`dplyr::arrange`](#sorting-data-arrange) - changing the order of the\n      rows (sorting)\n    - [`dplyr::filter`](#subset-of-rows-filter) - subset of rows based on\n      column values\n    - [`dplyr::slice`](#subset-of-rows-by-position-slice) - subset of rows\n      based on position\n  - operate on the columns\n    - [`dplyr::select`](#subset-columns-select) - subset of columns\n    - [`dplyr::rename`](#renaming-columns-rename) - change the names of columns\n    - [`dplyr::pull`](#select-a-single-column-pull) - extract a single\n      column as a vector\n    - [`dplyr::distinct`](#distinct) - unique combinations of column\n      values\n    - [`dplyr::mutate`](#adding-modifying-columns-mutate) - adding columns\n      and modifying column values\n    - [`tidyr::unite`](#combining-columns-unite) - combine multiple\n      columns together\n    - [`tidyr::separate`](#separating-columns-separate) - separating a\n      single column into multiple columns\n  - operate on groups of columns\n    - [`dplyr::summarise`](#summarising) - aggregating (collapsing) to a\n      single row\n    - [`dplyr::count`](#count) - count the number of unique\n      combinations single row\n    - [`dplyr::group_by`](#grouping) - define groups of rows\n  - reshapes (pivots) the data\n    - [`tidyr::pivot_longer`](#wide-to-long-pivot_longer) - lengthen\n      data from wide format\n    - [`tidyr::pivot_wider`](#long-to-wide-pivot_wider) - widen\n      data from long format\n- operate of two data sets\n  - [`_join`](#merging-_join_data_sets) - merge (join) two data sets\n    together based on common field(s)\n\nIn base R, variables (columns) are referred to by either their name\n(as a prefix to the environment - the data.frame etc), name (as a\nstring) or their index (position).  For example to access a variable\ncalled \"Var1\" within a dataset called \"data\", we could use either\n`data$Var1`, `data[,\"Var1\"]` or `data[,1]` (if the focal variable was\nin the first column).\n\nThe `tidyverse` ecosystem adopts an alternative concept called **tidy\nevaluation** to make referring to columns more flexible.\n\n- **data-masking** - refer to variables as if they were directly\n  attached to the current environment (e.g. `Var1` instead of\n  `data$Var1`.  This form of variable referral is used within:\n  - `arrange()` \n  - `filter()`\n  - `count()`\n  - `mutate()`\n  - `summarise()`\n  - `group_by()`\n- **tidy selection** - refer to variables by their position, name or\n  type (e.g. `starts_with(\"var\")`).  This form of variable referral is\n  used within:\n  - `select()`\n  - `rename()`\n  - `pull()`\n  - `across()` - which brings _tidy selection_ semantics to\n    _data-masking_ (and thus functions like `mutate()`)\n\n  The following table highlights the various _tidy-selection_ options.\n  The examples all illustrate a hypothetical data set (`data`) with\n  hypothetical columns (`Var1`, `Var2`, etc) and cannot be evaluated\n  directly. They all mostly illustrate the concept using the\n  `select()` _function_.\n \n<table class='table table-primary table-bordered table-sm paramsTable' id = 'tidy-select-table'>\n<thead>\n<tr class = 'header'>\n<th align = 'left' width=\"180px\">_tidy-selection_</th>\n<th align = 'left'>Description</th>\n<th align = 'left' width='250px'>Examples</th>\n</tr>\n</thead>\n<tbody>\n<tr class = 'odd'>\n<td align = 'left'>Bare names</td>\n<td align = 'left'>\n\nSelect columns based on their names.<br>Columns can be excluded by\nprepending the name with a negative sign (`-`).\n\n</td>\n<td align = 'left'>\n\n\n::: {.cell class='plain'}\n\n```{.r .cell-code}\nselect(data, Var1)\n```\n:::\n\n::: {.cell class='plain'}\n\n```{.r .cell-code}\nselect(data, Var1, Var2)\n```\n:::\n\n::: {.cell class='plain'}\n\n```{.r .cell-code}\nselect(data, c(Var1, Var2))\n```\n:::\n\n::: {.cell class='plain'}\n\n```{.r .cell-code}\nselect(data, -Var1)\n```\n:::\n\n\n</td>\n</tr>\n<tr class = 'even'>\n<td align = 'left'>Ranges of columns</td>\n<td align = 'left'>\n\nSelect columns based on their a range of names or column numbers.  The\nselections will be inclusive.  Prepending with a negative sign (`-`)\nacts as an exclusion.\n\n</td>\n<td align = 'left'>\n\n\n::: {.cell class='plain'}\n\n```{.r .cell-code}\nselect(data, Var1:Var3)\n```\n:::\n\n::: {.cell class='plain'}\n\n```{.r .cell-code}\nselect(data, 2:4)\n```\n:::\n\n\n</td>\n</tr>\n<tr class = 'odd'>\n<td align = 'left'>Boolean helper functions<br>\n-`contains()`<br>\n-`starts_with()`<br>\n-`ends_with()`<br>\n-`matches()`<br>\n-`num_range()`<br>\n-`everything()`<br>\n-`where()`<br>\n-`all_of()`<br>\n-`any_of()`<br>\n</td>\n<td align = 'left'>\n\nSelect columns based on evaluating functions on the column names<br>\n- `contains()` - names containing the string<br>\n- `starts_with()` - names starting with the string<br>\n- `ends_with()` - names starting with the string<br>\n- `matches()` - names matched with a [regex](#Gregular-expression)<br>\n- `num_range()` - names that start with string followed by numbers<br>\n- `everything()` - all variables - useful in combination with other selections<br>\n- `where()` - variable inclusion predicated by a function<br>\n- `all_of()` - all variables included in a character vector<br>\n- `any_of()` - any variables included in a character vector<br><br>\nEach of the above can be reversed by prepending with either a exclamation sign (`!`) or negative sign (`-`).<br>\nAlso note that by default, these are not case sensitive.\n\n</td>\n<td align = 'left'>\n\n\n::: {.cell class='plain'}\n\n```{.r .cell-code}\nselect(data, contains(\"Var\"))\n```\n:::\n\n::: {.cell class='plain'}\n\n```{.r .cell-code}\nselect(data, !contains(\"Var\"))\n```\n:::\n\n::: {.cell class='plain'}\n\n```{.r .cell-code}\nselect(data, starts_with(\"Var\"))\n```\n:::\n\n::: {.cell class='plain'}\n\n```{.r .cell-code}\nselect(data, ends_with(\"Var\"))\n```\n:::\n\n::: {.cell class='plain'}\n\n```{.r .cell-code}\nselect(data, matches(\"^.var[1-5]$\"))\n```\n:::\n\n::: {.cell class='plain'}\n\n```{.r .cell-code}\nselect(data, num_range(\"Var\", 1:2))\n```\n:::\n\n::: {.cell class='plain'}\n\n```{.r .cell-code}\nselect(data, Var3, everything())\n```\n:::\n\n::: {.cell class='plain'}\n\n```{.r .cell-code}\nselect(data, where(is.numeric))\n```\n:::\n\n::: {.cell class='plain'}\n\n```{.r .cell-code}\nvars <- c(\"Var1\", \"Var2\")\nselect(data, all_of(vars))\n```\n:::\n\n::: {.cell class='plain'}\n\n```{.r .cell-code}\nvars <- c(\"Var1\", \"Other\")\nselect(data, any_of(vars))\n```\n:::\n\n\n</td>\n</tr>\n</table>\n\n## Piping\n\nTypically, data manipulation/preparations comprise multiple steps and\nstages in which a series of alterations, additions etc are performed\nsequentially such that the data are progressively molded into a form\nappropriate for analysis etc.  That is, to achieve the desired result,\nwe must bolt multiple tools (verbs) together.\n\nTraditionally, this would have involved a separate expression for each\nstep often resulting in the generation of numerous intermediate data\nsets. Furthermore, in an attempt to reduce the number of intermediate\nsteps, functions are often nested within other functions such that\nalterations are made inline within another function.\n\nFor example, the following pseudo code examples illustrates the\ntraditional and nested approaches to achieving numerous data\nmanipulation steps:\n\n:::: {.columns style=\"display:flex; justify-content:space-evenly;\"}\n\n::: {.column width='45%'}\nTraditional<br>\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata1 <- select(data, ...)\ndata2 <- group_by(data1, ...)\ndata3 <- summarise(data2, ...)\n```\n:::\n\n\n:::\n\n::: {.column width='45%'}\nNested functions<br>\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata <- summarise(group_by(select(data, ...)))\n```\n:::\n\n\n:::\n::::\n\nCollectively, these practices can yield code that is very difficult to\nread and interpret.\n\nA long honoured unix coding principle is that each application should\nfocus on performing one action and performing that function well. In\norder to perform a sequence of actions therefore involves piping (via\nthe unix pipe character `|`) the output of one application to the\ninput of another application and so on in a chain. The grammar of data\nwrangling also adopts the principle of each tool specializing on one\naction and tools should be piped together to achieve a sequence of\nactions.\n\nThe piping (glue) operator in R (as of version 4.1) is `|>`. An object on the\nleft hand side of the `|>` operator is passed as the **first\nargument** of the function on the right hand side.\n\n::: {.callout-note  collapse=\"true\"}\n## Native vs the `magrittr` (`%>%`) pipe\nPrior to the native adoption of the pipe character in R, piping was\nsupported via the `magrittr` package. Within this package, the pipe\noperator is `%>%`. Although both the native and `magrittr` pipe\noperators are somewhat analogous, they are not homologous.\n\n- **Syntax:**\n\n  - Native pipe: Simple `|>` symbol placed between the expression and\n    function call.\n  - Magrittr pipe: Double percentage signs `%>%` offering visual\n    distinction from surrounding code.\n\n- **Placeholder:**\n\n  - Native pipe: No built-in placeholder for piped-in values.\n    Functions need to handle them explicitly.\n  - Magrittr pipe: Dot placeholder (`.`), allowing concise access to\n    piped-in values within the function call.\n\n- **Functionality:**\n\n  - Native pipe: More basic functionality, primarily focused on\n    function chaining.\n  - Magrittr pipe: Offers additional features like:\n    - Exposition pipe (`%~$%`): Displays the values passed through the\n      pipe, facilitating debugging.\n    - Interjection pipe (`~>%`): Modifies the piped-in value before\n      passing it to the next function.\n    - Lazy evaluation: Delays intermediate calculations until\n      necessary, potentially improving performance.\n\n- **Scope:**\n\n  - Native pipe: Recently introduced, integrated directly into R Base\n    package.\n  - Magrittr pipe: A separate package, offering more extensibility and\n    customization options.\n\n- **Adoption:**\n\n  - Native pipe: Gaining popularity due to its simplicity and\n    integration with base R.\n  - Magrittr pipe: Widely used, having established a large community\n    and ecosystem of compatible packages.\n\n- **Choosing between them depends on:**\n\n  - Personal preference: Some prefer the visual clarity of %>%, while\n    others favor the simplicity of `|>`.\n  - Project requirements: Consider the need for features like the dot\n    placeholder or additional pipe types.\n  - Team collaboration: Choose a consistent style for shared code or\n    adhere to project standards.\n\nUltimately, both pipes are powerful tools for data manipulation in R.\nUnderstanding their differences helps you choose the most appropriate\noption for your specific needs and coding style.\n\n:::\n\nIn pseudo code, the piping approach to the above manipulation would\nbe:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata <- data |>\n    select(...) |>\n    group_by(...) |>\n    summarise(...)\n```\n:::\n\n\n\nIf the code is set out as above (with each verb on a separate line),\nit gives an opportunity to provide a short comment to the right side\nof each line to provide useful documentation.\n\n<details><summary>A more specific example</summary> \n\nAs a motivating (if not a bit extreme) example, lets say we wanted to\ncalculate the logSumExp function:\n\t\t\t\n$$\nlog(\\sum^{n}_{i=1} e^{x_i})\n$$\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## Generate some data\nset.seed(123)\nx <- rgamma(10,5,1)\n## Calculate the logSumExp\nlog(sum(exp(x)))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 9.316408\n```\n\n\n:::\n\n```{.r .cell-code}\n## OR\nx1 <- exp(x)\nx2 <-sum(x1)\nlog(x2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 9.316408\n```\n\n\n:::\n:::\n\n\n\nThe piping approach could be:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx |> exp() |> sum() |> log()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 9.316408\n```\n\n\n:::\n:::\n\n\n\nTo reiterate, the following three are equivalent:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexp(x)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1]   29.653639 1601.918872    5.101634  118.918637 7140.686681  252.361318\n [7]    9.175114    4.863565 1756.825350  199.466617\n```\n\n\n:::\n\n```{.r .cell-code}\nx |> exp()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1]   29.653639 1601.918872    5.101634  118.918637 7140.686681  252.361318\n [7]    9.175114    4.863565 1756.825350  199.466617\n```\n\n\n:::\n:::\n\n\n\nas are the following:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlog(x, base=10)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] 0.5301465 0.8679950 0.2120706 0.6792861 0.9480981 0.7427928 0.3456667\n [8] 0.1991438 0.8733941 0.7239190\n```\n\n\n:::\n\n```{.r .cell-code}\nx |> log(base=10)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] 0.5301465 0.8679950 0.2120706 0.6792861 0.9480981 0.7427928 0.3456667\n [8] 0.1991438 0.8733941 0.7239190\n```\n\n\n:::\n:::\n\n\n\n</details>\n\nMost of the following examples will demonstrate isolated data\nmanipulation actions (such as filtering, summarising or joining) as\nthis focuses on the specific uses of these functions without the\ndistractions and complications of other actions.  For isolated uses,\npiping has little (if any) advantages.  Nevertheless, in recognition\nthat data manipulations rarely comprise a single action (rather they\nare a series of linked actions), for all remaining examples\ndemonstrated in the `tidyverse` (`dplyr`/`tidyr`) context, piping will\nbe used.\n\n## Tibbles\n\n`data.frame`'s are collections of variables of the identical length\n(yet not necessarily the same type) that the fundamental data\nstructures used by most modelling routines in R.  Nevertheless, there\nare numerous properties of data.frames that make them less than ideal.\n`tibbles` have been more recently engineered to address these shortcomings:\n\n- if a `data.frame` is very large, the `print` method can result\n  output that is too large to be useful.  By contrast, `tibbles`\n  truncate the output to a maximum of 10 rows and as many columns as\n  will fit in the output.  The `tibble` `print` _method_ also displays\n  the class (type) of each column (variable).\n\n  <details><summary>show comparison</summary>\n  :::: {.columns style=\"display:flex; justify-content:space-evenly;\"}\n  \n  ::: {.column width=\"49%\"}\n\n\n  ::: {.cell}\n  \n  ```{.r .cell-code}\n  dat.1 |> as.data.frame() \n  ```\n  \n  ::: {.cell-output .cell-output-stdout}\n  \n  ```\n     Treatment Plot Dose Time  Resp1  Resp2\n  1    Control   P1    H    1   8.12   3.06\n  2    Control   P1    H    2  20.55  25.94\n  3    Control   P1    H    3  27.49  29.85\n  4    Control   P1    H    4  44.79  25.39\n  5    Control   P1    M    1  20.99  20.31\n  6    Control   P1    M    2  37.54  17.62\n  7    Control   P1    M    3  61.46  98.44\n  8    Control   P1    M    4  82.21 160.01\n  9    Control   P1    L    1  31.73  21.22\n  10   Control   P1    L    2  59.08  37.51\n  11   Control   P1    L    3  94.54 119.22\n  12   Control   P1    L    4 121.17 116.45\n  13   Control   P2    H    1   8.14  23.93\n  14   Control   P2    H    2  13.36  28.02\n  15   Control   P2    H    3  33.37  37.17\n  16   Control   P2    H    4  39.87  38.25\n  17   Control   P2    M    1  19.95  19.73\n  18   Control   P2    M    2  42.83  40.52\n  19   Control   P2    M    3  62.46   4.81\n  20   Control   P2    M    4  81.78 136.66\n  21   Control   P2    L    1  32.76  30.70\n  22   Control   P2    L    2  62.35 123.78\n  23   Control   P2    L    3  90.22 113.87\n  24   Control   P2    L    4 114.03  76.52\n  25 Exclusion   P3    H    1  21.86  23.58\n  26 Exclusion   P3    H    2  39.83  28.03\n  27 Exclusion   P3    H    3  59.53  21.32\n  28 Exclusion   P3    H    4  75.59  90.76\n  29 Exclusion   P3    M    1  38.57  30.63\n  30 Exclusion   P3    M    2  81.25  83.61\n  31 Exclusion   P3    M    3 124.08 124.09\n  32 Exclusion   P3    M    4 159.69 112.65\n  33 Exclusion   P3    L    1  61.16  39.53\n  34 Exclusion   P3    L    2 119.84 110.27\n  35 Exclusion   P3    L    3 175.87 286.33\n  36 Exclusion   P3    L    4 238.76  54.23\n  37 Exclusion   P4    H    1  18.82  28.60\n  38 Exclusion   P4    H    2  39.82  39.07\n  39 Exclusion   P4    H    3  63.30  93.43\n  40 Exclusion   P4    H    4  82.29  60.15\n  41 Exclusion   P4    M    1  39.51  45.90\n  42 Exclusion   P4    M    2  79.24  88.04\n  43 Exclusion   P4    M    3 122.09  84.19\n  44 Exclusion   P4    M    4 161.67 256.34\n  45 Exclusion   P4    L    1  57.93  85.24\n  46 Exclusion   P4    L    2 117.88 167.90\n  47 Exclusion   P4    L    3 181.09 314.49\n  48 Exclusion   P4    L    4 242.31 304.70\n  ```\n  \n  \n  :::\n  :::\n\n\n  :::\n\t  \n  ::: {.column width=\"49%\"}\n\n\n  ::: {.cell}\n  \n  ```{.r .cell-code}\n  dat.1 |> as_tibble()\n  ```\n  \n  ::: {.cell-output .cell-output-stdout}\n  \n  ```\n  # A tibble: 48 × 6\n     Treatment Plot  Dose   Time Resp1  Resp2\n     <fct>     <fct> <fct> <int> <dbl>  <dbl>\n   1 Control   P1    H         1  8.12   3.06\n   2 Control   P1    H         2 20.6   25.9 \n   3 Control   P1    H         3 27.5   29.8 \n   4 Control   P1    H         4 44.8   25.4 \n   5 Control   P1    M         1 21.0   20.3 \n   6 Control   P1    M         2 37.5   17.6 \n   7 Control   P1    M         3 61.5   98.4 \n   8 Control   P1    M         4 82.2  160.  \n   9 Control   P1    L         1 31.7   21.2 \n  10 Control   P1    L         2 59.1   37.5 \n  # ℹ 38 more rows\n  ```\n  \n  \n  :::\n  :::\n\n\n  :::\n   \n  ::::\n  </details>\n- `data.frame`s have very strict column naming rules and when these\n  are not satisfied, the names will be altered in order to adhere to\n  the rules.  `tibble`s permit a wider range of names.\n  <details><summary>show comparison</summary>\n  :::: {.columns style=\"display:flex; justify-content:space-evenly;\"}\n  \n  ::: {.column width=\"49%\"}\n\n\n  ::: {.cell}\n  \n  ```{.r .cell-code}\n  data.frame('1.3' = 1:6, 'Wt (kg)' = 1:6)\n  ```\n  \n  ::: {.cell-output .cell-output-stdout}\n  \n  ```\n    X1.3 Wt..kg.\n  1    1       1\n  2    2       2\n  3    3       3\n  4    4       4\n  5    5       5\n  6    6       6\n  ```\n  \n  \n  :::\n  :::\n\n\n  :::\n\t  \n  ::: {.column width=\"49%\"}\n\n\n  ::: {.cell}\n  \n  ```{.r .cell-code}\n  tibble('1.3' = 1:6, 'Wt (kg)' = 1:6)\n  ```\n  \n  ::: {.cell-output .cell-output-stdout}\n  \n  ```\n  # A tibble: 6 × 2\n    `1.3` `Wt (kg)`\n    <int>     <int>\n  1     1         1\n  2     2         2\n  3     3         3\n  4     4         4\n  5     5         5\n  6     6         6\n  ```\n  \n  \n  :::\n  :::\n\n\n  :::\n  \n  ::::\n  </details>\n- character vectors are often coerced into factors (categorical\n  variables).  This is not the case with `tibble`s.\n- when vectors are added that are of a different length to the others\n  in the `data.frame`, the values of the shorter vector(s) are\n  recycled until all vectors are the same length.  This behaviour can\n  be dangerous and is not permitted in tibbles (except for vectors of\n  length of one).\n\n  <details><summary>show comparison</summary>\n  :::: {.columns style=\"display:flex; justify-content:space-evenly;\"}\n  \n  ::: {.column width=\"49%\"}\n\n\n  ::: {.cell}\n  \n  ```{.r .cell-code}\n  data.frame(Var1 = 1:6, Var2 = 1:2, Var3 = 1)\n  ```\n  \n  ::: {.cell-output .cell-output-stdout}\n  \n  ```\n    Var1 Var2 Var3\n  1    1    1    1\n  2    2    2    1\n  3    3    1    1\n  4    4    2    1\n  5    5    1    1\n  6    6    2    1\n  ```\n  \n  \n  :::\n  :::\n\n\n  :::\n\t  \n  ::: {.column width=\"49%\"}\n\n\n  ::: {.cell}\n  \n  ```{.r .cell-code}\n  tibble(Var1 = 1:6, Var2 = 1:2, Var3 = 1)\n  ```\n  \n  ::: {.cell-output .cell-output-error}\n  \n  ```\n  Error in `tibble()`:\n  ! Tibble columns must have compatible sizes.\n  • Size 6: Existing data.\n  • Size 2: Column `Var2`.\n  ℹ Only values of size one are recycled.\n  ```\n  \n  \n  :::\n  \n  ```{.r .cell-code}\n  tibble(Var1 = 1:6, Var2 = 1)\n  ```\n  \n  ::: {.cell-output .cell-output-stdout}\n  \n  ```\n  # A tibble: 6 × 2\n     Var1  Var2\n    <int> <dbl>\n  1     1     1\n  2     2     1\n  3     3     1\n  4     4     1\n  5     5     1\n  6     6     1\n  ```\n  \n  \n  :::\n  :::\n\n\n  :::\n  \n  ::::\n  </details>\n- when sub-setting via column indices, `data.frame`s return a vector\n  (when only a single index is provided) or a data.frame (if multiple\n  indices are provided).  This inconsistency is problematic in the\n  context of a processing pipeline.  `tibble`'s will always return a\n  `tibble` from column indices.\n\n  <details><summary>show comparison</summary>\n  :::: {.columns style=\"display:flex; justify-content:space-evenly;\"}\n  \n  ::: {.column width=\"49%\"}\n\n\n  ::: {.cell}\n  \n  ```{.r .cell-code}\n  as.data.frame(dat.1)[,2]\n  ```\n  \n  ::: {.cell-output .cell-output-stdout}\n  \n  ```\n   [1] P1 P1 P1 P1 P1 P1 P1 P1 P1 P1 P1 P1 P2 P2 P2 P2 P2 P2 P2 P2 P2 P2 P2 P2 P3\n  [26] P3 P3 P3 P3 P3 P3 P3 P3 P3 P3 P3 P4 P4 P4 P4 P4 P4 P4 P4 P4 P4 P4 P4\n  Levels: P1 P2 P3 P4\n  ```\n  \n  \n  :::\n  :::\n\n\n  :::\n\t  \n  ::: {.column width=\"49%\"}\n\n\n  ::: {.cell}\n  \n  ```{.r .cell-code}\n  as_tibble(dat.1)[,2]\n  ```\n  \n  ::: {.cell-output .cell-output-stdout}\n  \n  ```\n  # A tibble: 48 × 1\n     Plot \n     <fct>\n   1 P1   \n   2 P1   \n   3 P1   \n   4 P1   \n   5 P1   \n   6 P1   \n   7 P1   \n   8 P1   \n   9 P1   \n  10 P1   \n  # ℹ 38 more rows\n  ```\n  \n  \n  :::\n  :::\n\n\n  :::\n  \n  ::::\n  </details>\n- `data.frame`s permit partial matching via `$` indexing.  This can be\n  problematic in the context of a processing pipeline.  `tibble`s\n  expressly forbid this.\n\n  <details><summary>show comparison</summary>\n  :::: {.columns style=\"display:flex; justify-content:space-evenly;\"}\n  \n  ::: {.column width=\"49%\"}\n\n\n  ::: {.cell}\n  \n  ```{.r .cell-code}\n  as.data.frame(dat.1)$Plo\n  ```\n  \n  ::: {.cell-output .cell-output-stdout}\n  \n  ```\n   [1] P1 P1 P1 P1 P1 P1 P1 P1 P1 P1 P1 P1 P2 P2 P2 P2 P2 P2 P2 P2 P2 P2 P2 P2 P3\n  [26] P3 P3 P3 P3 P3 P3 P3 P3 P3 P3 P3 P4 P4 P4 P4 P4 P4 P4 P4 P4 P4 P4 P4\n  Levels: P1 P2 P3 P4\n  ```\n  \n  \n  :::\n  :::\n\n\n  :::\n\t  \n  ::: {.column width=\"49%\"}\n\n\n  ::: {.cell}\n  \n  ```{.r .cell-code}\n  as_tibble(dat.1)$Plo\n  ```\n  \n  ::: {.cell-output .cell-output-stderr}\n  \n  ```\n  Warning: Unknown or uninitialised column: `Plo`.\n  ```\n  \n  \n  :::\n  \n  ::: {.cell-output .cell-output-stdout}\n  \n  ```\n  NULL\n  ```\n  \n  \n  :::\n  :::\n\n\n  :::\n  \n  ::::\n  </details>\n- `data.frame`s have very clumsy support for _list columns_ (a list\n  column is a column whose cells contain lists).  List columns are\n  better supported in `tibble`s.  The ability to support list columns\n  is an integral for the _functional programming_ routines of the\n  `purrr` package.\n\n  <details><summary>show comparison</summary> \n  \n  In this fictitious example, I would like to store three different\n  `data.frames` (or any three objects for that matter) in the three\n  cells of a variable (e.g. `Var2`).  This is not possible in a\n  `data.frame` - it will coerce the `Var2` column into multiple\n  columns (one for each object) and thus will also recycle the length\n  of each to ensure they are all the same length.  Once the data have\n  been coerced into a `data.frame`, the structure is lost (we can no\n  longer access `Var2`).\n \n  These issues are addressed in the `tibble`.\n\n  :::: {.columns style=\"display:flex;justify-content:space-evenly;\"}\n  \n  ::: {.column width=\"49%\"}\n\n\n  ::: {.cell}\n  \n  ```{.r .cell-code}\n  D <- data.frame(Var1 = LETTERS[1:3],\n             Var2 = list(\n                 data.frame(a = 1:6),\n                 data.frame(a = 1:3),\n                 data.frame(a = 1:2)\n             ))\n  D\n  ```\n  \n  ::: {.cell-output .cell-output-stdout}\n  \n  ```\n    Var1 Var2.a Var2.a.1 Var2.a.2\n  1    A      1        1        1\n  2    B      2        2        2\n  3    C      3        3        1\n  4    A      4        1        2\n  5    B      5        2        1\n  6    C      6        3        2\n  ```\n  \n  \n  :::\n  \n  ```{.r .cell-code}\n  D$Var2\n  ```\n  \n  ::: {.cell-output .cell-output-stdout}\n  \n  ```\n  NULL\n  ```\n  \n  \n  :::\n  :::\n\n\n  :::\n\t  \n  ::: {.column width=\"49%\"}\n\n\n  ::: {.cell}\n  \n  ```{.r .cell-code}\n  D <- tibble(Var1 = LETTERS[1:3],\n         Var2 = list(\n             data.frame(a = 1:6),\n             data.frame(a = 1:3),\n             data.frame(a = 1:2)\n             ))\n  D\n  ```\n  \n  ::: {.cell-output .cell-output-stdout}\n  \n  ```\n  # A tibble: 3 × 2\n    Var1  Var2        \n    <chr> <list>      \n  1 A     <df [6 × 1]>\n  2 B     <df [3 × 1]>\n  3 C     <df [2 × 1]>\n  ```\n  \n  \n  :::\n  \n  ```{.r .cell-code}\n  D$Var2\n  ```\n  \n  ::: {.cell-output .cell-output-stdout}\n  \n  ```\n  [[1]]\n    a\n  1 1\n  2 2\n  3 3\n  4 4\n  5 5\n  6 6\n  \n  [[2]]\n    a\n  1 1\n  2 2\n  3 3\n  \n  [[3]]\n    a\n  1 1\n  2 2\n  ```\n  \n  \n  :::\n  :::\n\n\n  :::\n  \n  ::::\n  </details>\n\n# Summary and vectorised functions\n\nMany data manipulation actions involve the use of specific auxiliary\n_functions_ to act on specific parts of the data set. For example, if\nwe wish to summarise a data set, we might apply a `mean()` _function_\nto the numeric vectors (variables) and `levels()` or `unique()`\n_function_ to character or factor vectors. That is, the function is\napplied to each vector as a whole.  Such functions are called\n**summary** _functions_.\n\nOn the other hand, if we wish to generate log-transformed versions of\nthe numeric vectors, then we would apply the `log()` _function_ to\neach value within those numeric vectors. Furthermore, we might use\nother auxiliary functions that return vectors of either boolean values\n(TRUE or FALSE) or integers that can represent row or column indices\nto determine which observations to perform actions on.\n\n:::: {.columns style=\"display:flex;justify-content:space-evenly;\"}\n\n::: {.column style=\"width:45%;font-size:8pt;\"}\n\n\n\n::: {.cell class='tikz'}\n::: {.cell-output-display}\n![](04_data_wrangling_files/figure-html/tikz_summary-1.png){width=90%}\n:::\n:::\n\n\n\n:::\n\n::: {.column style=\"width:45%;font-size:8pt;\"}\n\n\n\n::: {.cell class='tikz'}\n::: {.cell-output-display}\n![](04_data_wrangling_files/figure-html/tikz_vectorised-1.png){width=90%}\n:::\n:::\n\n\n\n:::\n\n::::\n\n\nBroadly speaking, **summary** functions take a vector and return a\nsingle value. Familiar examples of summary functions are `mean()`,\n`var()`, `min()` etc. By contrast, **vectorised** functions take a\nvector and return a vector of the same length as the original input\nvector. `rank()`, `cumsum()` and `log()` are all examples of such\nvectorised (window) functions.\n\nThe `dplyr` _package_ introduces a number of additional summary and\nvectorised functions that are deemed useful augmentations of the\nstandard set of functions available in base R. The following tables\ndescribes the most useful functions (from `base` and `dplyr`) along with\nwhich manipulation functions they can be applied. Those functions\ndefined in `dplyr` include the `dplyr` **namespace**.\n\n\nThere are also some operations that appear to provide a mixture of\nboth summary and vectorised functions.  The `scale()` _function_\n(which centres and scales a vector), for example, returns a vector of\nscaled values as well as storing the original mean and standard\ndeviation (summaries) as attributes.\n\nTo demonstrate summary and vectorised functions, the following vectors\nwill be used.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## set a random seed to ensure the same values each time\nset.seed(123)\n## a numeric vector generated from random draws from a gamma distribution\n(x <- rgamma(10, 5, 1))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] 3.389585 7.378957 1.629561 4.778440 8.873564 5.530862 2.216495 1.581772\n [9] 7.471264 5.295647\n```\n\n\n:::\n\n```{.r .cell-code}\n## a character vector\n(A <- sample(letters[1:2], size = 10, replace = TRUE))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"a\" \"a\" \"b\" \"b\" \"a\" \"b\" \"a\" \"b\" \"a\" \"b\"\n```\n\n\n:::\n\n```{.r .cell-code}\n## a boolean vector\n(B <- sample(c(TRUE, FALSE), size = 10, replace = TRUE))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] FALSE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE FALSE FALSE  TRUE\n```\n\n\n:::\n:::\n\n\n\n## Summary functions\n\n<table class='table table-primary table-bordered table-sm paramsTable'>\n<thead>\n<tr class = 'header'>\n<th align = 'left'>Function</th>\n<th align = 'left'>Description</th>\n<th align = 'left' width='300px'>Examples</th>\n</tr>\n</thead>\n<tbody>\n<tr class = 'odd'>\n<td align = 'left'>`mean()`, `median()`</td>\n<td align = 'left'>Arithmetic mean and median.<br>\n\nNote, boolean vectors are stored as a set of 0 (FALSE) and 1 (TRUE)\nand thus mathematical functions operate on them as if they were\nnumbers.\n\n</td>\n<td align = 'left'>\n\n\n::: {.cell class='plain'}\n\n```{.r .cell-code}\nmean(x)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 4.814615\n```\n\n\n:::\n\n```{.r .cell-code}\nmedian(B)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1\n```\n\n\n:::\n:::\n\n\n</td>\n</tr>\n<tr class = 'even'>\n<td align = 'left'>`sum()`, `prod()`</td>\n<td align = 'left'>Sum and product.\n</td>\n<td align = 'left'>\n\n\n::: {.cell class='plain'}\n\n```{.r .cell-code}\nsum(x)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 48.14615\n```\n\n\n:::\n\n```{.r .cell-code}\nprod(B)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0\n```\n\n\n:::\n:::\n\n\n</td>\n</tr>\n<tr class = 'odd'>\n<td align = 'left'>`var()`, `sd()`</td>\n<td align = 'left'>Variance and standard deviation.\n</td>\n<td align = 'left'>\n\n\n::: {.cell class='plain'}\n\n```{.r .cell-code}\nvar(x)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 6.692355\n```\n\n\n:::\n\n```{.r .cell-code}\nsd(B)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.5163978\n```\n\n\n:::\n:::\n\n\n</td>\n</tr>\n<tr class = 'even'>\n<td align = 'left'>`mad()`, `IQR()`</td>\n<td align = 'left'>Median Absolute Deviation and Inter-Quartile Range.\n</td>\n<td align = 'left'>\n\n\n::: {.cell class='plain'}\n\n```{.r .cell-code}\nmad(x)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 3.540549\n```\n\n\n:::\n\n```{.r .cell-code}\nIQR(B)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1\n```\n\n\n:::\n:::\n\n\n</td>\n</tr>\n<tr class = 'odd'>\n<td align = 'left'>`min()`, `max()`</td>\n<td align = 'left'>Minimum and maximum.\n</td>\n<td align = 'left'>\n\n\n::: {.cell class='plain'}\n\n```{.r .cell-code}\nmin(x)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1.581772\n```\n\n\n:::\n\n```{.r .cell-code}\nmax(B)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1\n```\n\n\n:::\n:::\n\n\n</td>\n</tr>\n<tr class = 'even'>\n<td align = 'left'>`quantile()`</td>\n<td align = 'left'>Quantiles\n</td>\n<td align = 'left'>\n\n\n::: {.cell class='plain'}\n\n```{.r .cell-code}\nquantile(x)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      0%      25%      50%      75%     100% \n1.581772 2.509767 5.037043 6.916934 8.873564 \n```\n\n\n:::\n\n```{.r .cell-code}\nquantile(x, p = 0.25)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     25% \n2.509767 \n```\n\n\n:::\n:::\n\n\n</td>\n</tr>\n<tr class = 'odd'>\n<td align = 'left'>`dplyr::first()`, `dplyr::last()`, `dplyr::nth()`</td>\n<td align = 'left'>First, laste and nth value.\n</td>\n<td align = 'left'>\n\n\n::: {.cell class='plain'}\n\n```{.r .cell-code}\nfirst(x)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 3.389585\n```\n\n\n:::\n\n```{.r .cell-code}\nfirst(x, order_by = A)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 3.389585\n```\n\n\n:::\n\n```{.r .cell-code}\nlast(B)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n\n```{.r .cell-code}\nnth(A, n = 4)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"b\"\n```\n\n\n:::\n:::\n\n\n</td>\n</tr>\n<tr class = 'even'>\n<td align = 'left'>`dplyr::n()`, `dplyr::n_distinct()`</td>\n<td align = 'left'>Number of values, number of distinct values.<br>\n\n`n()` is a special case that can only be used within the context of a\n`data.frame` or `tibble`.\n\n</td>\n<td align = 'left'>\n\n\n::: {.cell class='plain'}\n\n```{.r .cell-code}\nn_distinct(A)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2\n```\n\n\n:::\n:::\n\n\n</td>\n</tr>\n</table>\n\n## Vectorised functions\n\n<table class='table table-primary table-bordered table-sm paramsTable'>\n<thead>\n<tr class = 'header'>\n<th align = 'left'>Function</th>\n<th align = 'left'>Description</th>\n<th align = 'left' width='300px'>Examples</th>\n</tr>\n</thead>\n<tbody>\n<tr class = 'odd'>\n<td align = 'left'>`+,-,*,/,^,%/%, %%`</td>\n<td align = 'left'>typical arithmetic operators</td>\n<td align = 'left'>\n\n\n::: {.cell class='plain'}\n\n```{.r .cell-code}\nx + 2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1]  5.389585  9.378957  3.629561  6.778440\n [5] 10.873564  7.530862  4.216495  3.581772\n [9]  9.471264  7.295647\n```\n\n\n:::\n\n```{.r .cell-code}\nx * B\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] 0.000000 7.378957 1.629561 4.778440\n [5] 8.873564 0.000000 2.216495 0.000000\n [9] 0.000000 5.295647\n```\n\n\n:::\n:::\n\n\n</td>\n</tr>\n<tr class = 'even'>\n<td align = 'left'>`log()`,`log2()`,`log10()`, `exp()`</td>\n<td align = 'left'>logarithms and exponentials</td>\n<td align = 'left'>\n\n\n::: {.cell class='plain'}\n\n```{.r .cell-code}\nlog(x)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] 1.2207074 1.9986324 0.4883105 1.5641140\n [5] 2.1830765 1.7103437 0.7959271 0.4585455\n [9] 2.0110642 1.6668851\n```\n\n\n:::\n\n```{.r .cell-code}\nlog10(x)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] 0.5301465 0.8679950 0.2120706 0.6792861\n [5] 0.9480981 0.7427928 0.3456667 0.1991438\n [9] 0.8733941 0.7239190\n```\n\n\n:::\n\n```{.r .cell-code}\nexp(x)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1]   29.653639 1601.918872    5.101634\n [4]  118.918637 7140.686681  252.361318\n [7]    9.175114    4.863565 1756.825350\n[10]  199.466617\n```\n\n\n:::\n:::\n\n\n</td>\n</tr>\n<tr class = 'odd'>\n<td align = 'left'>`<,<=,>,>=,!=,==`</td>\n<td align = 'left'>logical operators</td>\n<td align = 'left'>\n\n\n::: {.cell class='plain'}\n\n```{.r .cell-code}\nx < 5\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1]  TRUE FALSE  TRUE  TRUE FALSE FALSE\n [7]  TRUE  TRUE FALSE FALSE\n```\n\n\n:::\n\n```{.r .cell-code}\nB == TRUE\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] FALSE  TRUE  TRUE  TRUE  TRUE FALSE\n [7]  TRUE FALSE FALSE  TRUE\n```\n\n\n:::\n:::\n\n\n</td>\n</tr>\n<tr class = 'even'>\n<td align = 'left'>`between()`</td>\n<td align = 'left'>Whether a value is between two numbers</td>\n<td align = 'left'>\n\n\n::: {.cell class='plain'}\n\n```{.r .cell-code}\nbetween(x, 3, 5)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1]  TRUE FALSE FALSE  TRUE FALSE FALSE\n [7] FALSE FALSE FALSE FALSE\n```\n\n\n:::\n:::\n\n\n</td>\n</tr>\n<tr class = 'odd'>\n<td align = 'left'>`near()`</td>\n<td align = 'left'>A safe way of assessing equality (`==`) in floating points</td>\n<td align = 'left'>\n\n\n::: {.cell class='plain'}\n\n```{.r .cell-code}\nx == 3.39\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] FALSE FALSE FALSE FALSE FALSE FALSE\n [7] FALSE FALSE FALSE FALSE\n```\n\n\n:::\n\n```{.r .cell-code}\nnear(x, y = 3.39, tol =0.01)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1]  TRUE FALSE FALSE FALSE FALSE FALSE\n [7] FALSE FALSE FALSE FALSE\n```\n\n\n:::\n:::\n\n\n</td>\n</tr>\n<tr class = 'even'>\n<td align = 'left'>`lag()`, `lead()`</td>\n<td align = 'left'>shift cases down/up by one</td>\n<td align = 'left'>\n\n\n::: {.cell class='plain'}\n\n```{.r .cell-code}\nlag(x)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1]       NA 3.389585 7.378957 1.629561\n [5] 4.778440 8.873564 5.530862 2.216495\n [9] 1.581772 7.471264\n```\n\n\n:::\n\n```{.r .cell-code}\nlead(x)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] 7.378957 1.629561 4.778440 8.873564\n [5] 5.530862 2.216495 1.581772 7.471264\n [9] 5.295647       NA\n```\n\n\n:::\n:::\n\n\n</td>\n</tr>\n<tr class = 'odd'>\n<td align = 'left'>`cummax()`, `cummin()`, `dplyr::cummean()`</td>\n<td align = 'left'>Cumulative max, min and mean</td>\n<td align = 'left'>\n\n\n::: {.cell class='plain'}\n\n```{.r .cell-code}\ncummax(x)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] 3.389585 7.378957 7.378957 7.378957\n [5] 8.873564 8.873564 8.873564 8.873564\n [9] 8.873564 8.873564\n```\n\n\n:::\n\n```{.r .cell-code}\ncummin(B)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] 0 0 0 0 0 0 0 0 0 0\n```\n\n\n:::\n\n```{.r .cell-code}\ncummean(x)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] 3.389585 5.384271 4.132701 4.294136\n [5] 5.210021 5.263495 4.828209 4.422404\n [9] 4.761167 4.814615\n```\n\n\n:::\n\n```{.r .cell-code}\ncummean(x > 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] 1.0000000 1.0000000 0.6666667 0.7500000\n [5] 0.8000000 0.8333333 0.8571429 0.7500000\n [9] 0.7777778 0.8000000\n```\n\n\n:::\n\n```{.r .cell-code}\ncummean(B)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] 0.0000000 0.5000000 0.6666667 0.7500000\n [5] 0.8000000 0.6666667 0.7142857 0.6250000\n [9] 0.5555556 0.6000000\n```\n\n\n:::\n:::\n\n\n</td>\n</tr>\n<tr class = 'even'>\n<td align = 'left'>`cumsum()`, `cumprod()`</td>\n<td align = 'left'>Cumulative sum and product</td>\n<td align = 'left'>\n\n\n::: {.cell class='plain'}\n\n```{.r .cell-code}\ncumsum(x)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1]  3.389585 10.768542 12.398103 17.176543\n [5] 26.050107 31.580969 33.797464 35.379235\n [9] 42.850499 48.146146\n```\n\n\n:::\n\n```{.r .cell-code}\ncumsum(x > 3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] 1 2 2 3 4 5 5 5 6 7\n```\n\n\n:::\n\n```{.r .cell-code}\ncumprod(B)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] 0 0 0 0 0 0 0 0 0 0\n```\n\n\n:::\n:::\n\n\n</td>\n</tr>\n<tr class = 'odd'>\n<td align = 'left'>`dplyr::cumall()`, `dplyr::cumany()`</td>\n<td align = 'left'>Cumulative all and any (mainly for use with filtering).</td>\n<td align = 'left'>\n\n\n::: {.cell class='plain'}\n\n```{.r .cell-code}\ncumall(x)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [9] TRUE TRUE\n```\n\n\n:::\n\n```{.r .cell-code}\ncumall(x > 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1]  TRUE  TRUE FALSE FALSE FALSE FALSE\n [7] FALSE FALSE FALSE FALSE\n```\n\n\n:::\n\n```{.r .cell-code}\ncumany(x > 4)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] FALSE  TRUE  TRUE  TRUE  TRUE  TRUE\n [7]  TRUE  TRUE  TRUE  TRUE\n```\n\n\n:::\n\n```{.r .cell-code}\ncumany(B)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] FALSE  TRUE  TRUE  TRUE  TRUE  TRUE\n [7]  TRUE  TRUE  TRUE  TRUE\n```\n\n\n:::\n\n```{.r .cell-code}\ncumall(B)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] FALSE FALSE FALSE FALSE FALSE FALSE\n [7] FALSE FALSE FALSE FALSE\n```\n\n\n:::\n:::\n\n\n</td>\n</tr>\n<tr class = 'even'>\n<td align = 'left'>`rank()`, `order()`</td>\n<td align = 'left'>Rank and order of items</td>\n<td align = 'left'>\n\n\n::: {.cell class='plain'}\n\n```{.r .cell-code}\nrank(x)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1]  4  8  2  5 10  7  3  1  9  6\n```\n\n\n:::\n\n```{.r .cell-code}\norder(x)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1]  8  3  7  1  4 10  6  2  9  5\n```\n\n\n:::\n\n```{.r .cell-code}\nrank(B)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] 2.5 7.5 7.5 7.5 7.5 2.5 7.5 2.5 2.5 7.5\n```\n\n\n:::\n:::\n\n\n</td>\n</tr>\n<tr class = 'odd'>\n<td align = 'left'>`dplyr::min_rank()`, `dplyr::dense_rank()`, `dplyr::percent_rank()`</td>\n<td align = 'left'>Rank in which ties = min, without gaps and expressed as a percentage.</td>\n<td align = 'left'>\n\n\n::: {.cell class='plain'}\n\n```{.r .cell-code}\nmin_rank(x)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1]  4  8  2  5 10  7  3  1  9  6\n```\n\n\n:::\n\n```{.r .cell-code}\ndense_rank(x)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1]  4  8  2  5 10  7  3  1  9  6\n```\n\n\n:::\n\n```{.r .cell-code}\npercent_rank(x)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] 0.3333333 0.7777778 0.1111111 0.4444444\n [5] 1.0000000 0.6666667 0.2222222 0.0000000\n [9] 0.8888889 0.5555556\n```\n\n\n:::\n\n```{.r .cell-code}\nrank(B)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] 2.5 7.5 7.5 7.5 7.5 2.5 7.5 2.5 2.5 7.5\n```\n\n\n:::\n:::\n\n\n</td>\n</tr>\n<tr class = 'even'>\n<td align = 'left'>`dplyr::row_number()`</td>\n<td align = 'left'>Rank in which ties = first.</td>\n<td align = 'left'>\n\n\n::: {.cell class='plain'}\n\n```{.r .cell-code}\nrow_number(x)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1]  4  8  2  5 10  7  3  1  9  6\n```\n\n\n:::\n:::\n\n\n</td>\n</tr>\n<tr class = 'odd'>\n<td align = 'left'>`dplyr::cume_dist()`</td>\n<td align = 'left'>Cumulative empirical distribution (proportion less than current value).</td>\n<td align = 'left'>\n\n\n::: {.cell class='plain'}\n\n```{.r .cell-code}\ncume_dist(x)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] 0.4 0.8 0.2 0.5 1.0 0.7 0.3 0.1 0.9 0.6\n```\n\n\n:::\n:::\n\n\n</td>\n</tr>\n<tr class = 'even'>\n<td align = 'left'>`dplyr::ntile()`</td>\n<td align = 'left'>Partition into (n) bins.</td>\n<td align = 'left'>\n\n\n::: {.cell class='plain'}\n\n```{.r .cell-code}\nntile(x, n = 3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] 1 3 1 2 3 2 1 1 3 2\n```\n\n\n:::\n:::\n\n\n</td>\n</tr>\n<tr class = 'odd'>\n<td align = 'left'>`dplyr::if_else()`</td>\n<td align = 'left'>Elementwise (case by case) if and else.</td>\n<td align = 'left'>\n\n\n::: {.cell class='plain'}\n\n```{.r .cell-code}\nif_else(x > 3, true = \"H\", false = \"L\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"H\" \"H\" \"L\" \"H\" \"H\" \"H\" \"L\" \"L\" \"H\" \"H\"\n```\n\n\n:::\n:::\n\n\n</td>\n</tr>\n<tr class = 'even'>\n<td align = 'left'>`dplyr::case_when()`</td>\n<td align = 'left'>Elementwise multiple if and else.</td>\n<td align = 'left'>\n\n\n::: {.cell class='plain'}\n\n```{.r .cell-code}\ncase_when(x <= 3 ~ \"L\",\n          x > 3 & x <= 6 ~ \"M\",\n          x > 6 ~ \"H\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"M\" \"H\" \"L\" \"M\" \"H\" \"M\" \"L\" \"L\" \"H\" \"M\"\n```\n\n\n:::\n:::\n\n\n</td>\n</tr>\n</table>\n\n# Sorting data (`arrange`)\n\n\n\n::: {.cell class='tikz'}\n::: {.cell-output-display}\n![](04_data_wrangling_files/figure-html/tikz_arrange-1.png){width=672}\n:::\n:::\n\n\n\nMost statistical analyses are invariant to the data order and thus\ndata reordering is typically only for aesthetics in tables and\nfigures.\n\nSorting data has the potential to be one of the most dangerous forms\nof data manipulation - particularly in spreadsheets in which there is\nno real binding between individual columns or rows. It is far to easy\nto accidentally sort the data in a single column (or row) without\napplying the ordering to all the other columns in the data set thereby\nresulting in broken data.\n\nWhilst the above apocalypse is still possible in R, the data\nstructures and manipulation interfaces mean that you really have to\ntry to break the data in this way. Furthermore, you are encouraged to\nstore reordered data in a different object to the original data, and\nhence 'rolling' back is trivial.\n \n<!--\n:::: {.columns style=\"display:flex;justify-content:space-evenly;\"}\n\n::: {.column style=\"width:40%;font-size:8pt;\"}\n-->\n\n\n::: {.cell}\n::: {.cell-output-display}\n`````{=html}\n<table class=\"paperTable table-condensed\">\n<caption>First 10 rows of the `dat.1` data.frame</caption>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> Treatment </th>\n   <th style=\"text-align:left;\"> Plot </th>\n   <th style=\"text-align:left;\"> Dose </th>\n   <th style=\"text-align:right;\"> Time </th>\n   <th style=\"text-align:right;\"> Resp1 </th>\n   <th style=\"text-align:right;\"> Resp2 </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> Control </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> H </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 8.12 </td>\n   <td style=\"text-align:right;\"> 3.06 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Control </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> H </td>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:right;\"> 20.55 </td>\n   <td style=\"text-align:right;\"> 25.94 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Control </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> H </td>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:right;\"> 27.49 </td>\n   <td style=\"text-align:right;\"> 29.85 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Control </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> H </td>\n   <td style=\"text-align:right;\"> 4 </td>\n   <td style=\"text-align:right;\"> 44.79 </td>\n   <td style=\"text-align:right;\"> 25.39 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Control </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> M </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 20.99 </td>\n   <td style=\"text-align:right;\"> 20.31 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Control </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> M </td>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:right;\"> 37.54 </td>\n   <td style=\"text-align:right;\"> 17.62 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Control </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> M </td>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:right;\"> 61.46 </td>\n   <td style=\"text-align:right;\"> 98.44 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Control </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> M </td>\n   <td style=\"text-align:right;\"> 4 </td>\n   <td style=\"text-align:right;\"> 82.21 </td>\n   <td style=\"text-align:right;\"> 160.01 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Control </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> L </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 31.73 </td>\n   <td style=\"text-align:right;\"> 21.22 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Control </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> L </td>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:right;\"> 59.08 </td>\n   <td style=\"text-align:right;\"> 37.51 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n<!--\n:::\n\n::: {.column style=\"width:60%;font-size:10pt;\"}\n-->\n\n::: {.panel-tabset .tabset-left}\n\n### Sort by Resp1\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |> arrange(Resp1) |>\n    head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Treatment Plot Dose Time Resp1 Resp2\n1   Control   P1    H    1  8.12  3.06\n2   Control   P2    H    1  8.14 23.93\n3   Control   P2    H    2 13.36 28.02\n4 Exclusion   P4    H    1 18.82 28.60\n5   Control   P2    M    1 19.95 19.73\n6   Control   P1    H    2 20.55 25.94\n```\n\n\n:::\n:::\n\n\n\n### Sort by Resp1 (descending order)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |> arrange(desc(Resp1)) |>\n    head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Treatment Plot Dose Time  Resp1  Resp2\n1 Exclusion   P4    L    4 242.31 304.70\n2 Exclusion   P3    L    4 238.76  54.23\n3 Exclusion   P4    L    3 181.09 314.49\n4 Exclusion   P3    L    3 175.87 286.33\n5 Exclusion   P4    M    4 161.67 256.34\n6 Exclusion   P3    M    4 159.69 112.65\n```\n\n\n:::\n:::\n\n\n\n### Sort by Dose and then Resp1\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |> arrange(Dose, Resp1) |>\n    head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Treatment Plot Dose Time Resp1 Resp2\n1   Control   P1    H    1  8.12  3.06\n2   Control   P2    H    1  8.14 23.93\n3   Control   P2    H    2 13.36 28.02\n4 Exclusion   P4    H    1 18.82 28.60\n5   Control   P1    H    2 20.55 25.94\n6 Exclusion   P3    H    1 21.86 23.58\n```\n\n\n:::\n:::\n\n\n\n### Sort by sum of Resp1 and Resp2\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |> arrange(Resp1 + Resp2) |>\n    head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Treatment Plot Dose Time Resp1 Resp2\n1   Control   P1    H    1  8.12  3.06\n2   Control   P2    H    1  8.14 23.93\n3   Control   P2    M    1 19.95 19.73\n4   Control   P1    M    1 20.99 20.31\n5   Control   P2    H    2 13.36 28.02\n6 Exclusion   P3    H    1 21.86 23.58\n```\n\n\n:::\n:::\n\n\n\n### Sort by Dose then by mean of Resp1 and Resp2 \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |> arrange(Dose, mean(c(Resp1, Resp2))) |>\n    head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Treatment Plot Dose Time Resp1 Resp2\n1   Control   P1    H    1  8.12  3.06\n2   Control   P1    H    2 20.55 25.94\n3   Control   P1    H    3 27.49 29.85\n4   Control   P1    H    4 44.79 25.39\n5   Control   P2    H    1  8.14 23.93\n6   Control   P2    H    2 13.36 28.02\n```\n\n\n:::\n:::\n\n\n<!--\n:::\n\n::::\n-->\n\n:::\n\n# Subsets of data\n\nWe regularly want to run an analysis or generate tabular/graphic\nsummaries for a sub-set of the data.  For example, we may wish to\nreduce the number of columns in the data frame to remove excessive and\nunwanted data fields.  Alternatively (or additionally), we may wish to\nfocus on a subset of the rows.  These two forms of sub-setting are:\n\n- `select`ing - reducing the number of columns\n- `filter`ing - reducing the number of rows\n\n## Subset columns (`select`) \n\nSelecting works by either including (or excluding) the column names\nthat you indicate or via special selection 'Helper' functions that\npass a vector of column indices to include in the subset data.\n\n\n\n::: {.cell class='tikz'}\n::: {.cell-output-display}\n![](04_data_wrangling_files/figure-html/tikz_select-1.png){width=672}\n:::\n:::\n\n\n\n:::: {.columns style=\"display:flex;justify-content:space-evenly;\"}\n\n::: {.column style=\"width:40%;font-size:8pt;\"}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n`````{=html}\n<table class=\"paperTable table-condensed\">\n<caption>First 10 rows of the `dat.1` data.frame</caption>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> Treatment </th>\n   <th style=\"text-align:left;\"> Plot </th>\n   <th style=\"text-align:left;\"> Dose </th>\n   <th style=\"text-align:right;\"> Time </th>\n   <th style=\"text-align:right;\"> Resp1 </th>\n   <th style=\"text-align:right;\"> Resp2 </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> Control </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> H </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 8.12 </td>\n   <td style=\"text-align:right;\"> 3.06 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Control </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> H </td>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:right;\"> 20.55 </td>\n   <td style=\"text-align:right;\"> 25.94 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Control </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> H </td>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:right;\"> 27.49 </td>\n   <td style=\"text-align:right;\"> 29.85 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Control </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> H </td>\n   <td style=\"text-align:right;\"> 4 </td>\n   <td style=\"text-align:right;\"> 44.79 </td>\n   <td style=\"text-align:right;\"> 25.39 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Control </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> M </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 20.99 </td>\n   <td style=\"text-align:right;\"> 20.31 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Control </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> M </td>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:right;\"> 37.54 </td>\n   <td style=\"text-align:right;\"> 17.62 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Control </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> M </td>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:right;\"> 61.46 </td>\n   <td style=\"text-align:right;\"> 98.44 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Control </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> M </td>\n   <td style=\"text-align:right;\"> 4 </td>\n   <td style=\"text-align:right;\"> 82.21 </td>\n   <td style=\"text-align:right;\"> 160.01 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Control </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> L </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 31.73 </td>\n   <td style=\"text-align:right;\"> 21.22 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Control </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> L </td>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:right;\"> 59.08 </td>\n   <td style=\"text-align:right;\"> 37.51 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\n:::\n \n::: {.column style=\"width:60%;font-size:10pt;\"}\n<!--\n| Helper function | Select variables ...                                                        |\n|-----------------|-----------------------------------------------------------------------------|\n| `contains()`    | Whose name contains the \"string\"                                            |\n| `starts_with()` | Whose name starts with \"string\"                                             |\n| `ends_with()`   | Whose name ends with \"string\"                                               |\n| `matches()`     | Whose name is matched with a [regex](#Gregular-expression)                  |\n| `num_range()`   | Whose name starts with \"string\" followed by \"numbers\"                       |\n| `everything()`  | All variables - useful in combination with other selection helper functions |\n| `all_of()`      | Checks that all nominated variables are present                             |\n| `any_of()`      | Acts on any nominated variables that are present                            |\n| `where()`       | Whose variable is predicated by a function                                  |\nNote, by default, the above searchers are NOT case sensitive\n-->\n:::\n\n::::\n\n\n\n::: {.cell}\n<style type=\"text/css\">\n</style>\n:::\n\n\n\n    \n\t\nThe `select()` _function_ users [_tidy-select_ semantics](#tidy-select-table).\n\n::: {.panel-tabset .tabset-left}\n\n### Inclusion / exclusion of from bare names\nSelect specific variables\t\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |> select(Treatment, Dose, Time, Resp1) |>\n    head() \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Treatment Dose Time Resp1\n1   Control    H    1  8.12\n2   Control    H    2 20.55\n3   Control    H    3 27.49\n4   Control    H    4 44.79\n5   Control    M    1 20.99\n6   Control    M    2 37.54\n```\n\n\n:::\n:::\n\n\nExclude specific variables\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |> select(-Plot, -Resp2) |>\n    head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Treatment Dose Time Resp1\n1   Control    H    1  8.12\n2   Control    H    2 20.55\n3   Control    H    3 27.49\n4   Control    H    4 44.79\n5   Control    M    1 20.99\n6   Control    M    2 37.54\n```\n\n\n:::\n:::\n\n\n\n### Inclusion / exclusion based on position\n\nInclude columns `Treatment` through to `Time`\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |> select(Treatment:Time) |>\n    head() \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Treatment Plot Dose Time\n1   Control   P1    H    1\n2   Control   P1    H    2\n3   Control   P1    H    3\n4   Control   P1    H    4\n5   Control   P1    M    1\n6   Control   P1    M    2\n```\n\n\n:::\n:::\n\n\nExclude columns `Treatment` through to `Time`\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |> select(-(Treatment:Time)) |>\n    head() \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Resp1 Resp2\n1  8.12  3.06\n2 20.55 25.94\n3 27.49 29.85\n4 44.79 25.39\n5 20.99 20.31\n6 37.54 17.62\n```\n\n\n:::\n:::\n\n\nExclude columns `Treatment` through to `Time`\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |> select(!(Treatment:Time)) |>\n    head() \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Resp1 Resp2\n1  8.12  3.06\n2 20.55 25.94\n3 27.49 29.85\n4 44.79 25.39\n5 20.99 20.31\n6 37.54 17.62\n```\n\n\n:::\n:::\n\n\n### Inclusion / exclusion from name predicates\nNames containing and 'r' (case insensitive)\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |> select(contains(\"R\")) |>\n    head() \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Treatment Resp1 Resp2\n1   Control  8.12  3.06\n2   Control 20.55 25.94\n3   Control 27.49 29.85\n4   Control 44.79 25.39\n5   Control 20.99 20.31\n6   Control 37.54 17.62\n```\n\n\n:::\n:::\n\n\nNames starting with 'r' (case insensitive)\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |> select(starts_with(\"R\")) |>\n    head() \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Resp1 Resp2\n1  8.12  3.06\n2 20.55 25.94\n3 27.49 29.85\n4 44.79 25.39\n5 20.99 20.31\n6 37.54 17.62\n```\n\n\n:::\n:::\n\n\nNames ending in 'e' (case insensitive)\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |> select(ends_with(\"e\")) |>\n    head() \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Dose Time\n1    H    1\n2    H    2\n3    H    3\n4    H    4\n5    M    1\n6    M    2\n```\n\n\n:::\n:::\n\n\nNames that are exactly four characters long\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |> select(matches(\"^.{4}$\")) |>\n    head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Plot Dose Time\n1   P1    H    1\n2   P1    H    2\n3   P1    H    3\n4   P1    H    4\n5   P1    M    1\n6   P1    M    2\n```\n\n\n:::\n:::\n\n\n\n### Select and `num_range`\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |> select(num_range(\"Resp\", 1:2)) |>\n    head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Resp1 Resp2\n1  8.12  3.06\n2 20.55 25.94\n3 27.49 29.85\n4 44.79 25.39\n5 20.99 20.31\n6 37.54 17.62\n```\n\n\n:::\n:::\n\n\n\n### Reorder columns...\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |> select(num_range(\"Resp\", 1:2),\n                 everything()) |>\n    head() \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Resp1 Resp2 Treatment Plot Dose Time\n1  8.12  3.06   Control   P1    H    1\n2 20.55 25.94   Control   P1    H    2\n3 27.49 29.85   Control   P1    H    3\n4 44.79 25.39   Control   P1    H    4\n5 20.99 20.31   Control   P1    M    1\n6 37.54 17.62   Control   P1    M    2\n```\n\n\n:::\n:::\n\n\n\n### Select and `all_of` / `any_of` \nSelect from a vector of strings\n\n\n::: {.cell}\n\n```{.r .cell-code}\nVars <- c(\"Resp1\", \"Resp2\")\ndat.1 |> select(all_of(Vars)) |>\n    head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Resp1 Resp2\n1  8.12  3.06\n2 20.55 25.94\n3 27.49 29.85\n4 44.79 25.39\n5 20.99 20.31\n6 37.54 17.62\n```\n\n\n:::\n:::\n\n\n\nSelect from string vector of strings...\n\n\n::: {.cell}\n\n```{.r .cell-code}\nVars <- c(\"Resp1\", \"Resp2\", \"Resp3\")\ndat.1 |> select(any_of(Vars)) |>\n    head() \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Resp1 Resp2\n1  8.12  3.06\n2 20.55 25.94\n3 27.49 29.85\n4 44.79 25.39\n5 20.99 20.31\n6 37.54 17.62\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nVars <- c(\"Resp1\", \"Resp2\", \"Resp3\")\ndat.1 |> select(-any_of(Vars)) |>\n    head() \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Treatment Plot Dose Time\n1   Control   P1    H    1\n2   Control   P1    H    2\n3   Control   P1    H    3\n4   Control   P1    H    4\n5   Control   P1    M    1\n6   Control   P1    M    2\n```\n\n\n:::\n:::\n\n\n\n### Select and `where`\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |> select(where(is.numeric)) |>\n    head() \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Time Resp1 Resp2\n1    1  8.12  3.06\n2    2 20.55 25.94\n3    3 27.49 29.85\n4    4 44.79 25.39\n5    1 20.99 20.31\n6    2 37.54 17.62\n```\n\n\n:::\n:::\n\n\n:::\n\nSince `tibble`s permit column names that have special characters in\nthem, in order to refer to a column that has a name with special\ncharacters, it is necessary to enclose the name in backticks.  For\nexample, to select the variable, `Pocillopora damicornis` (which\ncontains a space in the name - these are not permitted in\n`data.frame`s, yet are permitted in `tibble`s) and `print` the first\nsix rows:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntikus |>\n    select(`Pocillopora damicornis`) |>\n    head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Pocillopora damicornis\nV1                     79\nV2                     51\nV3                     42\nV4                     15\nV5                      9\nV6                     72\n```\n\n\n:::\n:::\n\n\n\n\n## Renaming columns (`rename`)\nNote, it is possible to have column names renamed during a `select`\naction.\n\nBoth the `rename()` and `select()` _functions_ user [_tidy-select_ semantics](#tidy-select-table).\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |>\n    select(\"Weight\" = Resp1) |>\n    head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Weight\n1   8.12\n2  20.55\n3  27.49\n4  44.79\n5  20.99\n6  37.54\n```\n\n\n:::\n:::\n\n\nIf we want to retain the other variables, we would also have to include them in the `select` either explicitly, or via a helper function.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |>\n    select(everything(), \"Weight\" = Resp1) |>\n    head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Treatment Plot Dose Time Weight Resp2\n1   Control   P1    H    1   8.12  3.06\n2   Control   P1    H    2  20.55 25.94\n3   Control   P1    H    3  27.49 29.85\n4   Control   P1    H    4  44.79 25.39\n5   Control   P1    M    1  20.99 20.31\n6   Control   P1    M    2  37.54 17.62\n```\n\n\n:::\n:::\n\n\nHowever, note that this might not retain the order of the columns.  Hence, for simple renaming of columns, the `rename` _function_ is more convenient.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |>\n    rename(\"Weight\" = Resp1) |>\n    head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Treatment Plot Dose Time Weight Resp2\n1   Control   P1    H    1   8.12  3.06\n2   Control   P1    H    2  20.55 25.94\n3   Control   P1    H    3  27.49 29.85\n4   Control   P1    H    4  44.79 25.39\n5   Control   P1    M    1  20.99 20.31\n6   Control   P1    M    2  37.54 17.62\n```\n\n\n:::\n:::\n\n\n\nIt is also possible to rename columns based on a lookup (list or\ndata.frame).  This is handy for cases when data columns have\nconveniently abbreviated names yet you are preparing data for tabular\noutput - and thus need more descriptive column names.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlookup <- list(\"Response 1\" = \"Resp1\",\n               \"Response 2\" = \"Resp2\")\ndat.1 |>\n    rename(!!!lookup) |>\n    head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Treatment Plot Dose Time Response 1 Response 2\n1   Control   P1    H    1       8.12       3.06\n2   Control   P1    H    2      20.55      25.94\n3   Control   P1    H    3      27.49      29.85\n4   Control   P1    H    4      44.79      25.39\n5   Control   P1    M    1      20.99      20.31\n6   Control   P1    M    2      37.54      17.62\n```\n\n\n:::\n:::\n\n\n\nIn the above example, the _big bang operator _ `!!!` forces-splice a\nlist operator.  That is, the elements of the list are spliced into the\nstatement as if they had been included directly.\n\nTo do the same from a data.frame lookup..\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlookup <- tribble(\n    ~Abbr_name, ~Long_name,\n    \"Resp1\",     \"Response 1\",\n    \"Resp2\",     \"Response 2\")\n## Convert to list of pairs\nlookup <- lookup |>\n    select(Long_name, Abbr_name) |> \n    deframe() |>\n    list()\ndat.1 |>\n    rename(!!!lookup) |>\n    head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Treatment Plot Dose Time Response 1 Response 2\n1   Control   P1    H    1       8.12       3.06\n2   Control   P1    H    2      20.55      25.94\n3   Control   P1    H    3      27.49      29.85\n4   Control   P1    H    4      44.79      25.39\n5   Control   P1    M    1      20.99      20.31\n6   Control   P1    M    2      37.54      17.62\n```\n\n\n:::\n:::\n\n\n\n    \n## Select a single column (`pull`)\n\nAs indicated earlier, single column indices on `tibble`s return a single column `tibble`.  To extract a single column as a vector, there is a `pull` _function_.\n\nThe `pull()` _function_ users [_tidy-select_ semantics](#tidy-select-table).\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |> pull(Resp1) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1]   8.12  20.55  27.49  44.79  20.99  37.54  61.46  82.21  31.73  59.08\n[11]  94.54 121.17   8.14  13.36  33.37  39.87  19.95  42.83  62.46  81.78\n[21]  32.76  62.35  90.22 114.03  21.86  39.83  59.53  75.59  38.57  81.25\n[31] 124.08 159.69  61.16 119.84 175.87 238.76  18.82  39.82  63.30  82.29\n[41]  39.51  79.24 122.09 161.67  57.93 117.88 181.09 242.31\n```\n\n\n:::\n:::\n\n\n\n\n## Subset of rows (`filter`)\n\nFiltering selects rows for which a condition is evaluated to be\nTRUE. Hence, any logical expression or vectorized function that\nreturns Boolean values (TRUE or FALSE) can be used for filtering.\n\nThe `filter()` _function_ users [_data-masking_ semantics](#the-grammar-of-data-manipulation).\n\n\n\n::: {.cell class='tikz'}\n::: {.cell-output-display}\n![](04_data_wrangling_files/figure-html/tikz_filter-1.png){width=672}\n:::\n:::\n\n\n\n:::: {.columns style=\"display:flex;justify-content:space-evenly;\"}\n\n::: {.column style=\"width:45%;font-size:10pt;\"}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n`````{=html}\n<table class=\"paperTable table-condensed\">\n<caption>First 10 rows of the `dat.1` data.frame</caption>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> Treatment </th>\n   <th style=\"text-align:left;\"> Plot </th>\n   <th style=\"text-align:left;\"> Dose </th>\n   <th style=\"text-align:right;\"> Time </th>\n   <th style=\"text-align:right;\"> Resp1 </th>\n   <th style=\"text-align:right;\"> Resp2 </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> Control </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> H </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 8.12 </td>\n   <td style=\"text-align:right;\"> 3.06 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Control </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> H </td>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:right;\"> 20.55 </td>\n   <td style=\"text-align:right;\"> 25.94 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Control </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> H </td>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:right;\"> 27.49 </td>\n   <td style=\"text-align:right;\"> 29.85 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Control </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> H </td>\n   <td style=\"text-align:right;\"> 4 </td>\n   <td style=\"text-align:right;\"> 44.79 </td>\n   <td style=\"text-align:right;\"> 25.39 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Control </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> M </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 20.99 </td>\n   <td style=\"text-align:right;\"> 20.31 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Control </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> M </td>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:right;\"> 37.54 </td>\n   <td style=\"text-align:right;\"> 17.62 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Control </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> M </td>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:right;\"> 61.46 </td>\n   <td style=\"text-align:right;\"> 98.44 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Control </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> M </td>\n   <td style=\"text-align:right;\"> 4 </td>\n   <td style=\"text-align:right;\"> 82.21 </td>\n   <td style=\"text-align:right;\"> 160.01 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Control </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> L </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 31.73 </td>\n   <td style=\"text-align:right;\"> 21.22 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Control </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> L </td>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:right;\"> 59.08 </td>\n   <td style=\"text-align:right;\"> 37.51 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\n:::\n \n::: {.column style=\"width:55%;font-size:12pt;\"}\n\n: {.primary .bordered .sm .paramsTable}\n\n| Helper function | Combine multiple selections ... |\n|-----------------|---------------------------------|\n| `if_any()`      | With an an *OR*                 |\n| `if_all()`      | With an *AND*)                  |\nNote, by default, the above searchers are NOT case sensitive\n\n\n: {.primary .bordered .sm .paramsTable}\n\n| Logical/Boolean function | Description                 |\n|--------------------------|-----------------------------|\n| `==`                     | is equal to                 |\n| `!=`                     | is not equal to             |\n| `<`                      | is less than                |\n| `>`                      | is greater than             |\n| `<=`                     | is less than or equal to    |\n| `>=`                     | is greater than or equal to |\n| `is.na()`                | is equal to `NA`            |\n| `!is.na()`               | is not equal to `NA`        |\n| `%in%`                   | is in the following vector  |\n| `!`                      | not                         |\n| `&`  `&&`                | logical AND                 |\n| `|` `||`                 | logical OR                  |\n| `xor()`                  | elementwise OR              |\n| `isTRUE()`               | is true                     |\n| `isFALSE()`              | is false                    |\n:::\n\n::::\n\n::: {.panel-tabset .tabset-left}\n\n### Filter by category level\n\t\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |> filter(Dose == \"H\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Treatment Plot Dose Time Resp1 Resp2\n1    Control   P1    H    1  8.12  3.06\n2    Control   P1    H    2 20.55 25.94\n3    Control   P1    H    3 27.49 29.85\n4    Control   P1    H    4 44.79 25.39\n5    Control   P2    H    1  8.14 23.93\n6    Control   P2    H    2 13.36 28.02\n7    Control   P2    H    3 33.37 37.17\n8    Control   P2    H    4 39.87 38.25\n9  Exclusion   P3    H    1 21.86 23.58\n10 Exclusion   P3    H    2 39.83 28.03\n11 Exclusion   P3    H    3 59.53 21.32\n12 Exclusion   P3    H    4 75.59 90.76\n13 Exclusion   P4    H    1 18.82 28.60\n14 Exclusion   P4    H    2 39.82 39.07\n15 Exclusion   P4    H    3 63.30 93.43\n16 Exclusion   P4    H    4 82.29 60.15\n```\n\n\n:::\n:::\n\n\n\n### Filter by multiple category levels\n\t\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |> filter(Dose %in% c(\"H\", \"M\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Treatment Plot Dose Time  Resp1  Resp2\n1    Control   P1    H    1   8.12   3.06\n2    Control   P1    H    2  20.55  25.94\n3    Control   P1    H    3  27.49  29.85\n4    Control   P1    H    4  44.79  25.39\n5    Control   P1    M    1  20.99  20.31\n6    Control   P1    M    2  37.54  17.62\n7    Control   P1    M    3  61.46  98.44\n8    Control   P1    M    4  82.21 160.01\n9    Control   P2    H    1   8.14  23.93\n10   Control   P2    H    2  13.36  28.02\n11   Control   P2    H    3  33.37  37.17\n12   Control   P2    H    4  39.87  38.25\n13   Control   P2    M    1  19.95  19.73\n14   Control   P2    M    2  42.83  40.52\n15   Control   P2    M    3  62.46   4.81\n16   Control   P2    M    4  81.78 136.66\n17 Exclusion   P3    H    1  21.86  23.58\n18 Exclusion   P3    H    2  39.83  28.03\n19 Exclusion   P3    H    3  59.53  21.32\n20 Exclusion   P3    H    4  75.59  90.76\n21 Exclusion   P3    M    1  38.57  30.63\n22 Exclusion   P3    M    2  81.25  83.61\n23 Exclusion   P3    M    3 124.08 124.09\n24 Exclusion   P3    M    4 159.69 112.65\n25 Exclusion   P4    H    1  18.82  28.60\n26 Exclusion   P4    H    2  39.82  39.07\n27 Exclusion   P4    H    3  63.30  93.43\n28 Exclusion   P4    H    4  82.29  60.15\n29 Exclusion   P4    M    1  39.51  45.90\n30 Exclusion   P4    M    2  79.24  88.04\n31 Exclusion   P4    M    3 122.09  84.19\n32 Exclusion   P4    M    4 161.67 256.34\n```\n\n\n:::\n:::\n\n\n\n### Filter by numeric\n\t\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |> filter(Resp1 < 25)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Treatment Plot Dose Time Resp1 Resp2\n1   Control   P1    H    1  8.12  3.06\n2   Control   P1    H    2 20.55 25.94\n3   Control   P1    M    1 20.99 20.31\n4   Control   P2    H    1  8.14 23.93\n5   Control   P2    H    2 13.36 28.02\n6   Control   P2    M    1 19.95 19.73\n7 Exclusion   P3    H    1 21.86 23.58\n8 Exclusion   P4    H    1 18.82 28.60\n```\n\n\n:::\n:::\n\n\n\n### Filter and `between`\n\t\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |> filter(between(Resp1, 15, 25))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Treatment Plot Dose Time Resp1 Resp2\n1   Control   P1    H    2 20.55 25.94\n2   Control   P1    M    1 20.99 20.31\n3   Control   P2    M    1 19.95 19.73\n4 Exclusion   P3    H    1 21.86 23.58\n5 Exclusion   P4    H    1 18.82 28.60\n```\n\n\n:::\n:::\n\n\n\n### Filter by numeric (cumulative functions)\nKeep all cases after a value of Resp1 has exceeded 200\t\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |> filter(cumany(Resp1 > 200))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Treatment Plot Dose Time  Resp1  Resp2\n1  Exclusion   P3    L    4 238.76  54.23\n2  Exclusion   P4    H    1  18.82  28.60\n3  Exclusion   P4    H    2  39.82  39.07\n4  Exclusion   P4    H    3  63.30  93.43\n5  Exclusion   P4    H    4  82.29  60.15\n6  Exclusion   P4    M    1  39.51  45.90\n7  Exclusion   P4    M    2  79.24  88.04\n8  Exclusion   P4    M    3 122.09  84.19\n9  Exclusion   P4    M    4 161.67 256.34\n10 Exclusion   P4    L    1  57.93  85.24\n11 Exclusion   P4    L    2 117.88 167.90\n12 Exclusion   P4    L    3 181.09 314.49\n13 Exclusion   P4    L    4 242.31 304.70\n```\n\n\n:::\n:::\n\n\nKeep all cases until the first case of Resp1 < 25\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |> filter(cumall(Resp1 < 25))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Treatment Plot Dose Time Resp1 Resp2\n1   Control   P1    H    1  8.12  3.06\n2   Control   P1    H    2 20.55 25.94\n```\n\n\n:::\n:::\n\n\n\n### Filter by multiple filters (AND)\n\t\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |> filter(Dose == \"H\", Resp1 < 25)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Treatment Plot Dose Time Resp1 Resp2\n1   Control   P1    H    1  8.12  3.06\n2   Control   P1    H    2 20.55 25.94\n3   Control   P2    H    1  8.14 23.93\n4   Control   P2    H    2 13.36 28.02\n5 Exclusion   P3    H    1 21.86 23.58\n6 Exclusion   P4    H    1 18.82 28.60\n```\n\n\n:::\n\n```{.r .cell-code}\n##OR\ndat.1 |> filter(Dose == \"H\" & Resp1 < 25)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Treatment Plot Dose Time Resp1 Resp2\n1   Control   P1    H    1  8.12  3.06\n2   Control   P1    H    2 20.55 25.94\n3   Control   P2    H    1  8.14 23.93\n4   Control   P2    H    2 13.36 28.02\n5 Exclusion   P3    H    1 21.86 23.58\n6 Exclusion   P4    H    1 18.82 28.60\n```\n\n\n:::\n:::\n\n\n\n### Filter by multiple filters (OR)\n\t\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |> filter(Dose == \"H\" | Resp1 < 25)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Treatment Plot Dose Time Resp1 Resp2\n1    Control   P1    H    1  8.12  3.06\n2    Control   P1    H    2 20.55 25.94\n3    Control   P1    H    3 27.49 29.85\n4    Control   P1    H    4 44.79 25.39\n5    Control   P1    M    1 20.99 20.31\n6    Control   P2    H    1  8.14 23.93\n7    Control   P2    H    2 13.36 28.02\n8    Control   P2    H    3 33.37 37.17\n9    Control   P2    H    4 39.87 38.25\n10   Control   P2    M    1 19.95 19.73\n11 Exclusion   P3    H    1 21.86 23.58\n12 Exclusion   P3    H    2 39.83 28.03\n13 Exclusion   P3    H    3 59.53 21.32\n14 Exclusion   P3    H    4 75.59 90.76\n15 Exclusion   P4    H    1 18.82 28.60\n16 Exclusion   P4    H    2 39.82 39.07\n17 Exclusion   P4    H    3 63.30 93.43\n18 Exclusion   P4    H    4 82.29 60.15\n```\n\n\n:::\n:::\n\n\n\n### Filter by multiple selection filters (AND)\n\t\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |> filter(if_all(starts_with(\"Resp\"), ~ . < 25))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Treatment Plot Dose Time Resp1 Resp2\n1   Control   P1    H    1  8.12  3.06\n2   Control   P1    M    1 20.99 20.31\n3   Control   P2    H    1  8.14 23.93\n4   Control   P2    M    1 19.95 19.73\n5 Exclusion   P3    H    1 21.86 23.58\n```\n\n\n:::\n:::\n\n\n\n### Filter by multiple selection filters (OR)\n\t\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |> filter(if_any(starts_with(\"Resp\"), ~ . < 25))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Treatment Plot Dose Time Resp1 Resp2\n1    Control   P1    H    1  8.12  3.06\n2    Control   P1    H    2 20.55 25.94\n3    Control   P1    M    1 20.99 20.31\n4    Control   P1    M    2 37.54 17.62\n5    Control   P1    L    1 31.73 21.22\n6    Control   P2    H    1  8.14 23.93\n7    Control   P2    H    2 13.36 28.02\n8    Control   P2    M    1 19.95 19.73\n9    Control   P2    M    3 62.46  4.81\n10 Exclusion   P3    H    1 21.86 23.58\n11 Exclusion   P3    H    3 59.53 21.32\n12 Exclusion   P4    H    1 18.82 28.60\n```\n\n\n:::\n:::\n\n\n:::\n\n## Subset of rows by position (`slice`) \n\n::: {.panel-tabset .tabset-left}\n\n### Keep rows 1 through to 4\n\t\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |> slice(1:4)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Treatment Plot Dose Time Resp1 Resp2\n1   Control   P1    H    1  8.12  3.06\n2   Control   P1    H    2 20.55 25.94\n3   Control   P1    H    3 27.49 29.85\n4   Control   P1    H    4 44.79 25.39\n```\n\n\n:::\n:::\n\n\n\n### Keep rows 1 through to 4 and 7\n\t\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |> slice(c(1:4, 7))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Treatment Plot Dose Time Resp1 Resp2\n1   Control   P1    H    1  8.12  3.06\n2   Control   P1    H    2 20.55 25.94\n3   Control   P1    H    3 27.49 29.85\n4   Control   P1    H    4 44.79 25.39\n5   Control   P1    M    3 61.46 98.44\n```\n\n\n:::\n:::\n\n\n\n:::\n\n## Random selection of rows (`sample_n`) \n\nIn each of the examples, I will set the random seed to ensure we can\nall repeat the example exactly.\n\n::: {.panel-tabset .tabset-left}\n\n### Random sample of rows\nRandom sample of 10 rows (without replacement)\t\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(123)\ndat.1 |> sample_n(10, replace = FALSE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Treatment Plot Dose Time  Resp1  Resp2\n1  Exclusion   P3    M    3 124.08 124.09\n2    Control   P2    H    3  33.37  37.17\n3    Control   P2    H    2  13.36  28.02\n4    Control   P1    H    3  27.49  29.85\n5  Exclusion   P4    M    2  79.24  88.04\n6  Exclusion   P4    M    3 122.09  84.19\n7  Exclusion   P4    H    1  18.82  28.60\n8  Exclusion   P4    L    2 117.88 167.90\n9  Exclusion   P3    H    1  21.86  23.58\n10 Exclusion   P3    H    2  39.83  28.03\n```\n\n\n:::\n:::\n\n\n\n### Random fractional sample of rows\nRandom sample of 25% of the rows (without replacement)\t\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(123)\ndat.1 |> sample_frac(0.25, replace = FALSE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Treatment Plot Dose Time  Resp1  Resp2\n1  Exclusion   P3    M    3 124.08 124.09\n2    Control   P2    H    3  33.37  37.17\n3    Control   P2    H    2  13.36  28.02\n4    Control   P1    H    3  27.49  29.85\n5  Exclusion   P4    M    2  79.24  88.04\n6  Exclusion   P4    M    3 122.09  84.19\n7  Exclusion   P4    H    1  18.82  28.60\n8  Exclusion   P4    L    2 117.88 167.90\n9  Exclusion   P3    H    1  21.86  23.58\n10 Exclusion   P3    H    2  39.83  28.03\n11 Exclusion   P3    H    3  59.53  21.32\n12   Control   P1    M    1  20.99  20.31\n```\n\n\n:::\n:::\n\n\n\n:::\n\n## Effects of filtering on factor levels\n\nIn R, categorical variables (_factors_) are actually stored as vectors\nof integers (1, 2, 3, ...) along with an attribute that registers the\nnames (and order) of the levels.  We can see this, if we ask to see\nthe _structure_ of any categorical variable:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr(dat.1$Dose)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n Factor w/ 3 levels \"H\",\"L\",\"M\": 1 1 1 1 3 3 3 3 2 2 ...\n```\n\n\n:::\n:::\n\n\n\nIn the above, we see that the levels of the `Dose` variable are \"H\",\n\"L\", \"M\" (by default, levels of an unordered factor are\nalphabetical). The first four cases are all `1`, which is mapped to\n\"H\".  The next four are `3` which maps to \"M\" and so on.\n\nAlternatively, we can explore the levels _attribute_ of a factor via\nthe `levels()` _function_:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlevels(dat.1$Dose)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"H\" \"L\" \"M\"\n```\n\n\n:::\n\n```{.r .cell-code}\nlevels(dat.1$Plot)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"P1\" \"P2\" \"P3\" \"P4\"\n```\n\n\n:::\n\n```{.r .cell-code}\nlevels(dat.1$Treatment)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Control\"   \"Exclusion\"\n```\n\n\n:::\n:::\n\n\n\nAlthough subsets of rows (`filter`, `sample_n` etc) may appear to\ncompletely remove particular levels of a categorical variable, these\nactions do not update factor attributes.  Consequently, many routines\nthat operate on such factors (such as plots and statistical models)\nwill proceed as if all factor levels are present (e.g. plots will\ncontain gaps where space has been provisioned for all levels even\nthough there may be no data associated with all levels).\n\nTo illustrate this, we will filter the `dat.1` data such that it only\nincludes cases for which `Plot` equals \"P1\" and then explore the\n_levels_ attribute of some of the categorical variables.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.2 <- dat.1 |>\n    filter(Plot == \"P1\")\ndat.2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Treatment Plot Dose Time  Resp1  Resp2\n1    Control   P1    H    1   8.12   3.06\n2    Control   P1    H    2  20.55  25.94\n3    Control   P1    H    3  27.49  29.85\n4    Control   P1    H    4  44.79  25.39\n5    Control   P1    M    1  20.99  20.31\n6    Control   P1    M    2  37.54  17.62\n7    Control   P1    M    3  61.46  98.44\n8    Control   P1    M    4  82.21 160.01\n9    Control   P1    L    1  31.73  21.22\n10   Control   P1    L    2  59.08  37.51\n11   Control   P1    L    3  94.54 119.22\n12   Control   P1    L    4 121.17 116.45\n```\n\n\n:::\n\n```{.r .cell-code}\nlevels(dat.2$Dose)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"H\" \"L\" \"M\"\n```\n\n\n:::\n\n```{.r .cell-code}\nlevels(dat.2$Plot)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"P1\" \"P2\" \"P3\" \"P4\"\n```\n\n\n:::\n\n```{.r .cell-code}\nlevels(dat.2$Treatment)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Control\"   \"Exclusion\"\n```\n\n\n:::\n:::\n\n\n\nSo although the data only contains `Plot` values of \"P1\" (and\n`Treatment` values of \"Control\"), the levels are still listed as \"P1\",\n\"P2\", \"P3\", and \"P4\".\n\nTo ensure that the attributes reflect the subset data, it is necessary\nto use the `droplevels()` _function_:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.2 <- dat.1 |>\n    filter(Plot == \"P1\") |>\n    droplevels()\nlevels(dat.2$Dose)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"H\" \"L\" \"M\"\n```\n\n\n:::\n\n```{.r .cell-code}\nlevels(dat.2$Plot)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"P1\"\n```\n\n\n:::\n\n```{.r .cell-code}\nlevels(dat.2$Treatment)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Control\"\n```\n\n\n:::\n:::\n\n\n\n# Adding/modifying columns (`mutate`)\n\n\n\n::: {.cell class='tikz'}\n::: {.cell-output-display}\n![](04_data_wrangling_files/figure-html/tikz_mutate-1.png){width=672}\n:::\n:::\n\n\n\nTo add to (mutate) a data set, a **vectorised** function is applied either\nonce or across one or more existing columns.  \n\nThe `mutate()` _function_ users [_data-masking_ semantics](#the-grammar-of-data-manipulation) and can use [_tidy-select_ semantics](#tidy-select-table) via `across()`.\n\nWhether transforming/scaling existing variables or generating new\nvariables derived from existing variables it is advisable that\nexisting variables be retained (unless the data are huge and storage\nis tight).\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |> mutate(Sum = Resp1 + Resp2) |>\n    head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Treatment Plot Dose Time Resp1 Resp2   Sum\n1   Control   P1    H    1  8.12  3.06 11.18\n2   Control   P1    H    2 20.55 25.94 46.49\n3   Control   P1    H    3 27.49 29.85 57.34\n4   Control   P1    H    4 44.79 25.39 70.18\n5   Control   P1    M    1 20.99 20.31 41.30\n6   Control   P1    M    2 37.54 17.62 55.16\n```\n\n\n:::\n:::\n\n\n\nMultiple additions/modifications can be defined in a single `mutate`\ncall and the changes occur sequentially.  Consequently, subsequent\nchanges can build upon early changes.  To illustrate this, we will\ncreate a new variable (`cResp1`) that is a centred version of the\n`Resp1` variable (centring is when the mean of a variable is\nsubtracted from each value resulting in a variable whose mean is\nexactly zero, yet all other properties are unaffected.).\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |> mutate(meanResp1 = mean(Resp1),\n                 cResp1 = Resp1 - meanResp1) |>\n    head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Treatment Plot Dose Time Resp1 Resp2 meanResp1    cResp1\n1   Control   P1    H    1  8.12  3.06  75.26604 -67.14604\n2   Control   P1    H    2 20.55 25.94  75.26604 -54.71604\n3   Control   P1    H    3 27.49 29.85  75.26604 -47.77604\n4   Control   P1    H    4 44.79 25.39  75.26604 -30.47604\n5   Control   P1    M    1 20.99 20.31  75.26604 -54.27604\n6   Control   P1    M    2 37.54 17.62  75.26604 -37.72604\n```\n\n\n:::\n:::\n\n\n\nThe following table lists some of the more useful vectorised functions\nto use with `mutate`.  Importantly, vectorised functions return a\nvector of the same length as they receive since all `mutate` edits\nmust preserve the number of rows.\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n`````{=html}\n<table class=\"paperTable table-condensed\">\n<caption>First 10 rows of the `dat.1` data.frame</caption>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> Treatment </th>\n   <th style=\"text-align:left;\"> Plot </th>\n   <th style=\"text-align:left;\"> Dose </th>\n   <th style=\"text-align:right;\"> Time </th>\n   <th style=\"text-align:right;\"> Resp1 </th>\n   <th style=\"text-align:right;\"> Resp2 </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> Control </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> H </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 8.12 </td>\n   <td style=\"text-align:right;\"> 3.06 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Control </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> H </td>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:right;\"> 20.55 </td>\n   <td style=\"text-align:right;\"> 25.94 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Control </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> H </td>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:right;\"> 27.49 </td>\n   <td style=\"text-align:right;\"> 29.85 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Control </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> H </td>\n   <td style=\"text-align:right;\"> 4 </td>\n   <td style=\"text-align:right;\"> 44.79 </td>\n   <td style=\"text-align:right;\"> 25.39 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Control </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> M </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 20.99 </td>\n   <td style=\"text-align:right;\"> 20.31 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Control </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> M </td>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:right;\"> 37.54 </td>\n   <td style=\"text-align:right;\"> 17.62 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Control </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> M </td>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:right;\"> 61.46 </td>\n   <td style=\"text-align:right;\"> 98.44 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Control </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> M </td>\n   <td style=\"text-align:right;\"> 4 </td>\n   <td style=\"text-align:right;\"> 82.21 </td>\n   <td style=\"text-align:right;\"> 160.01 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Control </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> L </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 31.73 </td>\n   <td style=\"text-align:right;\"> 21.22 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Control </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> L </td>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:right;\"> 59.08 </td>\n   <td style=\"text-align:right;\"> 37.51 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\n## Mathematical functions\n\n| Function                          | Description                                         |\n|-----------------------------------|-----------------------------------------------------|\n| `+,-,*,/,^,%/%, %%`               | typical arithmetic operators                        |\n| `log()`,`log2()`,`log10()`, `exp()` | logarithms/exponentials                             |\n| `<,<=,>,>=,!=,==`                 | logical operators                                   |\n| `between()`                       | whether a case is between to numbers                |\n| `near()`                          | a safe way of assessing equality in floating points |\n\n: {.primary .bordered .sm .paramsTable}\n\n::: {.panel-tabset .tabset-left}\n\n### arithmetic operators\n \t\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |> mutate(Sum = Resp1 + Resp2,\n                 Div = Resp1 / Resp2) |>\n    head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Treatment Plot Dose Time Resp1 Resp2   Sum       Div\n1   Control   P1    H    1  8.12  3.06 11.18 2.6535948\n2   Control   P1    H    2 20.55 25.94 46.49 0.7922128\n3   Control   P1    H    3 27.49 29.85 57.34 0.9209380\n4   Control   P1    H    4 44.79 25.39 70.18 1.7640803\n5   Control   P1    M    1 20.99 20.31 41.30 1.0334810\n6   Control   P1    M    2 37.54 17.62 55.16 2.1305335\n```\n\n\n:::\n:::\n\n\n\n### logarithmic operators\n\t\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |> mutate(logResp1 = log(Resp1),\n                 expResp2 = exp(Resp2)) |>\n    head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Treatment Plot Dose Time Resp1 Resp2 logResp1     expResp2\n1   Control   P1    H    1  8.12  3.06 2.094330 2.132756e+01\n2   Control   P1    H    2 20.55 25.94 3.022861 1.843312e+11\n3   Control   P1    H    3 27.49 29.85 3.313822 9.197934e+12\n4   Control   P1    H    4 44.79 25.39 3.801985 1.063499e+11\n5   Control   P1    M    1 20.99 20.31 3.044046 6.614864e+08\n6   Control   P1    M    2 37.54 17.62 3.625407 4.490232e+07\n```\n\n\n:::\n:::\n\n\n\n### logical operators\n\t\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |> mutate(largeResp1 = Resp1 > 25) |>\n    head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Treatment Plot Dose Time Resp1 Resp2 largeResp1\n1   Control   P1    H    1  8.12  3.06      FALSE\n2   Control   P1    H    2 20.55 25.94      FALSE\n3   Control   P1    H    3 27.49 29.85       TRUE\n4   Control   P1    H    4 44.79 25.39       TRUE\n5   Control   P1    M    1 20.99 20.31      FALSE\n6   Control   P1    M    2 37.54 17.62       TRUE\n```\n\n\n:::\n:::\n\n\n\n### near\n\t\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |> mutate(\n              A = Resp1 == 8.1,\n              B = near(Resp1, 8.1, tol = 0.1)) |>\n    head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Treatment Plot Dose Time Resp1 Resp2     A     B\n1   Control   P1    H    1  8.12  3.06 FALSE  TRUE\n2   Control   P1    H    2 20.55 25.94 FALSE FALSE\n3   Control   P1    H    3 27.49 29.85 FALSE FALSE\n4   Control   P1    H    4 44.79 25.39 FALSE FALSE\n5   Control   P1    M    1 20.99 20.31 FALSE FALSE\n6   Control   P1    M    2 37.54 17.62 FALSE FALSE\n```\n\n\n:::\n:::\n\n\n\n### between\n\t\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |> mutate(mediumResp1 = between(Resp1, 15, 25)) |>\n    head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Treatment Plot Dose Time Resp1 Resp2 mediumResp1\n1   Control   P1    H    1  8.12  3.06       FALSE\n2   Control   P1    H    2 20.55 25.94        TRUE\n3   Control   P1    H    3 27.49 29.85       FALSE\n4   Control   P1    H    4 44.79 25.39       FALSE\n5   Control   P1    M    1 20.99 20.31        TRUE\n6   Control   P1    M    2 37.54 17.62       FALSE\n```\n\n\n:::\n:::\n\n\n\n:::\n\n## Offset functions \n\n| Function                   | Description                                                      |\n|----------------------------|------------------------------------------------------------------|\n| `lag()`                    | shift cases down one                                             |\n| `lead()`                   | shift cases up one                                               |\n\n: {.primary .bordered .sm .paramsTable}\n\n::: {.panel-tabset .tabset-left}\n\n### lags\n\t\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |> mutate(lagResp1 = lag(Resp1)) |>\n    head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Treatment Plot Dose Time Resp1 Resp2 lagResp1\n1   Control   P1    H    1  8.12  3.06       NA\n2   Control   P1    H    2 20.55 25.94     8.12\n3   Control   P1    H    3 27.49 29.85    20.55\n4   Control   P1    H    4 44.79 25.39    27.49\n5   Control   P1    M    1 20.99 20.31    44.79\n6   Control   P1    M    2 37.54 17.62    20.99\n```\n\n\n:::\n:::\n\n\n\n### leads\n\t\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |> mutate(leadResp1 = lead(Resp1)) |>\n    tail()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Treatment Plot Dose Time  Resp1  Resp2 leadResp1\n43 Exclusion   P4    M    3 122.09  84.19    161.67\n44 Exclusion   P4    M    4 161.67 256.34     57.93\n45 Exclusion   P4    L    1  57.93  85.24    117.88\n46 Exclusion   P4    L    2 117.88 167.90    181.09\n47 Exclusion   P4    L    3 181.09 314.49    242.31\n48 Exclusion   P4    L    4 242.31 304.70        NA\n```\n\n\n:::\n:::\n\n\n\n:::\n\n## Cumulative aggregate functions\n\n| Function         | Description                                                      |\n|------------------|------------------------------------------------------------------|\n| `cummax()`       | cumulative maximum                                               |\n| `cummin()`       | cumulative minimum                                               |\n| `cummean()`      | cumulative mean                                                  |\n| `cumprod()`      | cumulative product                                               |\n| `cumsum()`       | cumulative sum                                                   |\n| `rank()`         | rank of current case (ties averaged)                             |\n| `min_rank()`     | rank of current case (minimum rank for ties)                     |\n| `dense_rank()`   | rank of current case (minimum rank for ties, no gaps)            |\n| `percent_rank()` | `min_rank` of current case (scaled to [0,1])                     |\n| `cume_dist()`    | cumulative empirical distribution (prop. less than current rank) |\n| `row_number()`   | rank of current case (first row for ties)                        |\n| `ntile()`        | bin into (n) buckets                                             |\n\n: {.primary .bordered .sm .paramsTable}\n\n::: {.panel-tabset .tabset-left}\n\n### cummmax/ cummin/ cummean\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |> mutate(Cummin = cummin(Resp1),\n                 Cummax = cummax(Resp1),\n                 Cummean = cummean(Resp1)) |>\n    head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Treatment Plot Dose Time Resp1 Resp2 Cummin Cummax Cummean\n1   Control   P1    H    1  8.12  3.06   8.12   8.12  8.1200\n2   Control   P1    H    2 20.55 25.94   8.12  20.55 14.3350\n3   Control   P1    H    3 27.49 29.85   8.12  27.49 18.7200\n4   Control   P1    H    4 44.79 25.39   8.12  44.79 25.2375\n5   Control   P1    M    1 20.99 20.31   8.12  44.79 24.3880\n6   Control   P1    M    2 37.54 17.62   8.12  44.79 26.5800\n```\n\n\n:::\n:::\n\n\n\n### cumsum/ cumprod\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |> mutate(Cumsum = cumsum(Resp1),\n                 Cumprod = cumprod(Resp1)) |>\n    head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Treatment Plot Dose Time Resp1 Resp2 Cumsum      Cumprod\n1   Control   P1    H    1  8.12  3.06   8.12 8.120000e+00\n2   Control   P1    H    2 20.55 25.94  28.67 1.668660e+02\n3   Control   P1    H    3 27.49 29.85  56.16 4.587146e+03\n4   Control   P1    H    4 44.79 25.39 100.95 2.054583e+05\n5   Control   P1    M    1 20.99 20.31 121.94 4.312569e+06\n6   Control   P1    M    2 37.54 17.62 159.48 1.618939e+08\n```\n\n\n:::\n:::\n\n\n\n### rank/ min_rank/ dense_rank/ percent_rank\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |> mutate(Rank = rank(Resp1),\n                 minRank = min_rank(Resp1),\n                 denseRank = dense_rank(Resp1),\n                 percentRank = percent_rank(Resp1)) |>\n    head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Treatment Plot Dose Time Resp1 Resp2 Rank minRank denseRank percentRank\n1   Control   P1    H    1  8.12  3.06    1       1         1   0.0000000\n2   Control   P1    H    2 20.55 25.94    6       6         6   0.1063830\n3   Control   P1    H    3 27.49 29.85    9       9         9   0.1702128\n4   Control   P1    H    4 44.79 25.39   20      20        20   0.4042553\n5   Control   P1    M    1 20.99 20.31    7       7         7   0.1276596\n6   Control   P1    M    2 37.54 17.62   13      13        13   0.2553191\n```\n\n\n:::\n:::\n\n\n\n### cumulative empirical distribution\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |> mutate(cume_dist(Resp1)) |>\n    head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Treatment Plot Dose Time Resp1 Resp2 cume_dist(Resp1)\n1   Control   P1    H    1  8.12  3.06       0.02083333\n2   Control   P1    H    2 20.55 25.94       0.12500000\n3   Control   P1    H    3 27.49 29.85       0.18750000\n4   Control   P1    H    4 44.79 25.39       0.41666667\n5   Control   P1    M    1 20.99 20.31       0.14583333\n6   Control   P1    M    2 37.54 17.62       0.27083333\n```\n\n\n:::\n:::\n\n\n\n### rank row number\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |> mutate(row_number(Resp1)) |>\n    head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Treatment Plot Dose Time Resp1 Resp2 row_number(Resp1)\n1   Control   P1    H    1  8.12  3.06                 1\n2   Control   P1    H    2 20.55 25.94                 6\n3   Control   P1    H    3 27.49 29.85                 9\n4   Control   P1    H    4 44.79 25.39                20\n5   Control   P1    M    1 20.99 20.31                 7\n6   Control   P1    M    2 37.54 17.62                13\n```\n\n\n:::\n:::\n\n\n\n### bin into buckets\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |> mutate(ntile(Resp1, 5)) |>\n    head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Treatment Plot Dose Time Resp1 Resp2 ntile(Resp1, 5)\n1   Control   P1    H    1  8.12  3.06               1\n2   Control   P1    H    2 20.55 25.94               1\n3   Control   P1    H    3 27.49 29.85               1\n4   Control   P1    H    4 44.79 25.39               2\n5   Control   P1    M    1 20.99 20.31               1\n6   Control   P1    M    2 37.54 17.62               2\n```\n\n\n:::\n:::\n\n\n\n:::\n\n## Miscellaneous \n\n| Function                   | Description                                                      |\n|----------------------------|------------------------------------------------------------------|\n| `if_else()`                | elementwise (case by case) if and else                           |\n| `case_when()`              | elementwise multiple `if_else`                                   |\n| `na_if()`                  | elementwise replace nominated value with `NA`                    |\n| `pmax()`                   | elementwise maximum across multiple columns                      |\n| `pmin()`                   | elementwise minimum across multiple columns                      |\n\n: {.primary .bordered .sm .paramsTable}\n\n::: {.panel-tabset .tabset-left}\n\n\n### if_else\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |> mutate(Size = if_else(Resp1 > 25, \"Big\", \"Small\")) |>\n    head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Treatment Plot Dose Time Resp1 Resp2  Size\n1   Control   P1    H    1  8.12  3.06 Small\n2   Control   P1    H    2 20.55 25.94 Small\n3   Control   P1    H    3 27.49 29.85   Big\n4   Control   P1    H    4 44.79 25.39   Big\n5   Control   P1    M    1 20.99 20.31 Small\n6   Control   P1    M    2 37.54 17.62   Big\n```\n\n\n:::\n:::\n\n\n\n### case_when\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |> mutate(Size = case_when(Resp1 < 15 ~ \"Small\",\n                               Resp1 < 25 ~ \"Medium\",\n                               Resp1 >= 25 ~ \"Big\")) |>\n    head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Treatment Plot Dose Time Resp1 Resp2   Size\n1   Control   P1    H    1  8.12  3.06  Small\n2   Control   P1    H    2 20.55 25.94 Medium\n3   Control   P1    H    3 27.49 29.85    Big\n4   Control   P1    H    4 44.79 25.39    Big\n5   Control   P1    M    1 20.99 20.31 Medium\n6   Control   P1    M    2 37.54 17.62    Big\n```\n\n\n:::\n:::\n\n\n\n:::\n\n## Summary functions\n\nSummary functions (those that return a single value) are also\npermissible - the value will be recycled for the total length of the\ninput vector.  A table of useful summary functions can be found in the\n[Summarise section](#summarise).\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |> mutate(meanResp1 = mean(Resp1)) |>\n    head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Treatment Plot Dose Time Resp1 Resp2 meanResp1\n1   Control   P1    H    1  8.12  3.06  75.26604\n2   Control   P1    H    2 20.55 25.94  75.26604\n3   Control   P1    H    3 27.49 29.85  75.26604\n4   Control   P1    H    4 44.79 25.39  75.26604\n5   Control   P1    M    1 20.99 20.31  75.26604\n6   Control   P1    M    2 37.54 17.62  75.26604\n```\n\n\n:::\n:::\n\n\n\nAnother important summary function is the `n()` _function_.  This\nfunction returns the total number of rows.  In the following example,\nwe will use it to create a column that just provides a running row\ncounter (e.g. a row index variable).\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |> mutate(N = 1:n()) |>\n    head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Treatment Plot Dose Time Resp1 Resp2 N\n1   Control   P1    H    1  8.12  3.06 1\n2   Control   P1    H    2 20.55 25.94 2\n3   Control   P1    H    3 27.49 29.85 3\n4   Control   P1    H    4 44.79 25.39 4\n5   Control   P1    M    1 20.99 20.31 5\n6   Control   P1    M    2 37.54 17.62 6\n```\n\n\n:::\n:::\n\n\n\n\n## Multiple mutations (`across`)\n\nIn the [section on `select`](#subset-columns-select), a set of select\nhelper functions were described to facilitate convenient ways to\nselect columns based on properties of the column names etc.  The\n`across()` _function_ allows us to bring those same selection helper\nfunctions to mutate.\n\nThe `across()` _function_ has the following form:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nacross(.cols, .fns, .names)\n```\n:::\n\n\nwhere:\n\n- `.cols` - a tidy selection (e.g. selection helper function)\n- `.fns` - a function (or list of functions) to apply to each\n  selected column\n- `.names` - a `glue` specification determining the format of the new\n  variable names.  By default the glue will be either `{.col}` (when\n  there is only a single function) or `{.col}.{fn}` (when a list of\n  functions)\n\n\n::: {.panel-tabset .tabset-left}\n\n### Simple selections\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |> mutate(across(c(Resp1, Resp2), log)) |>\n    head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Treatment Plot Dose Time    Resp1    Resp2\n1   Control   P1    H    1 2.094330 1.118415\n2   Control   P1    H    2 3.022861 3.255786\n3   Control   P1    H    3 3.313822 3.396185\n4   Control   P1    H    4 3.801985 3.234355\n5   Control   P1    M    1 3.044046 3.011113\n6   Control   P1    M    2 3.625407 2.869035\n```\n\n\n:::\n:::\n\n\n\n### Simple selections with naming\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |> mutate(across(c(Resp1, Resp2),\n                        .fns = log,\n                        .names = \"l{.col}\")) |>\n    head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Treatment Plot Dose Time Resp1 Resp2   lResp1   lResp2\n1   Control   P1    H    1  8.12  3.06 2.094330 1.118415\n2   Control   P1    H    2 20.55 25.94 3.022861 3.255786\n3   Control   P1    H    3 27.49 29.85 3.313822 3.396185\n4   Control   P1    H    4 44.79 25.39 3.801985 3.234355\n5   Control   P1    M    1 20.99 20.31 3.044046 3.011113\n6   Control   P1    M    2 37.54 17.62 3.625407 2.869035\n```\n\n\n:::\n:::\n\n\n\n### `where` selections with naming\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |> mutate(across(where(is.numeric),\n                        .fns = log,\n                        .names = \"l{.col}\")) |>\n    head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Treatment Plot Dose Time Resp1 Resp2     lTime   lResp1   lResp2\n1   Control   P1    H    1  8.12  3.06 0.0000000 2.094330 1.118415\n2   Control   P1    H    2 20.55 25.94 0.6931472 3.022861 3.255786\n3   Control   P1    H    3 27.49 29.85 1.0986123 3.313822 3.396185\n4   Control   P1    H    4 44.79 25.39 1.3862944 3.801985 3.234355\n5   Control   P1    M    1 20.99 20.31 0.0000000 3.044046 3.011113\n6   Control   P1    M    2 37.54 17.62 0.6931472 3.625407 2.869035\n```\n\n\n:::\n:::\n\n\n\n### `num_range` selections with naming\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |> mutate(across(num_range(\"Resp\", 1:2),\n                        .fns = log,\n                        .names = \"l{.col}\")) |>\n    head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Treatment Plot Dose Time Resp1 Resp2   lResp1   lResp2\n1   Control   P1    H    1  8.12  3.06 2.094330 1.118415\n2   Control   P1    H    2 20.55 25.94 3.022861 3.255786\n3   Control   P1    H    3 27.49 29.85 3.313822 3.396185\n4   Control   P1    H    4 44.79 25.39 3.801985 3.234355\n5   Control   P1    M    1 20.99 20.31 3.044046 3.011113\n6   Control   P1    M    2 37.54 17.62 3.625407 2.869035\n```\n\n\n:::\n:::\n\n\n\n\n### Multiple selections and functions\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |> mutate(across(c(Resp1, Resp2),\n                        .fns = list(l = log, s = sqrt),\n                        .names = \"{.fn}.{.col}\")) |>\n    head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Treatment Plot Dose Time Resp1 Resp2  l.Resp1  s.Resp1  l.Resp2  s.Resp2\n1   Control   P1    H    1  8.12  3.06 2.094330 2.849561 1.118415 1.749286\n2   Control   P1    H    2 20.55 25.94 3.022861 4.533211 3.255786 5.093133\n3   Control   P1    H    3 27.49 29.85 3.313822 5.243091 3.396185 5.463515\n4   Control   P1    H    4 44.79 25.39 3.801985 6.692533 3.234355 5.038849\n5   Control   P1    M    1 20.99 20.31 3.044046 4.581484 3.011113 4.506662\n6   Control   P1    M    2 37.54 17.62 3.625407 6.126989 2.869035 4.197618\n```\n\n\n:::\n:::\n\n\n\n### Additional arguments to the function(s)\n\nCentring all numeric variables (note the use of the `purrr` style\n*lambda* formula for functions that require additional arguments.\nWhen applying the function, the focal variable is assigned the name of\n`.x`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |> mutate(across(c(Resp1, Resp2),\n                        .fns = list(c =  ~ scale(.x, scale = FALSE)),\n                        .names = \"{.fn}{.col}\")) |>\n    head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Treatment Plot Dose Time Resp1 Resp2    cResp1    cResp2\n1   Control   P1    H    1  8.12  3.06 -67.14604 -78.64958\n2   Control   P1    H    2 20.55 25.94 -54.71604 -55.76958\n3   Control   P1    H    3 27.49 29.85 -47.77604 -51.85958\n4   Control   P1    H    4 44.79 25.39 -30.47604 -56.31958\n5   Control   P1    M    1 20.99 20.31 -54.27604 -61.39958\n6   Control   P1    M    2 37.54 17.62 -37.72604 -64.08958\n```\n\n\n:::\n:::\n\n\n\n:::\n\n\n## Changing vectors\n\n::: {.panel-tabset .tabset-left}\n\n### Cast to different class\nConvert `Time` (a numeric) into a factor\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |> mutate(Time = factor(Time)) |>\n    tibble()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 48 × 6\n   Treatment Plot  Dose  Time  Resp1  Resp2\n   <fct>     <fct> <fct> <fct> <dbl>  <dbl>\n 1 Control   P1    H     1      8.12   3.06\n 2 Control   P1    H     2     20.6   25.9 \n 3 Control   P1    H     3     27.5   29.8 \n 4 Control   P1    H     4     44.8   25.4 \n 5 Control   P1    M     1     21.0   20.3 \n 6 Control   P1    M     2     37.5   17.6 \n 7 Control   P1    M     3     61.5   98.4 \n 8 Control   P1    M     4     82.2  160.  \n 9 Control   P1    L     1     31.7   21.2 \n10 Control   P1    L     2     59.1   37.5 \n# ℹ 38 more rows\n```\n\n\n:::\n:::\n\n\n\n### Change factor labels\nChange the labels of the \"H\" and \"M\" levels of `Dose`\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |> mutate(Dose = fct_recode(Dose, High = 'H',  Medium = 'M')) |>\n    tibble()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 48 × 6\n   Treatment Plot  Dose    Time Resp1  Resp2\n   <fct>     <fct> <fct>  <int> <dbl>  <dbl>\n 1 Control   P1    High       1  8.12   3.06\n 2 Control   P1    High       2 20.6   25.9 \n 3 Control   P1    High       3 27.5   29.8 \n 4 Control   P1    High       4 44.8   25.4 \n 5 Control   P1    Medium     1 21.0   20.3 \n 6 Control   P1    Medium     2 37.5   17.6 \n 7 Control   P1    Medium     3 61.5   98.4 \n 8 Control   P1    Medium     4 82.2  160.  \n 9 Control   P1    L          1 31.7   21.2 \n10 Control   P1    L          2 59.1   37.5 \n# ℹ 38 more rows\n```\n\n\n:::\n\n```{.r .cell-code}\ndat.1 |> mutate(Dose = fct_recode(Dose, High = 'H',  Medium = 'M')) |>\n    str()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n'data.frame':\t48 obs. of  6 variables:\n $ Treatment: Factor w/ 2 levels \"Control\",\"Exclusion\": 1 1 1 1 1 1 1 1 1 1 ...\n $ Plot     : Factor w/ 4 levels \"P1\",\"P2\",\"P3\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ Dose     : Factor w/ 3 levels \"High\",\"L\",\"Medium\": 1 1 1 1 3 3 3 3 2 2 ...\n $ Time     : int  1 2 3 4 1 2 3 4 1 2 ...\n $ Resp1    : num  8.12 20.55 27.49 44.79 20.99 ...\n $ Resp2    : num  3.06 25.94 29.85 25.39 20.31 ...\n - attr(*, \"out.attrs\")=List of 2\n  ..$ dim     : Named int [1:3] 4 3 4\n  .. ..- attr(*, \"names\")= chr [1:3] \"Time\" \"Dose\" \"Plot\"\n  ..$ dimnames:List of 3\n  .. ..$ Time: chr [1:4] \"Time=1\" \"Time=2\" \"Time=3\" \"Time=4\"\n  .. ..$ Dose: chr [1:3] \"Dose=H\" \"Dose=M\" \"Dose=L\"\n  .. ..$ Plot: chr [1:4] \"Plot=P1\" \"Plot=P2\" \"Plot=P3\" \"Plot=P4\"\n```\n\n\n:::\n:::\n\n\n\n### Change factor levels\nChange the level order of the `Dose` factor to something more natural.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |> pull(Dose)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] H H H H M M M M L L L L H H H H M M M M L L L L H H H H M M M M L L L L H H\n[39] H H M M M M L L L L\nLevels: H L M\n```\n\n\n:::\n\n```{.r .cell-code}\ndat.1 |>\n    mutate(Dose = fct_relevel(Dose, c(\"L\", \"M\", \"H\"))) |> \n    as_tibble() |>\n    pull(Dose)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] H H H H M M M M L L L L H H H H M M M M L L L L H H H H M M M M L L L L H H\n[39] H H M M M M L L L L\nLevels: L M H\n```\n\n\n:::\n:::\n\n\n\n### Change factor levels and labels\nChange the labels and level order of the `Dose` factor to something more natural.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |> pull(Dose)\ndat.1 |> mutate(\n              Dose = fct_relevel(Dose, c(\"L\", \"M\", \"H\")),\n              Dose = fct_recode(Dose, High = 'H',  Medium = 'M')\n              ) |>\n    as_tibble |> \n    pull(Dose)\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError: The pipe operator requires a function call as RHS (<text>:6:5)\n```\n\n\n:::\n:::\n\n\n\n### Change factor levels to reflect data order\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |> pull(Dose)\ndat.1 |> mutate(Dose = fct_reorder(Dose, 1:n())) |>\n    as_tibble |> \n    pull(Dose)\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError: The pipe operator requires a function call as RHS (<text>:3:5)\n```\n\n\n:::\n:::\n\n\n\n### Change factor levels according to a numeric variable\nChange the order of `Dose` levels according to the median `Resp1` values\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |> pull(Dose)\ndat.1 |> mutate(Dose = fct_reorder(Dose, Resp1, median)) |>\n    as_tibble |> \n    pull(Dose)\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError: The pipe operator requires a function call as RHS (<text>:3:5)\n```\n\n\n:::\n:::\n\n\n\n:::\n\n\n# Summarising\n\n\n\n::: {.cell class='tikz'}\n::: {.cell-output-display}\n![](04_data_wrangling_files/figure-html/tikz_summarise-1.png){width=672}\n:::\n:::\n\n\n\nData are often collected and transcribed at finer temporal/spatial\nscales and with greater fidelity than is required for all\nanalyses. Furthermore, there is often a desire to present information\nsummarised to a courser level.  Therefore an important phase of data\npreparation/presentation is also to summarise the data into the\nspatial/temporal scales appropriate for the desired graphical and\nstatistical analyses.\n\nSummarising involves applying one or more summarising functions to one\nor more variables such that the data are reduced to a single row.\n\nThe `summarise()` _function_ users [_data-masking_ semantics](#the-grammar-of-data-manipulation) and can use [_tidy-select_ semantics](#tidy-select-table) via `across()`.\n\n:::: {.columns style=\"display:flex;justify-content:space-evenly;\"}\n\n::: {.column style=\"width:45%;font-size:10pt;\"}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n`````{=html}\n<table class=\"paperTable table-condensed\">\n<caption>First 10 rows of the `dat.1` data.frame</caption>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> Treatment </th>\n   <th style=\"text-align:left;\"> Plot </th>\n   <th style=\"text-align:left;\"> Dose </th>\n   <th style=\"text-align:right;\"> Time </th>\n   <th style=\"text-align:right;\"> Resp1 </th>\n   <th style=\"text-align:right;\"> Resp2 </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> Control </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> H </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 8.12 </td>\n   <td style=\"text-align:right;\"> 3.06 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Control </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> H </td>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:right;\"> 20.55 </td>\n   <td style=\"text-align:right;\"> 25.94 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Control </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> H </td>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:right;\"> 27.49 </td>\n   <td style=\"text-align:right;\"> 29.85 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Control </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> H </td>\n   <td style=\"text-align:right;\"> 4 </td>\n   <td style=\"text-align:right;\"> 44.79 </td>\n   <td style=\"text-align:right;\"> 25.39 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Control </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> M </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 20.99 </td>\n   <td style=\"text-align:right;\"> 20.31 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Control </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> M </td>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:right;\"> 37.54 </td>\n   <td style=\"text-align:right;\"> 17.62 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Control </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> M </td>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:right;\"> 61.46 </td>\n   <td style=\"text-align:right;\"> 98.44 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Control </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> M </td>\n   <td style=\"text-align:right;\"> 4 </td>\n   <td style=\"text-align:right;\"> 82.21 </td>\n   <td style=\"text-align:right;\"> 160.01 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Control </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> L </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 31.73 </td>\n   <td style=\"text-align:right;\"> 21.22 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Control </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> L </td>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:right;\"> 59.08 </td>\n   <td style=\"text-align:right;\"> 37.51 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\n:::\n \n::: {.column style=\"width:55%;font-size:12pt;\"}\n\n| Function                     | Description                                     |\n|------------------------------|-------------------------------------------------|\n| `n()`                        | number of rows/values                           |\n| `n_distinct()`               | number of unique rows/values                    |\n| `mean()`, `median()`         | mean/median                                     |\n| `sum()`, `prod()`            | sum/product                                     |\n| `var()`, `sd()`              | variance/standard deviation                     |\n| `mad()`, `IQR()`             | median absolute deviation / interquartile range |\n| `min()`, `max()`             | minimum / maximum                               |\n| `quantile()`                 | nth quantile                                    |\n| `first()`, `last()`, `nth()` | first / last / nth value                        |\n\n: {.primary .bordered .sm .paramsTable}\n\n:::\n\n::::\n\n::: {.panel-tabset .tabset-left}\n\n### Count functions\n\nCalculate the number of rows in the data as well as the number of\ndistinct (unique) values of `Dose`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |> summarise(N = n(),\n                    NDose = n_distinct(Dose))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   N NDose\n1 48     3\n```\n\n\n:::\n:::\n\n\n\n### Simple math functions\n\t\nCalculate the number of rows in the data as well as the number of\ndistinct (unique) values of `Dose`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |> summarise(Mean = mean(Resp1),\n                    Median = median(Resp1)) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      Mean Median\n1 75.26604  61.31\n```\n\n\n:::\n:::\n\n\n\nCalculate the number of rows in the data as well as the number of\ndistinct (unique) values of `Dose`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |> summarise(Sum = sum(Resp1),\n                    Prod = prod(Resp1)) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      Sum         Prod\n1 3612.77 1.261602e+84\n```\n\n\n:::\n:::\n\n\n\nCalculate the number of rows in the data as well as the number of\ndistinct (unique) values of `Dose`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |> summarise(Var = var(Resp1),\n                    MAD = mad(Resp1)) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       Var     MAD\n1 3200.305 42.5951\n```\n\n\n:::\n:::\n\n\n\nCalculate the number of rows in the data as well as the number of\ndistinct (unique) values of `Dose`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |> summarise(Min = min(Resp1),\n                    Max = max(Resp1)) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Min    Max\n1 8.12 242.31\n```\n\n\n:::\n:::\n\n\n\n### quantile functions\n\nCalculate the number of rows in the data as well as the number of\ndistinct (unique) values of `Dose`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |> summarise(Q = t(quantile(Resp1)))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      Q.0%    Q.25%    Q.50%    Q.75%   Q.100%\n1   8.1200  36.4975  61.3100  99.4125 242.3100\n```\n\n\n:::\n:::\n\n\n\n### first / last / nth functions\n\nCalculate the number of rows in the data as well as the number of\ndistinct (unique) values of `Dose`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |> summarise(First = first(Resp1),\n                    Last = last(Resp1),\n                    Fifth = nth(Resp1, 5)) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  First   Last Fifth\n1  8.12 242.31 20.99\n```\n\n\n:::\n:::\n\n\n\n### `Across` functions\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |> summarise(across(c(Resp1, Resp2),\n                           list(Mean = mean, Var = var),\n                           .names = \"{.fn}.{.col}\"),\n                    N = n()) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Mean.Resp1 Var.Resp1 Mean.Resp2 Var.Resp2  N\n1   75.26604  3200.305   81.70958  5886.444 48\n```\n\n\n:::\n:::\n\n\n\n### Multiple variables / functions\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |> summarise(across(where(is.numeric),\n                           list(Mean = mean, Var = var),\n                           .names = \"{.fn}.{.col}\"),\n                    across(where(is.factor), n_distinct),\n                    N = n())\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Mean.Time Var.Time Mean.Resp1 Var.Resp1 Mean.Resp2 Var.Resp2 Treatment Plot\n1       2.5 1.276596   75.26604  3200.305   81.70958  5886.444         2    4\n  Dose  N\n1    3 48\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nVar <- c(\"Resp1\", \"Resp2\", \"Resp3\")\ndat.1 |> summarise(across(any_of(Var),\n                           list(Mean = mean, Var = var)))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Resp1_Mean Resp1_Var Resp2_Mean Resp2_Var\n1   75.26604  3200.305   81.70958  5886.444\n```\n\n\n:::\n:::\n\n\n\n:::\n\n## Count\n\nThe `count()` _function_ provides a convenient way to count up the\nnumber of unique combinations of factors.\n\n::: {.panel-tabset .tabset-left}\n\n### Count single factor\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |> count(Dose)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Dose  n\n1    H 16\n2    L 16\n3    M 16\n```\n\n\n:::\n:::\n\n\n\n### Count multiple factors\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |> count(Dose, between(Resp1, 30, 50))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Dose between(Resp1, 30, 50)  n\n1    H                  FALSE 11\n2    H                   TRUE  5\n3    L                  FALSE 14\n4    L                   TRUE  2\n5    M                  FALSE 12\n6    M                   TRUE  4\n```\n\n\n:::\n:::\n\n\n\n:::\n\n\n# Grouping\n\n\n\n::: {.cell class='tikz'}\n::: {.cell-output-display}\n![](04_data_wrangling_files/figure-html/tikz_groupby-1.png){width=672}\n:::\n:::\n\n\n\nBase R has a family of _apply_ functions that apply a function (such as\n`mean()`) to a continuous variable separately for:\n\n:::: {.columns style=\"display:flex;justify-content:space-evenly;\"}\n\n::: {.column style=\"width:45%;\"}\n\nApply the `mean()` _function_ to each column (`MARGIN = 2`) of a\ndataset comprising only of \"Resp1\" and \"Resp2\".\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\napply(dat.1[, c(\"Resp1\", \"Resp2\")],\n      MARGIN = 2,\n      FUN = mean)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Resp1    Resp2 \n75.26604 81.70958 \n```\n\n\n:::\n:::\n\n\n\n:::\n\n::: {.column style=\"width:5%;\"}\n\n:::\n\n::: {.column style=\"width:45%;\"}\n\nApply the `mean()` _function_ to each level of the `Dose` _factor_.<br><br>\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntapply(dat.1$Resp1,\n       INDEX = dat.1$Dose,\n       FUN = mean)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n        H         L         M \n 37.29563 112.54500  75.95750 \n```\n\n\n:::\n:::\n\n\n\n:::\n\n::::\n\nThe above apply functions involve a sort of **split, apply, combine**\nprocess. This process became the inspiration for the `plyr` package\n(also out of the Wickham lab) which built on and super-charged the\nprocess. The `dplyr` package represents the next iteration of the\nprocess (for _data frames_ and _tibbles_ only as most data are in data\nframe format).\n\nCentral to the modern split/apply/combine process is the idea of\n**groups**. Groups are the basis of splitting the data. Functions applied\nto grouped data are applied to each group (subset) separately before\nthe results are combined back into a single data frame (actually\ntibble). Hence grouped data are most powerful when combined with the\n`summarise()` or `mutate()` families of functions.\n\nGroups are defined via the `group_by()` _function_.  For example, to\nindicate that all subsequent manipulations should occur separately for\neach level of the `Dose` variable, we would:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |> group_by(Dose)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 48 × 6\n# Groups:   Dose [3]\n   Treatment Plot  Dose   Time Resp1  Resp2\n   <fct>     <fct> <fct> <int> <dbl>  <dbl>\n 1 Control   P1    H         1  8.12   3.06\n 2 Control   P1    H         2 20.6   25.9 \n 3 Control   P1    H         3 27.5   29.8 \n 4 Control   P1    H         4 44.8   25.4 \n 5 Control   P1    M         1 21.0   20.3 \n 6 Control   P1    M         2 37.5   17.6 \n 7 Control   P1    M         3 61.5   98.4 \n 8 Control   P1    M         4 82.2  160.  \n 9 Control   P1    L         1 31.7   21.2 \n10 Control   P1    L         2 59.1   37.5 \n# ℹ 38 more rows\n```\n\n\n:::\n:::\n\n\n\nNote, in the above, we have only defined the grouping structure, not\nany subsequent manipulations.  Consequently, the _tibble_ remains\nunchanged.  Do note however, that above the tabular output, the output\nspecifies a `Group` _attribute_ as a visual reminder.\n\nIt is in combination with other data manipulation routines that\n`group_by()` is most useful.  For example, to calculate the mean of\n\"Resp1\" within each `Dose`:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |> group_by(Dose) |>\n    summarise(Mean = mean(Resp1))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 2\n  Dose   Mean\n  <fct> <dbl>\n1 H      37.3\n2 L     113. \n3 M      76.0\n```\n\n\n:::\n:::\n\n\n\nIn the above output, you may have noticed that the data (means) have\nbeen rounded.  This is a behaviour of the _print_ method for\n_tibbles_.  When stored, the full precision of the data are retained.\n\nBefore providing a list of examples, it is worth using `group_by()` to\nhighlight the difference between `mutate()` and `summarise()`.\n\n:::: {.columns style=\"display:flex;justify-content:space-evenly;\"}\n\n::: {.column style=\"width:55%;\"}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |> group_by(Dose) |>\n    mutate(MeanResp1 = mean(Resp1)) |>\n    head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 7\n# Groups:   Dose [2]\n  Treatment Plot  Dose   Time Resp1 Resp2 MeanResp1\n  <fct>     <fct> <fct> <int> <dbl> <dbl>     <dbl>\n1 Control   P1    H         1  8.12  3.06      37.3\n2 Control   P1    H         2 20.6  25.9       37.3\n3 Control   P1    H         3 27.5  29.8       37.3\n4 Control   P1    H         4 44.8  25.4       37.3\n5 Control   P1    M         1 21.0  20.3       76.0\n6 Control   P1    M         2 37.5  17.6       76.0\n```\n\n\n:::\n:::\n\n\n\n:::\n\n::: {.column style=\"width:5%;\"}\n\n:::\n\n::: {.column style=\"width:40%;\"}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |> group_by(Dose) |>\n    summarise(Mean = mean(Resp1))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 2\n  Dose   Mean\n  <fct> <dbl>\n1 H      37.3\n2 L     113. \n3 M      76.0\n```\n\n\n:::\n:::\n\n\n\n:::\n\n::::\n\n- `mutate()` maintains the number of rows.  Notice how the mean for\n  each group is repeated for each case.\n- `summarise()`reduces the number of rows to one (per group).\n- `mutate()` retains all the columns\n- `summarise()` only returns the columns specifically involved (either\n  as the Groups or manipulated variables).\n\nWhen multiple variables are used to define the groups, the subsequent\nmanipulations are applied to each unique combination of the factors.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |> group_by(Treatment, Dose) |>\n    summarise(Mean = mean(Resp1))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 3\n# Groups:   Treatment [2]\n  Treatment Dose   Mean\n  <fct>     <fct> <dbl>\n1 Control   H      24.5\n2 Control   L      75.7\n3 Control   M      51.2\n4 Exclusion H      50.1\n5 Exclusion L     149. \n6 Exclusion M     101. \n```\n\n\n:::\n:::\n\n\n\nImportantly, once all the manipulations that need to be performed\nseparately per group have been performed, it is good practice to\nremove the group _attribute_.  Forgetting to do so will continue to\ncause all subsequent manipulations (and possibly analyses and\ngraphics) to be inadvertently performed separately per group - such\ndownstream issues can be difficult to diagnose.\n\nTo remove the group _attribute_, we use the `ungroup()` _function_.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |> group_by(Treatment, Dose) |>\n    summarise(Mean = mean(Resp1)) |>\n    ungroup()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 3\n  Treatment Dose   Mean\n  <fct>     <fct> <dbl>\n1 Control   H      24.5\n2 Control   L      75.7\n3 Control   M      51.2\n4 Exclusion H      50.1\n5 Exclusion L     149. \n6 Exclusion M     101. \n```\n\n\n:::\n:::\n\n\n\n::: {.panel-tabset .tabset-left}\n\n### Grouped summaries\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |> group_by(Treatment, Dose) |>\n    summarise(meanResp1 = mean(Resp1),\n              varResp1 = var(Resp1),\n              N = n())\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 5\n# Groups:   Treatment [2]\n  Treatment Dose  meanResp1 varResp1     N\n  <fct>     <fct>     <dbl>    <dbl> <int>\n1 Control   H          24.5     202.     8\n2 Control   L          75.7    1191.     8\n3 Control   M          51.2     611.     8\n4 Exclusion H          50.1     562.     8\n5 Exclusion L         149.     5192.     8\n6 Exclusion M         101.     2378.     8\n```\n\n\n:::\n:::\n\n\n\n### Grouped summaries (with `across`)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |> group_by(Treatment, Dose) |>\n    summarise(across(starts_with(\"Resp\"),\n                     list(Mean = mean, Var = var),\n                     .names = \"{.fn}{.col}\"),\n              N = n())\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 7\n# Groups:   Treatment [2]\n  Treatment Dose  MeanResp1 VarResp1 MeanResp2 VarResp2     N\n  <fct>     <fct>     <dbl>    <dbl>     <dbl>    <dbl> <int>\n1 Control   H          24.5     202.      26.5     118.     8\n2 Control   L          75.7    1191.      79.9    1948.     8\n3 Control   M          51.2     611.      62.3    3676.     8\n4 Exclusion H          50.1     562.      48.1     886.     8\n5 Exclusion L         149.     5192.     170.    13391.     8\n6 Exclusion M         101.     2378.     103.     4786.     8\n```\n\n\n:::\n:::\n\n\n\n### Grouped filter\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.1 |> group_by(Treatment, Dose) |>\n    filter(Resp1 < 25)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 8 × 6\n# Groups:   Treatment, Dose [3]\n  Treatment Plot  Dose   Time Resp1 Resp2\n  <fct>     <fct> <fct> <int> <dbl> <dbl>\n1 Control   P1    H         1  8.12  3.06\n2 Control   P1    H         2 20.6  25.9 \n3 Control   P1    M         1 21.0  20.3 \n4 Control   P2    H         1  8.14 23.9 \n5 Control   P2    H         2 13.4  28.0 \n6 Control   P2    M         1 20.0  19.7 \n7 Exclusion P3    H         1 21.9  23.6 \n8 Exclusion P4    H         1 18.8  28.6 \n```\n\n\n:::\n:::\n\n\n\n:::\n\n\n# Reshaping data\n\n## Wide to long (`pivot_longer`)\n\nWhilst wide data formats are often more compact and typically easier\nto manage for data entry (particularly in the field), the data are not\nin the appropriate format for most analyses (traditional repeated\nmeasures and multivariate analyses are two exceptions). Most analyses\nrequire that each replicate is in its own row and thus it is necessary\nto be rearrange or reshape (melt) the data from this wide format to\nthe long (molten) format.\n\n\n\n::: {.cell class='tikz'}\n::: {.cell-output-display}\n![](04_data_wrangling_files/figure-html/tikz_pivot-1.png){width=672}\n:::\n:::\n\n\n\nWhilst there are numerous routines in R for reshaping data, we will\nonly explore those that are formally part of the tidyverse ecosystem.\n\nThe `pivot_longer()` function (`tidyr` _package_) is very useful for\nconverting wide (repeated measures-like) into long format. The\nimportant parameters to specify are:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npivot_longer(data, cols, names_to, values_to, values_drop_na)\n```\n:::\n\n\nwhere:\n\n- `data` - the input _dataframe_ or _tibble_\n- `cols` - a tidy select specification of the columns to be lengthened\n  into a single column\n- `names_to` - a name (string) to give a new column into which to\n  store the names of the old wide column names\n- `values_to` - a name (string) to give the new column containing the\n  values that were previously in the old columns.\n- `values_drop_na` - whether or not to drop rows that only contain\n  `NA` values in the new value column.\n  \nTo illustrate, we will use the `dat.w` dataframe.\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n`````{=html}\n<table class=\"paperTable table-condensed\">\n<caption>The `data.w` data.frame</caption>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\">   </th>\n   <th style=\"text-align:left;\"> Plot </th>\n   <th style=\"text-align:left;\"> Between </th>\n   <th style=\"text-align:right;\"> Time.0 </th>\n   <th style=\"text-align:right;\"> Time.1 </th>\n   <th style=\"text-align:right;\"> Time.2 </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> R1 </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> A1 </td>\n   <td style=\"text-align:right;\"> 8 </td>\n   <td style=\"text-align:right;\"> 14 </td>\n   <td style=\"text-align:right;\"> 14 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> R2 </td>\n   <td style=\"text-align:left;\"> P2 </td>\n   <td style=\"text-align:left;\"> A1 </td>\n   <td style=\"text-align:right;\"> 10 </td>\n   <td style=\"text-align:right;\"> 12 </td>\n   <td style=\"text-align:right;\"> 11 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> R3 </td>\n   <td style=\"text-align:left;\"> P3 </td>\n   <td style=\"text-align:left;\"> A2 </td>\n   <td style=\"text-align:right;\"> 7 </td>\n   <td style=\"text-align:right;\"> 11 </td>\n   <td style=\"text-align:right;\"> 8 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> R4 </td>\n   <td style=\"text-align:left;\"> P4 </td>\n   <td style=\"text-align:left;\"> A2 </td>\n   <td style=\"text-align:right;\"> 11 </td>\n   <td style=\"text-align:right;\"> 9 </td>\n   <td style=\"text-align:right;\"> 2 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\n::: {.panel-tabset .tabset-left}\n\n### Pivot longer\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata.w |> pivot_longer(Time.0:Time.2,\n                        names_to = \"Time\",\n                        values_to = \"Count\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 12 × 4\n   Plot  Between Time   Count\n   <fct> <fct>   <chr>  <int>\n 1 P1    A1      Time.0     8\n 2 P1    A1      Time.1    14\n 3 P1    A1      Time.2    14\n 4 P2    A1      Time.0    10\n 5 P2    A1      Time.1    12\n 6 P2    A1      Time.2    11\n 7 P3    A2      Time.0     7\n 8 P3    A2      Time.1    11\n 9 P3    A2      Time.2     8\n10 P4    A2      Time.0    11\n11 P4    A2      Time.1     9\n12 P4    A2      Time.2     2\n```\n\n\n:::\n:::\n\n\n\n### Pivot longer (with `starts_with`)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata.w |> pivot_longer(starts_with(\"Time\"),\n                        names_to = \"Time\",\n                        names_prefix = \"Time.\",\n                        values_to = \"Count\"\n                        )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 12 × 4\n   Plot  Between Time  Count\n   <fct> <fct>   <chr> <int>\n 1 P1    A1      0         8\n 2 P1    A1      1        14\n 3 P1    A1      2        14\n 4 P2    A1      0        10\n 5 P2    A1      1        12\n 6 P2    A1      2        11\n 7 P3    A2      0         7\n 8 P3    A2      1        11\n 9 P3    A2      2         8\n10 P4    A2      0        11\n11 P4    A2      1         9\n12 P4    A2      2         2\n```\n\n\n:::\n:::\n\n\n\n:::\n\n## Long to wide (`pivot_wider`)\n\nThe opposite of making a data set longer is to make a data set wider.\nWhilst analytical and graphical routines might require data to be in\nlong format, wide tabular summaries are typically more compact and\nfamiliar.\n\n\n\n\n::: {.cell class='tikz'}\n::: {.cell-output-display}\n![](04_data_wrangling_files/figure-html/tikz_pivot2-1.png){width=672}\n:::\n:::\n\n\n\nWidening is performed via the `pivot_wider()` _function_, the most\nimportant parameters of which are:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npivot_wider(data, id_cols, names_from, values_from\n```\n:::\n\n\n\nwhere:\n\n- `data` - the input _dataframe_ or _tibble_\n- `id_cols` - a tidy select specification of the columns that uniquely\n  identify the case - these columns will not be widened.\n- `names_from` - a tidy select specification of the column(s) that\n  contain the names to be used as new column names.\n- `values_from` - a tidy select specification of the column(s) that\n  contain the values to be used as values in the new columns (e.g, the\n  data to be widened).\n\nTo illustrate, we will use the `dat.w` dataframe.\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n`````{=html}\n<table class=\"paperTable table-condensed\">\n<caption>The `data` data.frame</caption>\n <thead>\n  <tr>\n   <th style=\"text-align:right;\"> Resp1 </th>\n   <th style=\"text-align:right;\"> Resp2 </th>\n   <th style=\"text-align:left;\"> Between </th>\n   <th style=\"text-align:left;\"> Plot </th>\n   <th style=\"text-align:left;\"> Subplot </th>\n   <th style=\"text-align:left;\"> Within </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:right;\"> 8 </td>\n   <td style=\"text-align:right;\"> 17 </td>\n   <td style=\"text-align:left;\"> A1 </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> S1 </td>\n   <td style=\"text-align:left;\"> B1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 10 </td>\n   <td style=\"text-align:right;\"> 18 </td>\n   <td style=\"text-align:left;\"> A1 </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> S1 </td>\n   <td style=\"text-align:left;\"> B2 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 7 </td>\n   <td style=\"text-align:right;\"> 17 </td>\n   <td style=\"text-align:left;\"> A1 </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> S2 </td>\n   <td style=\"text-align:left;\"> B1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 11 </td>\n   <td style=\"text-align:right;\"> 21 </td>\n   <td style=\"text-align:left;\"> A1 </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> S2 </td>\n   <td style=\"text-align:left;\"> B2 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 14 </td>\n   <td style=\"text-align:right;\"> 19 </td>\n   <td style=\"text-align:left;\"> A2 </td>\n   <td style=\"text-align:left;\"> P2 </td>\n   <td style=\"text-align:left;\"> S3 </td>\n   <td style=\"text-align:left;\"> B1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 12 </td>\n   <td style=\"text-align:right;\"> 13 </td>\n   <td style=\"text-align:left;\"> A2 </td>\n   <td style=\"text-align:left;\"> P2 </td>\n   <td style=\"text-align:left;\"> S3 </td>\n   <td style=\"text-align:left;\"> B2 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 11 </td>\n   <td style=\"text-align:right;\"> 24 </td>\n   <td style=\"text-align:left;\"> A2 </td>\n   <td style=\"text-align:left;\"> P2 </td>\n   <td style=\"text-align:left;\"> S4 </td>\n   <td style=\"text-align:left;\"> B1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 9 </td>\n   <td style=\"text-align:right;\"> 18 </td>\n   <td style=\"text-align:left;\"> A2 </td>\n   <td style=\"text-align:left;\"> P2 </td>\n   <td style=\"text-align:left;\"> S4 </td>\n   <td style=\"text-align:left;\"> B2 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 14 </td>\n   <td style=\"text-align:right;\"> 25 </td>\n   <td style=\"text-align:left;\"> A3 </td>\n   <td style=\"text-align:left;\"> P3 </td>\n   <td style=\"text-align:left;\"> S5 </td>\n   <td style=\"text-align:left;\"> B1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 11 </td>\n   <td style=\"text-align:right;\"> 18 </td>\n   <td style=\"text-align:left;\"> A3 </td>\n   <td style=\"text-align:left;\"> P3 </td>\n   <td style=\"text-align:left;\"> S5 </td>\n   <td style=\"text-align:left;\"> B2 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 8 </td>\n   <td style=\"text-align:right;\"> 27 </td>\n   <td style=\"text-align:left;\"> A3 </td>\n   <td style=\"text-align:left;\"> P3 </td>\n   <td style=\"text-align:left;\"> S6 </td>\n   <td style=\"text-align:left;\"> B1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:right;\"> 22 </td>\n   <td style=\"text-align:left;\"> A3 </td>\n   <td style=\"text-align:left;\"> P3 </td>\n   <td style=\"text-align:left;\"> S6 </td>\n   <td style=\"text-align:left;\"> B2 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 8 </td>\n   <td style=\"text-align:right;\"> 17 </td>\n   <td style=\"text-align:left;\"> A1 </td>\n   <td style=\"text-align:left;\"> P4 </td>\n   <td style=\"text-align:left;\"> S7 </td>\n   <td style=\"text-align:left;\"> B1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 10 </td>\n   <td style=\"text-align:right;\"> 22 </td>\n   <td style=\"text-align:left;\"> A1 </td>\n   <td style=\"text-align:left;\"> P4 </td>\n   <td style=\"text-align:left;\"> S7 </td>\n   <td style=\"text-align:left;\"> B2 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 7 </td>\n   <td style=\"text-align:right;\"> 16 </td>\n   <td style=\"text-align:left;\"> A1 </td>\n   <td style=\"text-align:left;\"> P4 </td>\n   <td style=\"text-align:left;\"> S8 </td>\n   <td style=\"text-align:left;\"> B1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 12 </td>\n   <td style=\"text-align:right;\"> 13 </td>\n   <td style=\"text-align:left;\"> A1 </td>\n   <td style=\"text-align:left;\"> P4 </td>\n   <td style=\"text-align:left;\"> S8 </td>\n   <td style=\"text-align:left;\"> B2 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 11 </td>\n   <td style=\"text-align:right;\"> 23 </td>\n   <td style=\"text-align:left;\"> A2 </td>\n   <td style=\"text-align:left;\"> P5 </td>\n   <td style=\"text-align:left;\"> S9 </td>\n   <td style=\"text-align:left;\"> B1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 12 </td>\n   <td style=\"text-align:right;\"> 19 </td>\n   <td style=\"text-align:left;\"> A2 </td>\n   <td style=\"text-align:left;\"> P5 </td>\n   <td style=\"text-align:left;\"> S9 </td>\n   <td style=\"text-align:left;\"> B2 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 12 </td>\n   <td style=\"text-align:right;\"> 23 </td>\n   <td style=\"text-align:left;\"> A2 </td>\n   <td style=\"text-align:left;\"> P5 </td>\n   <td style=\"text-align:left;\"> S10 </td>\n   <td style=\"text-align:left;\"> B1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 10 </td>\n   <td style=\"text-align:right;\"> 21 </td>\n   <td style=\"text-align:left;\"> A2 </td>\n   <td style=\"text-align:left;\"> P5 </td>\n   <td style=\"text-align:left;\"> S10 </td>\n   <td style=\"text-align:left;\"> B2 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:right;\"> 17 </td>\n   <td style=\"text-align:left;\"> A3 </td>\n   <td style=\"text-align:left;\"> P6 </td>\n   <td style=\"text-align:left;\"> S11 </td>\n   <td style=\"text-align:left;\"> B1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 11 </td>\n   <td style=\"text-align:right;\"> 16 </td>\n   <td style=\"text-align:left;\"> A3 </td>\n   <td style=\"text-align:left;\"> P6 </td>\n   <td style=\"text-align:left;\"> S11 </td>\n   <td style=\"text-align:left;\"> B2 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 13 </td>\n   <td style=\"text-align:right;\"> 26 </td>\n   <td style=\"text-align:left;\"> A3 </td>\n   <td style=\"text-align:left;\"> P6 </td>\n   <td style=\"text-align:left;\"> S12 </td>\n   <td style=\"text-align:left;\"> B1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 7 </td>\n   <td style=\"text-align:right;\"> 28 </td>\n   <td style=\"text-align:left;\"> A3 </td>\n   <td style=\"text-align:left;\"> P6 </td>\n   <td style=\"text-align:left;\"> S12 </td>\n   <td style=\"text-align:left;\"> B2 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\nNote, these data are not as long as they could be.  Purely \"long\" data\nshould have each observation in its own row.  The `data` dataframe has\ntwo observations (one for \"Resp1\" and one for \"Resp2\") per row.\n\n::: {.panel-tabset .tabset-left}\n\n### Pivot wider for Resp1 only\nWiden the \"Resp1\" variable by the levels of the `Between` factor.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata |> select(-Resp2) |>\n    pivot_wider(names_from = Within,\n                values_from = c(Resp1))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 12 × 5\n   Between Plot  Subplot    B1    B2\n   <fct>   <fct> <fct>   <int> <int>\n 1 A1      P1    S1          8    10\n 2 A1      P1    S2          7    11\n 3 A2      P2    S3         14    12\n 4 A2      P2    S4         11     9\n 5 A3      P3    S5         14    11\n 6 A3      P3    S6          8     2\n 7 A1      P4    S7          8    10\n 8 A1      P4    S8          7    12\n 9 A2      P5    S9         11    12\n10 A2      P5    S10        12    10\n11 A3      P6    S11         3    11\n12 A3      P6    S12        13     7\n```\n\n\n:::\n:::\n\n\n\n### Pivot wider for Resp1 and Resp2\nWiden the \"Resp1\" and \"Resp2\" variables by the levels of the `Between` factor.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata |> pivot_wider(names_from = Within,\n                values_from = starts_with(\"Resp\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 12 × 7\n   Between Plot  Subplot Resp1_B1 Resp1_B2 Resp2_B1 Resp2_B2\n   <fct>   <fct> <fct>      <int>    <int>    <int>    <int>\n 1 A1      P1    S1             8       10       17       18\n 2 A1      P1    S2             7       11       17       21\n 3 A2      P2    S3            14       12       19       13\n 4 A2      P2    S4            11        9       24       18\n 5 A3      P3    S5            14       11       25       18\n 6 A3      P3    S6             8        2       27       22\n 7 A1      P4    S7             8       10       17       22\n 8 A1      P4    S8             7       12       16       13\n 9 A2      P5    S9            11       12       23       19\n10 A2      P5    S10           12       10       23       21\n11 A3      P6    S11            3       11       17       16\n12 A3      P6    S12           13        7       26       28\n```\n\n\n:::\n:::\n\n\nAlternatively we could make the data longer before widening\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata |>\n    pivot_longer(cols = starts_with(\"Resp\")) |>\n    pivot_wider(names_from = c(name, Within),\n                values_from = value)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 12 × 7\n   Between Plot  Subplot Resp1_B1 Resp2_B1 Resp1_B2 Resp2_B2\n   <fct>   <fct> <fct>      <int>    <int>    <int>    <int>\n 1 A1      P1    S1             8       17       10       18\n 2 A1      P1    S2             7       17       11       21\n 3 A2      P2    S3            14       19       12       13\n 4 A2      P2    S4            11       24        9       18\n 5 A3      P3    S5            14       25       11       18\n 6 A3      P3    S6             8       27        2       22\n 7 A1      P4    S7             8       17       10       22\n 8 A1      P4    S8             7       16       12       13\n 9 A2      P5    S9            11       23       12       19\n10 A2      P5    S10           12       23       10       21\n11 A3      P6    S11            3       17       11       16\n12 A3      P6    S12           13       26        7       28\n```\n\n\n:::\n:::\n\n\n\n:::\n\n# Combining columns (`unite`)\n\nIf data are recorded with excessive fidelity, it may be useful to\ncombine multiple fields into a single field. For example, if the date\nwas recorded across three fields (year, month and day, we may like to\ncombine these to form a single date field.\n\n\n\n::: {.cell class='tikz'}\n::: {.cell-output-display}\n![](04_data_wrangling_files/figure-html/tikz_unite-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n`````{=html}\n<table class=\"paperTable table-condensed\">\n<caption>The `data.d` data.frame</caption>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> year </th>\n   <th style=\"text-align:left;\"> month </th>\n   <th style=\"text-align:left;\"> day </th>\n   <th style=\"text-align:right;\"> Resp1 </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> 2009 </td>\n   <td style=\"text-align:left;\"> 11 </td>\n   <td style=\"text-align:left;\"> 09 </td>\n   <td style=\"text-align:right;\"> 25 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2008 </td>\n   <td style=\"text-align:left;\"> 05 </td>\n   <td style=\"text-align:left;\"> 08 </td>\n   <td style=\"text-align:right;\"> 52 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2009 </td>\n   <td style=\"text-align:left;\"> 05 </td>\n   <td style=\"text-align:left;\"> 23 </td>\n   <td style=\"text-align:right;\"> 18 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2009 </td>\n   <td style=\"text-align:left;\"> 04 </td>\n   <td style=\"text-align:left;\"> 15 </td>\n   <td style=\"text-align:right;\"> 21 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2008 </td>\n   <td style=\"text-align:left;\"> 10 </td>\n   <td style=\"text-align:left;\"> 25 </td>\n   <td style=\"text-align:right;\"> 45 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2008 </td>\n   <td style=\"text-align:left;\"> 09 </td>\n   <td style=\"text-align:left;\"> 26 </td>\n   <td style=\"text-align:right;\"> 40 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2008 </td>\n   <td style=\"text-align:left;\"> 07 </td>\n   <td style=\"text-align:left;\"> 05 </td>\n   <td style=\"text-align:right;\"> 38 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2008 </td>\n   <td style=\"text-align:left;\"> 11 </td>\n   <td style=\"text-align:left;\"> 02 </td>\n   <td style=\"text-align:right;\"> 9 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2009 </td>\n   <td style=\"text-align:left;\"> 08 </td>\n   <td style=\"text-align:left;\"> 19 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2008 </td>\n   <td style=\"text-align:left;\"> 10 </td>\n   <td style=\"text-align:left;\"> 03 </td>\n   <td style=\"text-align:right;\"> 20 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\nLets take those data and combine (unite) the separate date components\ninto a single date column before coercing it into a `date` object.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata.d |> unite(year,month,day,col='Date',sep='-') |>\n    mutate(Date = as.Date(Date))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n         Date Resp1\n1  2009-11-09    25\n2  2008-05-08    52\n3  2009-05-23    18\n4  2009-04-15    21\n5  2008-10-25    45\n6  2008-09-26    40\n7  2008-07-05    38\n8  2008-11-02     9\n9  2009-08-19     0\n10 2008-10-03    20\n```\n\n\n:::\n:::\n\n\n\n\n# Separating columns (`separate`)\n\nSeparating variables is the opposite of uniting them. A field is\nseparated by either indicating a character(s) to use as a separator,\nor else providing a fixed width format.\n\n\n\n::: {.cell class='tikz'}\n::: {.cell-output-display}\n![](04_data_wrangling_files/figure-html/tikz_separate-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n`````{=html}\n<table class=\"paperTable table-condensed\">\n<caption>The `data.c` data.frame</caption>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> Year </th>\n   <th style=\"text-align:right;\"> Resp1 </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> F33 </td>\n   <td style=\"text-align:right;\"> 23 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> M27 </td>\n   <td style=\"text-align:right;\"> 55 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> M33 </td>\n   <td style=\"text-align:right;\"> 33 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> M26 </td>\n   <td style=\"text-align:right;\"> 36 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> F21 </td>\n   <td style=\"text-align:right;\"> 12 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> F34 </td>\n   <td style=\"text-align:right;\"> 49 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> M29 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> M34 </td>\n   <td style=\"text-align:right;\"> 18 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> F32 </td>\n   <td style=\"text-align:right;\"> 42 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> F26 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\nFor this example, we will split the `Year` column into two columns,\none that specifies the gender and one that specifies the age.  The\nvalues are going to be separated after the first character.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata.c |> separate(Year,\n                    into = c(\"Gender\", \"Age\"),\n                    sep = 1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Gender Age Resp1\n1       F  33    23\n2       M  27    55\n3       M  33    33\n4       M  26    36\n5       F  21    12\n6       F  34    49\n7       M  29     0\n8       M  34    18\n9       F  32    42\n10      F  26     0\n```\n\n\n:::\n:::\n\n\n\n# Merging (`_join`) data sets\n\nIt is common to have data associated with a particular study organised\ninto a number of separate data tables (databases etc). In fact, large\ndata sets are best managed in databases. However, statistical analyses\ngenerally require all data to be encapsulated within a single data\nstructure. Therefore, prior to analysis, it is necessary to bring\ntogether multiple sources.\n\nThis phase of data preparation can be one of the most difficult to get\nright and verify that it is correct (particularly for large data\nsets).\n\nMerging (or joining) involves creating a new data set that comprises\ninformation from two data sets. The resulting joined data set contains\nall fields from both data sets. The data sets are alignd together\naccording to fields they have in common. Matching records in these\ncommon fields are used to select a row from each input data set to be\ncombined.\n\nThere are numerous alternative ways of defining what should happen in\nthe event that common records do not occur in both sets. For example,\nwe could specify that only fully matching records be included in the\nfinal data set. Alternatively, we could specify that all records be\nincluded from both sets and thus the resulting data set will contain\nmissing values. The following describe these various options.\n\n- left join\n  - return all rows and columns from the left data set\n  - return all columns from the right data set\n  - new columns for unmatched rows from the right data sets receive NA\n    values\n  - when there are multiple matches, all combinations included\n\n\n\n::: {.cell class='tikz'}\n::: {.cell-output-display}\n![](04_data_wrangling_files/figure-html/tikz_leftjoin-1.png){width=672}\n:::\n:::\n\n\n\n- right join\n  - return all rows and columns from the right data set\n  - return all columns from the left data set\n  - new columns for unmatched rows from the left data sets receive NA\n    values\n  - when there are multiple matches, all combinations included\n  \n\n\n::: {.cell class='tikz'}\n::: {.cell-output-display}\n![](04_data_wrangling_files/figure-html/tikz_rightjoin-1.png){width=672}\n:::\n:::\n\n\n\n- inner join\n  - return all columns from the left and right data set\n  - return only rows that match from left and right data sets\n  - when there are multiple matches, all combinations included\n\n\n\n::: {.cell class='tikz'}\n::: {.cell-output-display}\n![](04_data_wrangling_files/figure-html/tikz_innerjoin-1.png){width=672}\n:::\n:::\n\n\n\n- semi join\n  - return all rows from the left data set that match with rows from\n    the right data set\n  - keep only the columns from the left data set\n\n\n\n::: {.cell class='tikz'}\n::: {.cell-output-display}\n![](04_data_wrangling_files/figure-html/tikz_semijoin-1.png){width=672}\n:::\n:::\n\n\n\n- anti join\n  - return only the rows from the left data set that do not match with\n    rows from the right data set\n  - keep only the columns from the left data set\n\n\n\n::: {.cell class='tikz'}\n::: {.cell-output-display}\n![](04_data_wrangling_files/figure-html/tikz_antijoin-1.png){width=672}\n:::\n:::\n\n\n\n- full join\n  - return all rows and columns from the left and right data set\n  - unmatched rows from either left data sets receive NA values in the\n    associated new columns\n\n\n\n::: {.cell class='tikz'}\n::: {.cell-output-display}\n![](04_data_wrangling_files/figure-html/tikz_fulljoin-1.png){width=672}\n:::\n:::\n\n\n\nTo illustrate the above, we will use the `data.bio` and `data.chem`\ndatasets.  The `data.bio` dataset mimics a typical ecological data set\nin which there are a number of ecological responses (`Resp1` and\n`Resp2`) along with the associated hierarchical design structure.\nThis data set is intentionally missing data for `Subplot` `S3`. The\n`data.chem` dataset has the same hierarchical design structure, yet\nrecords the two chemical analytes (`Chem1` and `Chem2`).  This data\nset is intentionally missing data for `Subplot` `S7`.\n\n:::: {.columns style=\"display:flex;justify-content:space-evenly;\"}\n\n::: {.column style=\"width:48%;\"}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n`````{=html}\n<table class=\"paperTable\">\n <thead>\n  <tr>\n   <th style=\"text-align:right;\"> Resp1 </th>\n   <th style=\"text-align:right;\"> Resp2 </th>\n   <th style=\"text-align:left;\"> Between </th>\n   <th style=\"text-align:left;\"> Plot </th>\n   <th style=\"text-align:left;\"> Subplot </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:right;\"> 8 </td>\n   <td style=\"text-align:right;\"> 18 </td>\n   <td style=\"text-align:left;\"> A1 </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> S1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 10 </td>\n   <td style=\"text-align:right;\"> 21 </td>\n   <td style=\"text-align:left;\"> A1 </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> S2 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 11 </td>\n   <td style=\"text-align:right;\"> 23 </td>\n   <td style=\"text-align:left;\"> A1 </td>\n   <td style=\"text-align:left;\"> P2 </td>\n   <td style=\"text-align:left;\"> S4 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 14 </td>\n   <td style=\"text-align:right;\"> 22 </td>\n   <td style=\"text-align:left;\"> A2 </td>\n   <td style=\"text-align:left;\"> P3 </td>\n   <td style=\"text-align:left;\"> S5 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 12 </td>\n   <td style=\"text-align:right;\"> 24 </td>\n   <td style=\"text-align:left;\"> A2 </td>\n   <td style=\"text-align:left;\"> P3 </td>\n   <td style=\"text-align:left;\"> S6 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 11 </td>\n   <td style=\"text-align:right;\"> 23 </td>\n   <td style=\"text-align:left;\"> A2 </td>\n   <td style=\"text-align:left;\"> P4 </td>\n   <td style=\"text-align:left;\"> S7 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 9 </td>\n   <td style=\"text-align:right;\"> 20 </td>\n   <td style=\"text-align:left;\"> A2 </td>\n   <td style=\"text-align:left;\"> P4 </td>\n   <td style=\"text-align:left;\"> S8 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 14 </td>\n   <td style=\"text-align:right;\"> 11 </td>\n   <td style=\"text-align:left;\"> A3 </td>\n   <td style=\"text-align:left;\"> P5 </td>\n   <td style=\"text-align:left;\"> S9 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 11 </td>\n   <td style=\"text-align:right;\"> 22 </td>\n   <td style=\"text-align:left;\"> A3 </td>\n   <td style=\"text-align:left;\"> P5 </td>\n   <td style=\"text-align:left;\"> S10 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 8 </td>\n   <td style=\"text-align:right;\"> 24 </td>\n   <td style=\"text-align:left;\"> A3 </td>\n   <td style=\"text-align:left;\"> P6 </td>\n   <td style=\"text-align:left;\"> S11 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:right;\"> 16 </td>\n   <td style=\"text-align:left;\"> A3 </td>\n   <td style=\"text-align:left;\"> P6 </td>\n   <td style=\"text-align:left;\"> S12 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\n:::\n\n::: {.column style=\"width:4%;\"}\n\n:::\n\n::: {.column style=\"width:48%;\"}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n`````{=html}\n<table class=\"paperTable\">\n <thead>\n  <tr>\n   <th style=\"text-align:right;\"> Chem1 </th>\n   <th style=\"text-align:right;\"> Chem2 </th>\n   <th style=\"text-align:left;\"> Between </th>\n   <th style=\"text-align:left;\"> Plot </th>\n   <th style=\"text-align:left;\"> Subplot </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:right;\"> 1.452878 </td>\n   <td style=\"text-align:right;\"> 0.8858208 </td>\n   <td style=\"text-align:left;\"> A1 </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> S1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 3.266253 </td>\n   <td style=\"text-align:right;\"> 0.1800177 </td>\n   <td style=\"text-align:left;\"> A1 </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> S2 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 1.178652 </td>\n   <td style=\"text-align:right;\"> 5.0780682 </td>\n   <td style=\"text-align:left;\"> A1 </td>\n   <td style=\"text-align:left;\"> P2 </td>\n   <td style=\"text-align:left;\"> S3 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 13.400350 </td>\n   <td style=\"text-align:right;\"> 1.5762780 </td>\n   <td style=\"text-align:left;\"> A1 </td>\n   <td style=\"text-align:left;\"> P2 </td>\n   <td style=\"text-align:left;\"> S4 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 3.779183 </td>\n   <td style=\"text-align:right;\"> 1.6222430 </td>\n   <td style=\"text-align:left;\"> A2 </td>\n   <td style=\"text-align:left;\"> P3 </td>\n   <td style=\"text-align:left;\"> S5 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 1.196657 </td>\n   <td style=\"text-align:right;\"> 4.2369184 </td>\n   <td style=\"text-align:left;\"> A2 </td>\n   <td style=\"text-align:left;\"> P3 </td>\n   <td style=\"text-align:left;\"> S6 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 5.687807 </td>\n   <td style=\"text-align:right;\"> 2.9859003 </td>\n   <td style=\"text-align:left;\"> A2 </td>\n   <td style=\"text-align:left;\"> P4 </td>\n   <td style=\"text-align:left;\"> S8 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 4.834518 </td>\n   <td style=\"text-align:right;\"> 4.1328919 </td>\n   <td style=\"text-align:left;\"> A3 </td>\n   <td style=\"text-align:left;\"> P5 </td>\n   <td style=\"text-align:left;\"> S9 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 2.002931 </td>\n   <td style=\"text-align:right;\"> 3.6043314 </td>\n   <td style=\"text-align:left;\"> A3 </td>\n   <td style=\"text-align:left;\"> P5 </td>\n   <td style=\"text-align:left;\"> S10 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 12.326867 </td>\n   <td style=\"text-align:right;\"> 1.7763576 </td>\n   <td style=\"text-align:left;\"> A3 </td>\n   <td style=\"text-align:left;\"> P6 </td>\n   <td style=\"text-align:left;\"> S11 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 4.014221 </td>\n   <td style=\"text-align:right;\"> 0.2255188 </td>\n   <td style=\"text-align:left;\"> A3 </td>\n   <td style=\"text-align:left;\"> P6 </td>\n   <td style=\"text-align:left;\"> S12 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\n:::\n\n::::\n\n::: {.panel-tabset .tabset-left}\n\n### Retain all data (`full_join`)\nA full or _outer_ join between `data.bio` and `data.chem`\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata.bio |> full_join(data.chem)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Resp1 Resp2 Between Plot Subplot     Chem1     Chem2\n1      8    18      A1   P1      S1  1.452878 0.8858208\n2     10    21      A1   P1      S2  3.266253 0.1800177\n3     11    23      A1   P2      S4 13.400350 1.5762780\n4     14    22      A2   P3      S5  3.779183 1.6222430\n5     12    24      A2   P3      S6  1.196657 4.2369184\n6     11    23      A2   P4      S7        NA        NA\n7      9    20      A2   P4      S8  5.687807 2.9859003\n8     14    11      A3   P5      S9  4.834518 4.1328919\n9     11    22      A3   P5     S10  2.002931 3.6043314\n10     8    24      A3   P6     S11 12.326867 1.7763576\n11     2    16      A3   P6     S12  4.014221 0.2255188\n12    NA    NA      A1   P2      S3  1.178652 5.0780682\n```\n\n\n:::\n:::\n\n\n\nNote that although all `Subplot`s are present, there are missing\nvalues for `Subplot` `S3` (last row) and `S7`.\n\n### Only retain full matches (`inner_join`)\nAn inner join between `data.bio` and `data.chem`\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata.bio |> inner_join(data.chem)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Resp1 Resp2 Between Plot Subplot     Chem1     Chem2\n1      8    18      A1   P1      S1  1.452878 0.8858208\n2     10    21      A1   P1      S2  3.266253 0.1800177\n3     11    23      A1   P2      S4 13.400350 1.5762780\n4     14    22      A2   P3      S5  3.779183 1.6222430\n5     12    24      A2   P3      S6  1.196657 4.2369184\n6      9    20      A2   P4      S8  5.687807 2.9859003\n7     14    11      A3   P5      S9  4.834518 4.1328919\n8     11    22      A3   P5     S10  2.002931 3.6043314\n9      8    24      A3   P6     S11 12.326867 1.7763576\n10     2    16      A3   P6     S12  4.014221 0.2255188\n```\n\n\n:::\n:::\n\n\n\nNote that both `Subplot`s `S3` and `S7` are missing.\n\n### Retain all left data at expense of right (`left_join`)\nA left join between `data.bio` and `data.chem`\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata.bio |> left_join(data.chem)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Resp1 Resp2 Between Plot Subplot     Chem1     Chem2\n1      8    18      A1   P1      S1  1.452878 0.8858208\n2     10    21      A1   P1      S2  3.266253 0.1800177\n3     11    23      A1   P2      S4 13.400350 1.5762780\n4     14    22      A2   P3      S5  3.779183 1.6222430\n5     12    24      A2   P3      S6  1.196657 4.2369184\n6     11    23      A2   P4      S7        NA        NA\n7      9    20      A2   P4      S8  5.687807 2.9859003\n8     14    11      A3   P5      S9  4.834518 4.1328919\n9     11    22      A3   P5     S10  2.002931 3.6043314\n10     8    24      A3   P6     S11 12.326867 1.7763576\n11     2    16      A3   P6     S12  4.014221 0.2255188\n```\n\n\n:::\n:::\n\n\n\nNote that both `Subplot` `S3` are missing and `Subplot` `S7` only has\nNA values for the chem data.\n\n### Retain all right data at expense of left (`right_join`)\nA left join between `data.bio` and `data.chem`\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata.bio |> right_join(data.chem)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Resp1 Resp2 Between Plot Subplot     Chem1     Chem2\n1      8    18      A1   P1      S1  1.452878 0.8858208\n2     10    21      A1   P1      S2  3.266253 0.1800177\n3     11    23      A1   P2      S4 13.400350 1.5762780\n4     14    22      A2   P3      S5  3.779183 1.6222430\n5     12    24      A2   P3      S6  1.196657 4.2369184\n6      9    20      A2   P4      S8  5.687807 2.9859003\n7     14    11      A3   P5      S9  4.834518 4.1328919\n8     11    22      A3   P5     S10  2.002931 3.6043314\n9      8    24      A3   P6     S11 12.326867 1.7763576\n10     2    16      A3   P6     S12  4.014221 0.2255188\n11    NA    NA      A1   P2      S3  1.178652 5.0780682\n```\n\n\n:::\n:::\n\n\n\nNote that both `Subplot` `S7` are missing and `Subplot` `S3` only has\nNA values for the bio data.\n\n### Return the rows of left that are not matched in right (`anti_join`)\nAn anti join between `data.bio` and `data.chem`\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata.bio |> anti_join(data.chem)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Resp1 Resp2 Between Plot Subplot\n1    11    23      A2   P4      S7\n```\n\n\n:::\n:::\n\n\n\nNote that `Subplot` `S7` is returned indicating that it in the right\ndataset, yet absent from the left.\n\n### Return the rows and columns of the left that are matched in the right (`anti_join`)\nAn semi join between `data.bio` and `data.chem`\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata.bio |> semi_join(data.chem)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Resp1 Resp2 Between Plot Subplot\n1      8    18      A1   P1      S1\n2     10    21      A1   P1      S2\n3     11    23      A1   P2      S4\n4     14    22      A2   P3      S5\n5     12    24      A2   P3      S6\n6      9    20      A2   P4      S8\n7     14    11      A3   P5      S9\n8     11    22      A3   P5     S10\n9      8    24      A3   P6     S11\n10     2    16      A3   P6     S12\n```\n\n\n:::\n:::\n\n\n\nNote that `Subplot` `S3` and `S7` are missing and only the bio data\nare included.\n\n:::\n\n\n## VLOOKUP in R\n\nLookup tables provide a way of inserting a column of data into a large\ndata set such that the entries in the new column are determined by a\nrelational match within another data set (the lookup table). For\nexample, the main data set might contain data collected from a number\nof sites (Plots). Elsewhere we may have a data set that just contains\nthe set of sites and their corresponding latitudes and longitudes\n(geographical lookup table). We could incorporate these latitudes and\nlongitudes into the main data set by merging against the geographical\nlookup table. In Excel, this is referred to as vlookup, in a\nrelational database (and in `tidyverse`) it is referred to as a join.\n\nIf we again consider our `data.bio` data, but this time also consider\nthe `data.geo` data.  This later dataset contains the latitude and\nlongitude of each of the plots.\n\n:::: {.columns style=\"display:flex;justify-content:space-evenly;\"}\n\n::: {.column style=\"width:48%\"}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n`````{=html}\n<table class=\"paperTable\">\n <thead>\n  <tr>\n   <th style=\"text-align:right;\"> Resp1 </th>\n   <th style=\"text-align:right;\"> Resp2 </th>\n   <th style=\"text-align:left;\"> Between </th>\n   <th style=\"text-align:left;\"> Plot </th>\n   <th style=\"text-align:left;\"> Subplot </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:right;\"> 8 </td>\n   <td style=\"text-align:right;\"> 18 </td>\n   <td style=\"text-align:left;\"> A1 </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> S1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 10 </td>\n   <td style=\"text-align:right;\"> 21 </td>\n   <td style=\"text-align:left;\"> A1 </td>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:left;\"> S2 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 11 </td>\n   <td style=\"text-align:right;\"> 23 </td>\n   <td style=\"text-align:left;\"> A1 </td>\n   <td style=\"text-align:left;\"> P2 </td>\n   <td style=\"text-align:left;\"> S4 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 14 </td>\n   <td style=\"text-align:right;\"> 22 </td>\n   <td style=\"text-align:left;\"> A2 </td>\n   <td style=\"text-align:left;\"> P3 </td>\n   <td style=\"text-align:left;\"> S5 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 12 </td>\n   <td style=\"text-align:right;\"> 24 </td>\n   <td style=\"text-align:left;\"> A2 </td>\n   <td style=\"text-align:left;\"> P3 </td>\n   <td style=\"text-align:left;\"> S6 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 11 </td>\n   <td style=\"text-align:right;\"> 23 </td>\n   <td style=\"text-align:left;\"> A2 </td>\n   <td style=\"text-align:left;\"> P4 </td>\n   <td style=\"text-align:left;\"> S7 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 9 </td>\n   <td style=\"text-align:right;\"> 20 </td>\n   <td style=\"text-align:left;\"> A2 </td>\n   <td style=\"text-align:left;\"> P4 </td>\n   <td style=\"text-align:left;\"> S8 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 14 </td>\n   <td style=\"text-align:right;\"> 11 </td>\n   <td style=\"text-align:left;\"> A3 </td>\n   <td style=\"text-align:left;\"> P5 </td>\n   <td style=\"text-align:left;\"> S9 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 11 </td>\n   <td style=\"text-align:right;\"> 22 </td>\n   <td style=\"text-align:left;\"> A3 </td>\n   <td style=\"text-align:left;\"> P5 </td>\n   <td style=\"text-align:left;\"> S10 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 8 </td>\n   <td style=\"text-align:right;\"> 24 </td>\n   <td style=\"text-align:left;\"> A3 </td>\n   <td style=\"text-align:left;\"> P6 </td>\n   <td style=\"text-align:left;\"> S11 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:right;\"> 16 </td>\n   <td style=\"text-align:left;\"> A3 </td>\n   <td style=\"text-align:left;\"> P6 </td>\n   <td style=\"text-align:left;\"> S12 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\n:::\n\n::: {.column style=\"width:48%;\"}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n`````{=html}\n<table class=\"paperTable\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> Plot </th>\n   <th style=\"text-align:right;\"> LAT </th>\n   <th style=\"text-align:right;\"> LONG </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> P1 </td>\n   <td style=\"text-align:right;\"> 17.9605 </td>\n   <td style=\"text-align:right;\"> 145.4326 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P2 </td>\n   <td style=\"text-align:right;\"> 17.5210 </td>\n   <td style=\"text-align:right;\"> 146.1983 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P3 </td>\n   <td style=\"text-align:right;\"> 17.0011 </td>\n   <td style=\"text-align:right;\"> 146.3839 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P4 </td>\n   <td style=\"text-align:right;\"> 18.2350 </td>\n   <td style=\"text-align:right;\"> 146.7934 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P5 </td>\n   <td style=\"text-align:right;\"> 18.9840 </td>\n   <td style=\"text-align:right;\"> 146.0345 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> P6 </td>\n   <td style=\"text-align:right;\"> 20.1154 </td>\n   <td style=\"text-align:right;\"> 146.4672 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\n:::\n\n::::\n\n::: {.panel-tabset .tabset-left}\n\n### Keep all bio information (`left_join`)\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata.bio |> left_join(data.geo)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Resp1 Resp2 Between Plot Subplot     LAT     LONG\n1      8    18      A1   P1      S1 17.9605 145.4326\n2     10    21      A1   P1      S2 17.9605 145.4326\n3     11    23      A1   P2      S4 17.5210 146.1983\n4     14    22      A2   P3      S5 17.0011 146.3839\n5     12    24      A2   P3      S6 17.0011 146.3839\n6     11    23      A2   P4      S7 18.2350 146.7934\n7      9    20      A2   P4      S8 18.2350 146.7934\n8     14    11      A3   P5      S9 18.9840 146.0345\n9     11    22      A3   P5     S10 18.9840 146.0345\n10     8    24      A3   P6     S11 20.1154 146.4672\n11     2    16      A3   P6     S12 20.1154 146.4672\n```\n\n\n:::\n:::\n\n\n:::\n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}